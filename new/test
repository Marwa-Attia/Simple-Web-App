
Property changes on: src\main\resources\angular_io
___________________________________________________________________
Added: svn:ignore
   + node_modules
target

Added: bugtraq:number
   + true


Property changes on: src\main\resources\angular_io\app
___________________________________________________________________
Added: bugtraq:number
   + true

Index: src/main/resources/angular_io/app/app-mock-data.ts
===================================================================
--- src/main/resources/angular_io/app/app-mock-data.ts	(revision 0)
+++ src/main/resources/angular_io/app/app-mock-data.ts	(revision 0)
@@ -0,0 +1,23 @@
+import { InMemoryDbService } from 'angular-in-memory-web-api';
+export class AppMockData implements InMemoryDbService {
+    createDb() {
+        let hoganCall = [
+            { id: 1, message: 'total deals from batch select sql is not equal to verification size' },
+            { id: 2, message: 'success processed 0 loans' }
+        ];
+        let ordeFlood = [
+            { id: 1, "msg": "Flood ordered successfully, Order number = CF11935129001479241324754" },
+            { id: 2, "msg": "Flood ordered successfully, Order number = CF11935125555551332324754" }
+        ];
+        let eAppFormData = [
+            { id: 1234, colb: "bla bla bla", msg: "Failed to rebuild the message clob for EDN: 22913842" },
+            { id: 5678, colb: "bla bla bla 2", msg: "DealMessage  found for EDN : [22913842]"  }
+        ]
+         let vendorSimulation = [
+            { id: 1234, dealId:  1000060090,processInstanceId: 7769 },
+            { id: 5678, dealId:  1550060090,processInstanceId: 6669 },
+            { id: 100, msg:  "OK"}
+        ]
+        return { hoganCall, ordeFlood, eAppFormData,vendorSimulation };
+    }
+}

Property changes on: src\main\resources\angular_io\app\bootstrap
___________________________________________________________________
Added: bugtraq:number
   + true

Index: src/main/resources/angular_io/app/bootstrap/admin.module.ts
===================================================================
--- src/main/resources/angular_io/app/bootstrap/admin.module.ts	(revision 0)
+++ src/main/resources/angular_io/app/bootstrap/admin.module.ts	(revision 0)
@@ -0,0 +1,43 @@
+import { UpgradeAdapter } from '@angular/upgrade';
+// import { UpgradeModule } from '@angular/upgrade/static';
+import { InMemoryWebApiModule } from 'angular-in-memory-web-api';
+import {HttpModule} from '@angular/http';
+import { AppMockData }   from '../app-mock-data';
+import { FormsModule }   from '@angular/forms';
+import { NgModule }      from '@angular/core';
+import { BrowserModule } from '@angular/platform-browser';
+import { Location,LocationStrategy } from '@angular/common';
+import { DeactiveLoanHoganComponent} from '../views/partial/deactiveLoanHogan/deactive-loan-hogan.component';
+import { DeactiveLoanHoganService } from '../views/partial/deactiveLoanHogan/deactive-loan-hogan.service';
+import { OrderFloodService } from '../views/partial/orderFloodCertificate/order-flood.service';
+import { OrderFloodComponent } from '../views/partial/orderFloodCertificate/order-flood.component';
+import { VendorSimulationService } from '../views/partial/vendorSimulation/vendor-simulation.service';
+import { VendorSimulation } from '../views/partial/vendorSimulation/vendor-simulation.component';
+import { EAppService } from '../views/partial/eApp/eApp.service';
+import { RemoveActiveEAppFormMilestoneComponent } from '../views/partial/eApp/remove-active-eAppForm-milestone.component';
+import { ResubmiteAppDataComponent } from '../views/partial/eApp/resubmit-eAppForm.component';
+import { ReruneAppFormComponent } from '../views/partial/eApp/rerun-eAppForm.component';
+// import {UIRouterModule} from "ui-router-ng2";
+// import {uiRouterNgUpgrade, Ng1ToNg2Module} from "ui-router-ng1-to-ng2";
+ import { WFTabSet} from '../libs/wfTabSet.directive';
+ import { WFTab} from '../libs/wfTab.directive';
+import { WFGridDemoComponent} from '../demos/wfGrid.demo.component';
+import { WFFilterDirective} from '../libs/wfFilter.directive';
+import { WFComp} from '../libs/wfComp.directive';
+
+
+@NgModule({
+  imports: [
+       BrowserModule, FormsModule,HttpModule,InMemoryWebApiModule.forRoot(AppMockData)
+  ],
+  declarations: [ WFGridDemoComponent,WFFilterDirective,WFComp,WFTabSet,WFTab ,DeactiveLoanHoganComponent,OrderFloodComponent,VendorSimulation,RemoveActiveEAppFormMilestoneComponent,ResubmiteAppDataComponent,ReruneAppFormComponent],
+ 
+  providers: [DeactiveLoanHoganService,OrderFloodService,VendorSimulationService,EAppService,Location,LocationStrategy]
+})
+export class AdminModule { 
+// ngDoBootstrap() {}
+}
+
+const upgradeAdapter  = new UpgradeAdapter(AdminModule);
+
+export default upgradeAdapter;

Property changes on: src\main\resources\angular_io\app\demos
___________________________________________________________________
Added: bugtraq:number
   + true

Index: src/main/resources/angular_io/app/demos/wfGrid.demo.component.ts
===================================================================
--- src/main/resources/angular_io/app/demos/wfGrid.demo.component.ts	(revision 0)
+++ src/main/resources/angular_io/app/demos/wfGrid.demo.component.ts	(revision 0)
@@ -0,0 +1,64 @@
+import { Component } from '@angular/core';
+// import {CellComponent}from '../lib/cell.component';
+@Component({
+    selector : 'wf-grid-demo',
+    templateUrl : 'angular_io/app/demos/wfGrid.demo.html'
+})
+
+export class WFGridDemoComponent {
+        
+     constructor() {
+       console.log('WFGridDemoComponent Created'); 
+    }
+    wfCol: any = {
+        header : 'hello',
+        value : 'hi'
+    };
+    testRec : number;
+    records : any[] = [
+        { id : "A", city : "Cairo3", country : "Morocco" },
+        { id : "B", city : "Cairoe", country : "Egypt" },
+        { id : "C", city : "Caiewro", country : "France" },
+        { id : "D", city : "Caiewro", country : "USA" },
+        { id : "E", city : "Ca4iro", country : "Germany" },
+        { id : "F", city : "Caigro", country : "Iceland" },
+        { id : "G", city : "Caiewro", country : "Ireland" },
+        { id : "H", city : "Caiefro", country : "Spain" },
+        { id : "I", city : "Cairo", country : "Egypt" },
+        { id : "J", city : "Caifzxro", country : "Germany" },
+        { id : "K", city : "Casadiro", country : "Egypt" },
+        { id : "L", city : "Caixczzro", country : "Egypt" },
+        { id : "M", city : "Caixro", country : "Iceland" },
+        { id : "N", city : "Cariro", country : "Egypt" },
+        { id : "O", city : "Careiro", country : "Egypt" },
+        { id : "P", city : "Caeriro", country : "Egypt" },
+        { id : "Q", city : "Cadsiro", country : "France" },
+        { id : "R", city : "Caidsadsaro", country : "Morocco" },
+        { id : "S", city : "Cadiro", country : "USA" },
+        { id : "T", city : "Cairo", country : "USA" },
+        { id : "U", city : "Caddiro", country : "Spain" },
+        { id : "V", city : "Cadsairo", country : "Spain" },
+        { id : "W", city : "Cddiro", country : "Egypt" }
+    ];
+    sayHi(){
+    alert('Hi');    
+    }
+	
+	select():void{
+    alert('hi');
+    }
+select2():void{
+    alert('main');
+    }
+    deselect():void{
+    console.log("b5");
+        }
+}
+
+
+
+
+
+
+
+
Index: src/main/resources/angular_io/app/demos/wfGrid.demo.html
===================================================================
--- src/main/resources/angular_io/app/demos/wfGrid.demo.html	(revision 0)
+++ src/main/resources/angular_io/app/demos/wfGrid.demo.html	(revision 0)
@@ -0,0 +1,58 @@
+
+<div>
+	<div class="grid-label-big-lined">
+		<label>WFGrid Demo </label>
+	</div>
+
+	<!-- <wf-grid [detail]="dataset"  (loader)="alert()" >  -->
+	
+		<!-- <column [value]="'id'" [header]="'Id'">
+			 <a>{{dataset[this.value]}}</a>
+		</column> 
+		<column [value]="'city'"[header]="'City'"></column> 
+		<column [value]="'country'"[header]="'Country'"></column>  -->
+	<!-- </wf-grid> -->
+	
+	 <form #deForm="ngForm">
+    <div>
+      <label for="testRec">Record Count</label>
+    </div>
+    <div>
+      <input type="text" id="testRec" name="testRec"
+        [(ngModel)]="testRec" 
+        #Axa="ngModel"  />
+    </div>
+    <label>{{testRec}}</label>
+    <div
+      *ngIf="Axa.errors && (Axa.dirty || Axa.touched)"
+      class="alert alert-danger">
+      
+      <div [hidden]="!Axa.errors.pattern">Record Count must
+        be a number.</div>
+     
+    </div>
+    <ng2Comp [value]="'hi there!!'"></ng2Comp>
+    <button (click)="sayHi();">Click me</button>
+    </form>
+     <wftabset>
+    <wftab [tabTitle]="'Tab1'" active="true"> tab1 Content </wftab>
+    <wftab [tabTitle]="'Tab2'" > tab2 Content </wftab>
+    </wftabset> 
+	  <label>Should be here:</label>
+ <!--  <wf-tabset class="inboxSectionTab">
+    <wf-tab tabTitle="Main" (selectEvent)="select2($event)">
+    fsdgfds
+        </wf-tab>
+  
+        <wf-tab tabTitle="Errors"   (selectEvent)="select($event)" (deselectEvent)="deselect($event)">
+      Any HTML code in Error tab
+        </wf-tab>
+  
+    </wf-tabset> -->
+<!-- <column [header]="'Hi'" [value]="'No'" [componentData]="componentData"></column>
+
+<div [column]="wfCol"></div>
+<div *ngFor="let row of myList ">
+<wfCell [html]="html" [val]="row"></wfCell> -->
+<!-- <wf-row [id]="'5'"></wf-row> -->
+</div >

Property changes on: src\main\resources\angular_io\app\libs
___________________________________________________________________
Added: bugtraq:number
   + true

Index: src/main/resources/angular_io/app/libs/wfComp.directive.ts
===================================================================
--- src/main/resources/angular_io/app/libs/wfComp.directive.ts	(revision 0)
+++ src/main/resources/angular_io/app/libs/wfComp.directive.ts	(revision 0)
@@ -0,0 +1,14 @@
+import {
+    Component, Input, OnChanges, ContentChildren, QueryList, AfterContentInit, Output, EventEmitter
+}
+from '@angular/core';
+@Component({
+    selector: 'ng2Comp',
+    template: '<div>{{value}}</div>'
+})
+export class WFComp {
+       @Input('value') value: string;
+     constructor() {
+       console.log('ng2Comp Created'); 
+    }
+}
\ No newline at end of file
Index: src/main/resources/angular_io/app/libs/wfFilter.directive.ts
===================================================================
--- src/main/resources/angular_io/app/libs/wfFilter.directive.ts	(revision 0)
+++ src/main/resources/angular_io/app/libs/wfFilter.directive.ts	(revision 0)
@@ -0,0 +1,61 @@
+import {
+	Directive, Input, OnChanges, SimpleChanges, forwardRef
+}
+from '@angular/core';
+import {
+	AbstractControl, NG_VALIDATORS, Validator, ValidatorFn, Validators
+}
+from '@angular/forms';
+export const WF_FILTER_VALIDATOR: any = {
+	provide: NG_VALIDATORS,
+	useExisting: forwardRef(() => WFFilterDirective),
+	multi: true
+};
+export function filterValidator(nameRe: RegExp): ValidatorFn {
+	return(control: AbstractControl): {
+		[key: string]: any
+	} => {
+		const name = control.value;
+		const no = nameRe.test(name);
+		return no ? {
+			'wfFilter': {
+				name
+			}
+		} : null;
+	};
+}@
+Directive({
+	selector: 'wfFilter[wfFilter][formControlName],[wfFilter][formControl],[wfFilter][ngModel]',
+	providers: [WF_FILTER_VALIDATOR],
+	host: {
+		'[attr.wfFilter]': 'wfFilter ? wfFilter : null'
+	}
+})
+export class WFFilterDirective implements Validator,
+OnChanges {
+	private _validator: ValidatorFn;
+	private _onChange: () => void;@
+	Input() wfFilter: string /*|RegExp*/ ;
+	ngOnChanges(changes: SimpleChanges): void {
+		if('wfFilter' in changes) {
+			this._createValidator();
+			if(this._onChange) this._onChange();
+		}
+	}
+	validate(c: AbstractControl): {
+		[key: string]: any
+	} {
+		return this._validator(c);
+	}
+	registerOnValidatorChange(fn: () => void): void {
+		this._onChange = fn;
+	}
+	private _createValidator(): void {
+		this._validator = Validators.pattern(this.wfFilter);
+	}
+}
+/*
+Copyright 2016 Google Inc. All Rights Reserved.
+Use of this source code is governed by an MIT-style license that
+can be found in the LICENSE file at http://angular.io/license
+*/
\ No newline at end of file
Index: src/main/resources/angular_io/app/libs/wfTab.directive.ts
===================================================================
--- src/main/resources/angular_io/app/libs/wfTab.directive.ts	(revision 0)
+++ src/main/resources/angular_io/app/libs/wfTab.directive.ts	(revision 0)
@@ -0,0 +1,15 @@
+import {
+    Component, Input, OnChanges, ContentChildren, QueryList, AfterContentInit, Output, EventEmitter
+}
+from '@angular/core';
+@Component({
+    selector: 'wftab',
+    template: '<div [hidden]="!active"><ng-content></ng-content></div>'
+})
+export class WFTab {
+    @Input('tabTitle') title: string;
+    @Input() active = false;
+    @Input() disabled = false;
+    @Output('selectEvent') onSelect = new EventEmitter();
+    @Output('deselectEvent') onDeSelect = new EventEmitter();
+}
\ No newline at end of file
Index: src/main/resources/angular_io/app/libs/wfTabSet.directive.ts
===================================================================
--- src/main/resources/angular_io/app/libs/wfTabSet.directive.ts	(revision 0)
+++ src/main/resources/angular_io/app/libs/wfTabSet.directive.ts	(revision 0)
@@ -0,0 +1,66 @@
+import { Component, Input, OnChanges, ContentChildren, QueryList, AfterContentInit} from '@angular/core';
+import { WFTab } from './wfTab.directive';
+@Component({
+    selector: 'wftabset',
+    template: '<div class="core-tabs">' +
+                 '<ul class="nav nav-tabs wf-tab-content tab-content" style="clear: both; min-width: 300px;" >' +
+                     '<li *ngFor="let tab of tabs"  [class.active]="tab.active" style="display:inline;" class="wf-tab-heading"  [class.disabled]="tab.disabled" >'+
+                         ' <a  (click)="selectTab(tab)" >{{tab.title}}</a>'+
+                     '</li>' +
+                  '</ul>' +
+                  '<ng-content></ng-content>' +
+                  '<div class="wf-nav-titles"></div>' +
+              '</div>',
+
+})
+export class WFTabSet implements AfterContentInit {
+    @ContentChildren(WFTab) tabs: QueryList<WFTab>;
+    @Input() titles: string;
+    @Input() vertical: boolean = false;
+    @Input() tabType: string = 'tabs';
+    @Input() direction: string = 'top';
+    @Input() tabsAbove: boolean = false;
+
+    ngAfterContentInit() {
+        // get all active tabs
+        let activeTabs = this.tabs.filter((tab) => tab.active);
+
+        // if there is no active tab set, activate the first
+        if (activeTabs.length === 0) {
+            this.selectTab(this.tabs.first);
+        }
+        if (this.direction != 'below') {
+            this.tabsAbove = false;
+        }
+    }
+
+    selectTab(tab: WFTab) {
+        // deactivate all tabs
+        this.tabs.toArray().forEach(function(tab) {
+
+            if (tab.active) {
+                tab.onDeSelect.emit();
+                tab.active = false;
+            }
+
+        });
+        tab.active = true;
+        console.log(tab);
+        tab.onSelect.emit();
+    }
+    addTab(tab: WFTab) {
+        this.tabs.toArray().push(tab);
+        if (this.tabs.length === 1 || tab.active) {
+            this.selectTab(tab);
+        }
+    }
+    removeTab(tab: WFTab) {
+        let index = this.tabs.toArray().indexOf(tab);
+        if (tab.active && this.tabs.length > 1) {
+            // If this is the last tab, select the previous tab. else, the next tab.
+            let newActiveIndex = index == this.tabs.length - 1 ? index - 1 : index + 1;
+            this.selectTab(this.tabs[newActiveIndex]);
+        }
+        this.tabs.toArray().splice(index, 1);
+    }
+}
Index: src/main/resources/angular_io/app/main.ts
===================================================================
--- src/main/resources/angular_io/app/main.ts	(revision 0)
+++ src/main/resources/angular_io/app/main.ts	(revision 0)
@@ -0,0 +1,52 @@
+/// <reference path="node_modules/@types/angular/index.d.ts" />
+
+import upgradeAdapter from './bootstrap/admin.module';
+import { DeactiveLoanHoganComponent} from './views/partial/deactiveLoanHogan/deactive-loan-hogan.component';
+import { OrderFloodComponent } from './views/partial/orderFloodCertificate/order-flood.component';
+import { VendorSimulation } from './views/partial/vendorSimulation/vendor-simulation.component';
+import { RemoveActiveEAppFormMilestoneComponent } from './views/partial/eApp/remove-active-eAppForm-milestone.component';
+import { ResubmiteAppDataComponent } from './views/partial/eApp/resubmit-eAppForm.component';
+import { ReruneAppFormComponent } from './views/partial/eApp/rerun-eAppForm.component';
+
+import { WFGridDemoComponent} from './demos/wfGrid.demo.component';
+import { WFTabSet} from './libs/wfTabSet.directive';
+import { WFTab} from './libs/wfTab.directive';
+import { WFFilterDirective} from './libs/wfFilter.directive';
+import { WFComp} from './libs/wfComp.directive';
+// import { DeactiveLoanHoganService } from './views/partial/deactiveLoanHogan/deactive-loan-hogan.service';
+// import angular from '@types/angular';
+angular.module('core')
+    .directive('wfDemo', <any>upgradeAdapter.downgradeNg2Component(WFGridDemoComponent));
+
+angular.module('core')
+    .directive('deactiveLoanHogan', <any>upgradeAdapter.downgradeNg2Component(DeactiveLoanHoganComponent));
+	
+angular.module('core')
+    .directive('orderFlood', <any>upgradeAdapter.downgradeNg2Component(OrderFloodComponent));
+angular.module('core')
+    .directive('vendorSimulation', <any>upgradeAdapter.downgradeNg2Component(VendorSimulation));
+angular.module('core')
+    .directive('removeActiveEappFormMilestone', <any>upgradeAdapter.downgradeNg2Component(RemoveActiveEAppFormMilestoneComponent));
+angular.module('core')
+    .directive('resubmitEappData', <any>upgradeAdapter.downgradeNg2Component(ResubmiteAppDataComponent));
+angular.module('core')
+    .directive('reruneAppForm', <any>upgradeAdapter.downgradeNg2Component(ReruneAppFormComponent));	
+	
+angular.module('core')
+  .directive('wffilter', <angular.IDirectiveFactory>upgradeAdapter.downgradeNg2Component(WFFilterDirective));
+angular.module('core')
+  .directive('wfComp', <angular.IDirectiveFactory>upgradeAdapter.downgradeNg2Component( WFComp));
+
+//angular.module('core')
+//  .directive('wftab', <any>upgradeAdapter.downgradeNg2Component({
+//    component: WFTab,
+//    inputs: ['tabTitle','active'],
+//    outputs: ['selectEvent','deselectEvent']
+//  } ));
+//
+//angular.module('core')
+//  .directive('wftabset', <any>upgradeAdapter.downgradeNg2Component({
+//    component: WFTab
+//  }));
+
+upgradeAdapter.bootstrap(document.documentElement, ['core']);

Property changes on: src\main\resources\angular_io\app\views
___________________________________________________________________
Added: bugtraq:number
   + true


Property changes on: src\main\resources\angular_io\app\views\partial
___________________________________________________________________
Added: bugtraq:number
   + true


Property changes on: src\main\resources\angular_io\app\views\partial\deactiveLoanHogan
___________________________________________________________________
Added: bugtraq:number
   + true

Index: src/main/resources/angular_io/app/views/partial/deactiveLoanHogan/deactive-loan-hogan.component.html
===================================================================
--- src/main/resources/angular_io/app/views/partial/deactiveLoanHogan/deactive-loan-hogan.component.html	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/deactiveLoanHogan/deactive-loan-hogan.component.html	(revision 0)
@@ -0,0 +1,68 @@
+
+<div>
+	<div class="grid-label-big-lined">
+		<label>Hogan Purge Indicator Update<br> (This screen is
+			to update the Hogan Purge Indicator for Deals Deactivated since
+			R2.14)
+		</label>
+	</div>
+	<div>
+		<label>Record Count (Must match the result of SQL run against
+			the CORE database)</label><br>
+	</div>
+
+	<form #hoganForm="ngForm">
+		<div>
+			<label for="recordCount">Record Count</label>
+		</div>
+		<div>
+			<input type="text" id="recordCount" name="recordCount"
+				[(ngModel)]="hoganCall.recordCount" maxlength="6" required
+				wfFilter="^[0-9]*$" #recordCount="ngModel" />
+		</div>
+		<div
+			*ngIf="recordCount.errors && (recordCount.dirty || recordCount.touched)"
+			class="alert alert-danger">
+			<div [hidden]="!recordCount.errors.required">Record Count is
+				required</div>
+			<div [hidden]="!recordCount.errors.pattern">Record Count must
+				be a number.</div>
+			<div [hidden]="!recordCount.errors.maxlength">Record Count
+				cannot be more than 6 characters long.</div>
+		</div>
+		<div class="form-group">
+
+			<label for="startDate">Start Date</label>
+		</div>
+		<div>
+			<input wf-input-css ui-date [(ngModel)]="hoganCall.startDate"
+				id="startDate" name="startDate" required #startDate="ngModel" />
+			<div
+				*ngIf="startDate.errors && (startDate.dirty || startDate.touched)"
+				class="alert alert-danger">
+				<div [hidden]="!startDate.errors.required">Start Date is
+					required</div>
+			</div>
+			<!--  <my-date-picker [options]="myDatePickerNormalOptions" (dateChanged)="onDateChanged($event)"
+                    ></my-date-picker> -->
+
+		</div>
+		<div class="form-group">
+			<label for="endDate">End Date</label>
+		</div>
+		<div>
+			<input wf-input-css ui-date [(ngModel)]="hoganCall.endDate"
+				id="endDate" name="endDate" required #endDate="ngModel" />
+			<div *ngIf="endDate.errors && (endDate.dirty || endDate.touched)"
+				class="alert alert-danger">
+				<div [hidden]="!endDate.errors.required">End Date is required</div>
+			</div>
+		</div>
+		<button id="runBtn" wf-button-css (click)="triggerCallHogan()"
+			[disabled]="!hoganForm.form.valid">Run</button>
+	</form>
+
+	<br> <label>(Only the person who knows the Record Count
+		will be able to run the Hogan Purge Indicator Update)</label> <br> <label>{{hoganCallErrorMessage}}</label>
+	<br> <label style="color: red;">{{error}}</label> <br>
+</div>
\ No newline at end of file
Index: src/main/resources/angular_io/app/views/partial/deactiveLoanHogan/deactive-loan-hogan.component.js
===================================================================
--- src/main/resources/angular_io/app/views/partial/deactiveLoanHogan/deactive-loan-hogan.component.js	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/deactiveLoanHogan/deactive-loan-hogan.component.js	(revision 0)
@@ -0,0 +1,75 @@
+"use strict";
+var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
+    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
+    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
+    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
+    return c > 3 && r && Object.defineProperty(target, key, r), r;
+};
+var __metadata = (this && this.__metadata) || function (k, v) {
+    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
+};
+var core_1 = require('@angular/core');
+var deactive_loan_hogan_service_1 = require('./deactive-loan-hogan.service');
+var DeactiveLoanHoganComponent = (function () {
+    function DeactiveLoanHoganComponent(deactiveLoanHoganService) {
+        this.deactiveLoanHoganService = deactiveLoanHoganService;
+        this.hoganCall = {
+            startDate: new Date(),
+            endDate: new Date(),
+            recordCount: 0
+        };
+    }
+    DeactiveLoanHoganComponent.prototype.triggerCallHogan = function () {
+        var _this = this;
+        var stDate = this.hoganCall.startDate;
+        var edDate = this.hoganCall.endDate;
+        var recCount = this.hoganCall.recordCount;
+        var list = null;
+        var obj;
+        if (!stDate || !edDate || !recCount) {
+            this.hoganCallErrorMessage = "Record Count, Start Date and End Date are required.";
+        }
+        else {
+            if (stDate && stDate < new Date(2014, 4, 15)) {
+                this.hoganCallErrorMessage = 'Start date cannot be prior to Release 2.14 implementation date (05/16/2014).';
+            }
+            else if (stDate && edDate && stDate > edDate) {
+                this.hoganCallErrorMessage = 'Start date cannot be after end date.';
+            }
+            else {
+                console.log("Service call obj");
+                console.log(this.hoganCall);
+                console.log(this.deactiveLoanHoganService.runCallHogan(this.hoganCall));
+                this.deactiveLoanHoganService.runCallHogan(this.hoganCall).subscribe(function (res) {
+                    var d = [];
+                    var body = res;
+                    var calls = body;
+                    var resId = Math.floor(Math.random() * 2) + 1;
+                    if (calls) {
+                        calls.forEach(function (call) {
+                            d.push(new deactive_loan_hogan_service_1.HoganCallResponse(call.message));
+                        });
+                    }
+                    _this.hoganCallErrorMessage = d[resId - 1].message;
+                }, function (error) {
+                    _this.error = error;
+                });
+                console.log(this.hoganCallErrorMessage);
+            }
+        }
+    };
+    DeactiveLoanHoganComponent.prototype.getService = function () {
+        return this.deactiveLoanHoganService;
+    };
+    DeactiveLoanHoganComponent = __decorate([
+        core_1.Component({
+            moduleId: module.id,
+            selector: 'deactive-loan-hogan',
+            templateUrl: 'deactive-loan-hogan.component.html'
+        }), 
+        __metadata('design:paramtypes', [deactive_loan_hogan_service_1.DeactiveLoanHoganService])
+    ], DeactiveLoanHoganComponent);
+    return DeactiveLoanHoganComponent;
+}());
+exports.DeactiveLoanHoganComponent = DeactiveLoanHoganComponent;
+//# sourceMappingURL=deactive-loan-hogan.component.js.map
\ No newline at end of file
Index: src/main/resources/angular_io/app/views/partial/deactiveLoanHogan/deactive-loan-hogan.component.spec.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/deactiveLoanHogan/deactive-loan-hogan.component.spec.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/deactiveLoanHogan/deactive-loan-hogan.component.spec.ts	(revision 0)
@@ -0,0 +1,77 @@
+/* tslint:disable:no-unused-variable */
+import { DeactiveLoanHoganComponent } from './deactive-loan-hogan.component';
+import {  RouterTestingModule} from '@angular/router/testing';
+import { async, ComponentFixture, inject, TestBed } from '@angular/core/testing';
+import { By }           from '@angular/platform-browser';
+import { DebugElement } from '@angular/core';
+import { FormsModule }   from '@angular/forms';
+import { Observable } from 'rxjs/Rx'
+import { DeactiveLoanHoganService, HoganCall, HoganCallResponse } from './deactive-loan-hogan.service';
+////////  SPECS  /////////////
+describe('DeactiveLoanHoganComponent', function() {
+    let de: DebugElement;
+    let comp: DeactiveLoanHoganComponent;
+    let fixture: ComponentFixture<DeactiveLoanHoganComponent>;
+    let element: any;
+    let mockData = [
+        { "message": "total deals from batch select sql is not equal to verification size" },
+        { "message": "success processed 0 loans" }
+    ] as HoganCallResponse[];
+    class MockDeactiveLoanHoganService {
+        runCallHogan(request: HoganCall): Observable<any> {
+            return Observable.of(mockData);
+        }
+
+    }
+    beforeEach(async(() => {
+        TestBed.configureTestingModule({
+            declarations: [DeactiveLoanHoganComponent],
+            imports: [RouterTestingModule, FormsModule],
+            providers: [{ provide: DeactiveLoanHoganService, useClass: MockDeactiveLoanHoganService }]
+        })
+            .compileComponents();
+    }));
+    let service: MockDeactiveLoanHoganService;
+    beforeEach(async(() => {
+        fixture = TestBed.createComponent(DeactiveLoanHoganComponent);
+        comp = fixture.componentInstance;
+        // get the component's injected StubHeroDetailService
+        service = fixture.debugElement.injector.get(DeactiveLoanHoganService);
+        //Another way to get injected service: service2=TestBed.get(DeactiveLoanHoganService);
+    }));
+
+    describe('Creating the component', () => {
+        it('should create component', () => expect(comp).toBeDefined());
+        it('can instantiate component with "new"', inject([DeactiveLoanHoganService], (service: DeactiveLoanHoganService) => {
+            expect(service).not.toBeNull('service should be provided');
+            let component = new DeactiveLoanHoganComponent(service);
+            expect(component instanceof DeactiveLoanHoganComponent).toBe(true, 'new component should be ok');
+        }));
+    });
+    describe('Calling service method from component', () => {
+         let call: HoganCall = {
+                startDate: new Date(),
+                endDate: new Date(),
+                recordCount: 1
+            };
+        it('should call service method with provided param through view', () => {
+           
+            element = fixture.nativeElement;
+            let btn = element.querySelector("button");
+            comp.hoganCall = call;
+            spyOn(service, "runCallHogan").and.returnValue(Observable.of(mockData));
+            btn.click();
+            expect(service.runCallHogan).toHaveBeenCalledWith(call);
+
+        });
+        it('should call service method with provided param through direct method call from the component object', () => {
+          
+            comp.hoganCall = call;
+            spyOn(service, "runCallHogan").and.returnValue(Observable.of(mockData));
+            comp.triggerCallHogan();
+            expect(service.runCallHogan).toHaveBeenCalledWith(call);
+
+        });
+    });
+});
+
Index: src/main/resources/angular_io/app/views/partial/deactiveLoanHogan/deactive-loan-hogan.component.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/deactiveLoanHogan/deactive-loan-hogan.component.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/deactiveLoanHogan/deactive-loan-hogan.component.ts	(revision 0)
@@ -0,0 +1,63 @@
+import { Component } from '@angular/core';
+import { DeactiveLoanHoganService, HoganCall, HoganCallResponse } from './deactive-loan-hogan.service';
+@Component({
+    selector: 'deactive-loan-hogan',
+    templateUrl: 'angular_io/app/views/partial/deactiveLoanHogan/deactive-loan-hogan.component.html'
+})
+
+export class DeactiveLoanHoganComponent {
+    hoganCallErrorMessage: string;
+    hoganCall: HoganCall = {
+        startDate: new Date(),
+        endDate: new Date(),
+        recordCount: 0
+    }
+    error: string;
+    constructor(private deactiveLoanHoganService: DeactiveLoanHoganService) { }
+    triggerCallHogan(): void {
+        let stDate: Date = this.hoganCall.startDate;
+        let edDate: Date = this.hoganCall.endDate;
+        let recCount: number = this.hoganCall.recordCount;
+        let list: HoganCallResponse[] = null;
+        let obj: HoganCallResponse;
+        if (!stDate || !edDate || !recCount) {
+            this.hoganCallErrorMessage = "Record Count, Start Date and End Date are required.";
+        } else {
+            if (stDate && stDate < new Date(2014, 4, 15)) {
+                this.hoganCallErrorMessage = 'Start date cannot be prior to Release 2.14 implementation date (05/16/2014).';
+            } else if (stDate && edDate && stDate > edDate) {
+                this.hoganCallErrorMessage = 'Start date cannot be after end date.';
+            } else {
+                console.log("Service call obj");
+                console.log(this.hoganCall);
+                console.log(this.deactiveLoanHoganService.runCallHogan(this.hoganCall));
+                this.deactiveLoanHoganService.runCallHogan(this.hoganCall).subscribe((res) => {
+                    let d: Array<HoganCallResponse> = [];
+                    let body: any = res;
+                    let calls: Array<HoganCallResponse> = body;
+                    let resId = Math.floor(Math.random() * 2) + 1;
+                    if (calls) {
+                        calls.forEach((call) => {
+                            d.push(new HoganCallResponse(call.message));
+                        })
+                    }
+                    this.hoganCallErrorMessage = d[resId - 1].message;
+                }, (error) => {
+                    this.error = <any>error;
+                });
+                console.log(this.hoganCallErrorMessage);
+            }
+        }
+    }
+    getService(): DeactiveLoanHoganService {
+        return this.deactiveLoanHoganService;
+    }
+}
+
+
+
+
+
+
+
+
Index: src/main/resources/angular_io/app/views/partial/deactiveLoanHogan/deactive-loan-hogan.service.spec.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/deactiveLoanHogan/deactive-loan-hogan.service.spec.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/deactiveLoanHogan/deactive-loan-hogan.service.spec.ts	(revision 0)
@@ -0,0 +1,96 @@
+/* tslint:disable:no-unused-variable */
+import { async, ComponentFixture, inject, TestBed } from '@angular/core/testing';
+import { By }           from '@angular/platform-browser';
+import { DebugElement } from '@angular/core';
+import { MockBackend, MockConnection} from '@angular/http/testing';
+import {HttpModule, Http, XHRBackend, Response, ResponseOptions} from '@angular/http';
+import { Observable } from 'rxjs/Observable';
+import 'rxjs/add/observable/of';
+import { DeactiveLoanHoganService, HoganCall, HoganCallResponse } from './deactive-loan-hogan.service';
+////////  SPECS  /////////////
+describe('DeactiveLoanHoganService', function() {
+
+    const mockData = () => [
+        {  "message": "total deals from batch select sql is not equal to verification size" },
+        {  "message": "success processed 0 loans" }
+    ] as HoganCallResponse[];
+
+    beforeEach(async(() => {
+        TestBed.configureTestingModule({
+            imports: [HttpModule],
+            providers: [DeactiveLoanHoganService, { provide: XHRBackend, useClass: MockBackend }]
+        })
+            .compileComponents();
+    }));
+
+    describe('Creating the service', () => {
+        it('can instantiate service when inject service',
+            inject([DeactiveLoanHoganService], (service: DeactiveLoanHoganService) => {
+                expect(service instanceof DeactiveLoanHoganService).toBe(true);
+            }));
+        it('can instantiate service with "new"', inject([Http], (http: Http) => {
+            expect(http).not.toBeNull('http should be provided');
+            let service = new DeactiveLoanHoganService(http);
+            expect(service instanceof DeactiveLoanHoganService).toBe(true, 'new service should be ok');
+        }));
+        it('can provide the mockBackend as XHRBackend',
+            inject([XHRBackend], (backend: MockBackend) => {
+                expect(backend).not.toBeNull('backend should be provided');
+            }));
+
+    });
+
+    describe('Calling the service', () => {
+        let backend: MockBackend;
+        let service: DeactiveLoanHoganService;
+        let callRes: HoganCallResponse[];
+        let response: Response;
+        let call: HoganCall = {
+            startDate: new Date(),
+            endDate: new Date(),
+            recordCount: 0
+        };
+        
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new DeactiveLoanHoganService(http);
+            callRes = mockData();
+            let options = new ResponseOptions({ status: 200, body: { data: callRes } });
+            response = new Response(options);
+        }));
+
+        it('should be able to get the correct no of calls when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.runCallHogan(call).toPromise()
+                // .then(() => Promise.reject('deliberate'))
+                .then(res => {
+                     let b: any =res;
+                    expect(b.length).toBe(callRes.length,
+                        'should be able to get the correct no of calls when using toPromise');
+                });
+        })));
+
+        it('should have expected calls when using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.runCallHogan(call)
+                .do(res => {
+                    let b: any =res;
+                    expect(b.length).toBe(callRes.length,
+                        'should have expected calls when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+
+        it('should be OK returning no calls', async(inject([], () => {
+            let resp = new Response(new ResponseOptions({ status: 200, body: { data: [] } }));
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(resp));
+            service.runCallHogan(call)
+                .do(res => {
+                     let b: any =res;
+                    expect(b.length).toBe(0, 'should have no calls');
+                })
+                .toPromise();
+        })));
+    });
+});
+
Index: src/main/resources/angular_io/app/views/partial/deactiveLoanHogan/deactive-loan-hogan.service.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/deactiveLoanHogan/deactive-loan-hogan.service.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/deactiveLoanHogan/deactive-loan-hogan.service.ts	(revision 0)
@@ -0,0 +1,53 @@
+
+import { Injectable } from '@angular/core';
+import { Http, Request, RequestOptionsArgs, Response, XHRBackend, RequestOptions, ConnectionBackend, Headers} from '@angular/http';
+//import { CoreHttpService } from '../lib/core-http.service';
+import { Observable }     from 'rxjs/Observable';
+import 'rxjs/Rx';
+@Injectable()
+export class DeactiveLoanHoganService {
+
+    private hoganCallURL = '/app/hoganCall';  // URL to web API
+
+    constructor(private coreHttpService: Http) {
+    }
+
+    runCallHogan(requestData: HoganCall): Observable<Response> {
+        console.log(requestData);
+        return this.coreHttpService.get(this.hoganCallURL).map(this.extractData).catch(this.handleError);
+    }
+    private extractData(res: Response) {
+        let body = res.json();
+        if (body != null) {
+            return body.data
+        } else {
+            return {};
+        }
+    }
+    private handleError(error: Response | any) {
+        // In a real world app, we might use a remote logging infrastructure
+        let errMsg: string;
+        if (error instanceof Response) {
+            const body = error.json() || '';
+            const err = body.error || JSON.stringify(body);
+            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;
+        } else {
+            errMsg = error.message ? error.message : error.toString();
+        }
+        console.error(errMsg);
+        return Observable.throw(errMsg);
+    }
+}
+
+export class HoganCallResponse {
+    message: string;
+    constructor(m: string) {
+        this.message = m;
+    }
+}
+
+export class HoganCall {
+    startDate: Date;
+    endDate: Date;
+    recordCount: number;
+}
\ No newline at end of file

Property changes on: src\main\resources\angular_io\app\views\partial\eApp
___________________________________________________________________
Added: bugtraq:number
   + true

Index: src/main/resources/angular_io/app/views/partial/eApp/eApp.service.spec.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/eApp/eApp.service.spec.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/eApp/eApp.service.spec.ts	(revision 0)
@@ -0,0 +1,176 @@
+/* tslint:disable:no-unused-variable */
+import { async, ComponentFixture, inject, TestBed } from '@angular/core/testing';
+import { By }           from '@angular/platform-browser';
+import { DebugElement } from '@angular/core';
+import { MockBackend, MockConnection} from '@angular/http/testing';
+import {HttpModule, Http, XHRBackend, Response, ResponseOptions} from '@angular/http';
+import { Observable } from 'rxjs/Observable';
+import 'rxjs/add/observable/of';
+import { EAppService} from './eApp.service';
+////////  SPECS  /////////////
+describe('EAppService', function() {
+
+
+
+    const mockData = { "msg": "total deals from batch select sql is not equal to verification size" };
+    beforeEach(async(() => {
+        TestBed.configureTestingModule({
+            imports: [HttpModule],
+            providers: [EAppService, { provide: XHRBackend, useClass: MockBackend }]
+        })
+            .compileComponents();
+    }));
+
+    describe('Creating the service', () => {
+        it('can instantiate service when inject service',
+            inject([EAppService], (service: EAppService) => {
+                expect(service instanceof EAppService).toBe(true);
+            }));
+        it('can instantiate service with "new"', inject([Http], (http: Http) => {
+            expect(http).not.toBeNull('http should be provided');
+            let service = new EAppService(http);
+            expect(service instanceof EAppService).toBe(true, 'new service should be ok');
+        }));
+        it('can provide the mockBackend as XHRBackend',
+            inject([XHRBackend], (backend: MockBackend) => {
+                expect(backend).not.toBeNull('backend should be provided');
+            }));
+
+    });
+
+    describe('Calling removeActiveEappFormMilestone service', () => {
+        let backend: MockBackend;
+        let service: EAppService;
+        let response: Response;
+        let edn: '1234';
+        let status: number;
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new EAppService(http);
+            let options = new ResponseOptions({ status: 204, body: { data: [] } });
+            response = new Response(options);
+        }));
+
+        it('should return the correct Status when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.removeActiveEappFormMilestone(edn).toPromise()
+                .then(res => {
+                    let b: any = res;
+                    expect(b.status).toBe(204, 'should return the correct Status code when using toPromise');
+                });
+        })));
+
+        it('should return the correct Status using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.removeActiveEappFormMilestone(edn)
+                .do(res => {
+                    let b: any = res;
+                    expect(b.status).toBe(204, 'should return the correct Status code when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+    });
+
+    describe('Calling reRuneAppFormData service', () => {
+        let backend: MockBackend;
+        let service: EAppService;
+        let response: Response;
+        let edn: '1234';
+        let status: number;
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new EAppService(http);
+            let options = new ResponseOptions({ status: 200, body: { data: mockData } });
+            response = new Response(options);
+        }));
+
+        it('should return the correct data when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.reRuneAppFormData(edn).toPromise()
+                .then(res => {
+                    let b: any = res.json();
+                    expect(b.data.msg).toBe(mockData.msg, 'should return the correct data when using toPromise');
+                });
+        })));
+
+        it('should return the correct data using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.reRuneAppFormData(edn)
+                .do(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.msg).toBe(mockData.msg, 'should return the correct data when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+    });
+
+    describe('Calling getEappFormData service', () => {
+        let backend: MockBackend;
+        let service: EAppService;
+        let response: Response;
+        let edn: '1234';
+        let status: number;
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new EAppService(http);
+            let options = new ResponseOptions({ status: 200, body: { data: mockData } });
+            response = new Response(options);
+        }));
+
+        it('should return the correct data when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.getEappFormData(edn).toPromise()
+                .then(res => {
+                    let b: any = res;
+                    expect(b.msg).toBe(mockData.msg, 'should return the correct data when using toPromise');
+                });
+        })));
+
+        it('should return the correct data using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.getEappFormData(edn)
+                .do(res => {
+                    let b: any = res;
+                    console.log(b);
+                    expect(b.msg).toBe(mockData.msg, 'should return the correct data when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+    });
+
+    describe('Calling saveEappFormData service', () => {
+        let backend: MockBackend;
+        let service: EAppService;
+        let response: Response;
+        let edn: '1234';
+        let msg: string = "abc abc";
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new EAppService(http);
+            let options = new ResponseOptions({ status: 200, body: { data: mockData } });
+            response = new Response(options);
+        }));
+
+        it('should return the correct data when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.saveEappFormData(edn, msg).toPromise()
+                .then(res => {
+                    let b: any = res.json();
+                    expect(b.data.msg).toBe(mockData.msg, 'should return the correct data when using toPromise');
+                });
+        })));
+
+        it('should return the correct data using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.saveEappFormData(edn, msg)
+                .do(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.msg).toBe(mockData.msg, 'should return the correct data when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+    });
+});
+
Index: src/main/resources/angular_io/app/views/partial/eApp/eApp.service.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/eApp/eApp.service.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/eApp/eApp.service.ts	(revision 0)
@@ -0,0 +1,49 @@
+import { Injectable } from '@angular/core';
+import { Http, Request, RequestOptionsArgs, Response, XHRBackend, RequestOptions, ConnectionBackend, Headers} from '@angular/http';
+//import { CoreHttpService } from '../lib/core-http.service';
+import { Observable }     from 'rxjs/Observable';
+import 'rxjs/Rx';
+
+@Injectable()
+export class EAppService {
+   // edn:string;
+   private baseUrl='/app/eAppFormData/';// URL to json mock data
+    private headers = new Headers({'Content-Type': 'application/json'});
+     constructor(private coreHttpService: Http) {
+
+    }
+    
+    removeActiveEappFormMilestone(edn: string): Observable<Response> {
+     let   restUrl =  this.baseUrl+edn;
+        return this.coreHttpService.delete(restUrl,{headers: this.headers});
+    }
+    reRuneAppFormData(edn: string):  Observable<Response> {
+        let   restUrl =  this.baseUrl+edn;
+        return this.coreHttpService.post(restUrl,JSON.stringify({id: edn}),{headers: this.headers}); 
+    }
+     saveEappFormData(edn: string,colb: string):  Observable<Response> {
+        let   restUrl =  this.baseUrl+edn;
+        return this.coreHttpService.put(restUrl,JSON.stringify({id: edn,colb:colb}),{headers: this.headers}); 
+    }
+    getEappFormData(edn: string): Observable<Response>{
+          let   restUrl =  this.baseUrl+edn;
+         return this.coreHttpService.get(restUrl).map(this.extractData). catch(this.handleError); 
+    }
+        private extractData(res: Response) {
+            let body = res.json();
+            return body.data || {};
+        }
+        private handleError(error: Response | any) {
+            // In a real world app, we might use a remote logging infrastructure
+            let errMsg: string;
+            if (error instanceof Response) {
+                const body = error.json() || '';
+                const err = body.error || JSON.stringify(body);
+                errMsg = `${error.status} - ${error.statusText || ''} ${err}`;
+            } else {
+                errMsg = error.message ? error.message : error.toString();
+            }
+            console.error(errMsg);
+            return Observable.throw(errMsg);
+        }
+}
Index: src/main/resources/angular_io/app/views/partial/eApp/remove-active-eAppForm-milestone.component.spec.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/eApp/remove-active-eAppForm-milestone.component.spec.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/eApp/remove-active-eAppForm-milestone.component.spec.ts	(revision 0)
@@ -0,0 +1,75 @@
+/* tslint:disable:no-unused-variable */
+import { RemoveActiveEAppFormMilestoneComponent } from './remove-active-eAppForm-milestone.component';
+import {  RouterTestingModule} from '@angular/router/testing';
+import { async, ComponentFixture, inject, TestBed } from '@angular/core/testing';
+import { By }           from '@angular/platform-browser';
+import { DebugElement } from '@angular/core';
+import { FormsModule }   from '@angular/forms';
+import { Observable } from 'rxjs/Rx'
+import { EAppService } from './eApp.service';
+import { Location } from '@angular/common';
+////////  SPECS  /////////////
+describe('RemoveActiveEAppFormMilestoneComponent', function() {
+    let de: DebugElement;
+    let comp: RemoveActiveEAppFormMilestoneComponent;
+    let fixture: ComponentFixture<RemoveActiveEAppFormMilestoneComponent>;
+    let element: any;
+    let mockData = [
+        { id: 1234, colb: "bla bla bla", msg: "Failed to rebuild the message clob for EDN: 22913842" },
+        { id: 5678, colb: "bla bla bla 2", msg: "DealMessage  found for EDN : [22913842]"  }
+    ] ;
+    class MockEAppService {
+        removeActiveEappFormMilestone(edn: string): Observable<any> {
+            return Observable.of(mockData);
+        }
+
+    }
+    beforeEach(async(() => {
+        TestBed.configureTestingModule({
+            declarations: [RemoveActiveEAppFormMilestoneComponent],
+            imports: [RouterTestingModule, FormsModule],
+            providers: [Location,{ provide: EAppService, useClass: MockEAppService }]
+        })
+            .compileComponents();
+    }));
+    let service: EAppService;
+    beforeEach(async(() => {
+        fixture = TestBed.createComponent(RemoveActiveEAppFormMilestoneComponent);
+        comp = fixture.componentInstance;
+        // get the component's injected EAppService
+        service = fixture.debugElement.injector.get(EAppService);
+        //Another way to get injected service: service2=TestBed.get(EAppService);
+    }));
+
+    describe('Creating the component', () => {
+        it('should create component', () => expect(comp).toBeDefined());
+        
+        it('can instantiate component with "new"',  inject([EAppService,Location], (service: EAppService,location: Location) => {
+            expect(service).not.toBeNull('service should be provided');
+            let component = new RemoveActiveEAppFormMilestoneComponent(location,service);
+            expect(component instanceof RemoveActiveEAppFormMilestoneComponent).toBe(true, 'new component should be ok');
+        }));
+    });
+    describe('Calling service method from component', () => {
+         let edn: string='1234';
+        it('should call service method with provided param through view', () => {
+          
+            element = fixture.nativeElement;
+            let btn = element.querySelector("button");
+            comp.edn = edn;
+            spyOn(service, "removeActiveEappFormMilestone").and.returnValue(Observable.of(mockData));
+            btn.click();
+            expect(service.removeActiveEappFormMilestone).toHaveBeenCalledWith(edn);
+
+        });
+        it('should call service method with provided param through direct method call from the component object', () => {
+          
+            comp.edn = edn;
+            spyOn(service, "removeActiveEappFormMilestone").and.returnValue(Observable.of(mockData));
+            comp.removeActiveEappFormMilestone();
+            expect(service.removeActiveEappFormMilestone).toHaveBeenCalledWith(edn);
+
+        });
+    });
+});
+
Index: src/main/resources/angular_io/app/views/partial/eApp/remove-active-eAppForm-milestone.component.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/eApp/remove-active-eAppForm-milestone.component.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/eApp/remove-active-eAppForm-milestone.component.ts	(revision 0)
@@ -0,0 +1,33 @@
+import { Component, OnInit } from '@angular/core';
+import { EAppService } from './eApp.service';
+import { Location } from '@angular/common';
+
+@Component({
+    selector: 'remove-milestone',
+    templateUrl: 'angular_io/app/views/partial/eApp/remove-active-eAppForm-milestone.html'
+})
+
+export class RemoveActiveEAppFormMilestoneComponent {
+    edn: string = "";
+    message: string = "";
+    errorMessage: String = "";
+    constructor( private eAppService: EAppService) {
+    }
+
+    removeActiveEappFormMilestone(): void {
+        if (this.edn) {
+            this.eAppService.removeActiveEappFormMilestone(this.edn).subscribe((res) => {
+                let status = res.status;
+                console.log(status);
+                if (status == 204) {
+                    this.message = "Deleted"
+                }
+            }, (error) => {
+                this.errorMessage = <any>error;
+            });
+
+        } else {
+            this.message = "EDN is required."
+        }
+    }
+}
\ No newline at end of file
Index: src/main/resources/angular_io/app/views/partial/eApp/remove-active-eAppForm-milestone.html
===================================================================
--- src/main/resources/angular_io/app/views/partial/eApp/remove-active-eAppForm-milestone.html	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/eApp/remove-active-eAppForm-milestone.html	(revision 0)
@@ -0,0 +1,21 @@
+<div>
+	<br>
+	<h1 class="grid-label-big-lined">Remove Active eApplication Form
+		milestone</h1>
+	<br />
+	<form  #eAppForm="ngForm">
+		<div>
+			<label for="WFedn">Enterprise Deal Number: </label>
+		</div>
+		<div>
+			<input type="text" [(ngModel)]="edn" name="WFedn"id="WFedn" maxlength="16"  #WFedn="ngModel"  required wfFilter="^[0-9]*$">
+		</div>
+		<div *ngIf="WFedn.errors && (WFedn.dirty || WFedn.touched)" class="alert alert-danger">
+      <div [hidden]="!WFedn.errors.pattern">EDN must be a number.</div>
+    </div>
+		<button class="layoutButton twButton" style="width: auto"	(click)="removeActiveEappFormMilestone()" [disabled]="!eAppForm.form.valid">Remove Active	EApplication Form Milestone</button>
+	</form>
+	<br>
+	<div class="grid-label-big-lined">{{message}}</div>
+	<div style="color:red;">{{errorMessage}}</div>
+</div>
\ No newline at end of file
Index: src/main/resources/angular_io/app/views/partial/eApp/rerun-eAppForm.component.spec.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/eApp/rerun-eAppForm.component.spec.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/eApp/rerun-eAppForm.component.spec.ts	(revision 0)
@@ -0,0 +1,74 @@
+/* tslint:disable:no-unused-variable */
+import { ReruneAppFormComponent } from './rerun-eAppForm.component';
+import {  RouterTestingModule} from '@angular/router/testing';
+import { async, ComponentFixture, inject, TestBed } from '@angular/core/testing';
+import { By }           from '@angular/platform-browser';
+import { DebugElement } from '@angular/core';
+import { FormsModule }   from '@angular/forms';
+import { Observable } from 'rxjs/Rx'
+import { EAppService } from './eApp.service';
+import { Location } from '@angular/common';
+////////  SPECS  /////////////
+describe('ReruneAppFormComponent', function() {
+    let de: DebugElement;
+    let comp: ReruneAppFormComponent;
+    let fixture: ComponentFixture<ReruneAppFormComponent>;
+    let element: any;
+    let mockData = [
+        { id: 1234, colb: "bla bla bla", msg: "Failed to rebuild the message clob for EDN: 22913842" },
+        { id: 5678, colb: "bla bla bla 2", msg: "DealMessage  found for EDN : [22913842]"  }
+    ] ;
+    class MockEAppService {
+        reRuneAppFormData(edn: string): Observable<any> {
+            return Observable.of(mockData);
+        }
+
+    }
+    beforeEach(async(() => {
+        TestBed.configureTestingModule({
+            declarations: [ReruneAppFormComponent],
+            imports: [RouterTestingModule, FormsModule],
+            providers: [Location,{ provide: EAppService, useClass: MockEAppService }]
+        })
+            .compileComponents();
+    }));
+    let service: EAppService;
+    beforeEach(async(() => {
+        fixture = TestBed.createComponent(ReruneAppFormComponent);
+        comp = fixture.componentInstance;
+        // get the component's injected EAppService
+        service = fixture.debugElement.injector.get(EAppService);
+        //Another way to get injected service: service2=TestBed.get(EAppService);
+    }));
+
+    describe('Creating the component', () => {
+        it('should create component', () => expect(comp).toBeDefined());
+        it('can instantiate component with "new"', inject([EAppService,Location], (service: EAppService,location: Location)  => {
+            expect(service).not.toBeNull('service should be provided');
+            let component = new ReruneAppFormComponent(location,service);
+            expect(component instanceof ReruneAppFormComponent).toBe(true, 'new component should be ok');
+        }));
+    });
+    describe('Calling reRuneAppFormData service method from component', () => {
+         let edn: string='1234';
+        it('should call service method with provided param through view', () => {
+          
+            element = fixture.nativeElement;
+            let btn = element.querySelector("button");
+            comp.edn = edn;
+            spyOn(service, "reRuneAppFormData").and.returnValue(Observable.of(mockData));
+            btn.click();
+            expect(service.reRuneAppFormData).toHaveBeenCalledWith(edn);
+
+        });
+        it('should call service method with provided param through direct method call from the component object', () => {
+          
+            comp.edn = edn;
+            spyOn(service, "reRuneAppFormData").and.returnValue(Observable.of(mockData));
+            comp.reRuneAppFormData();
+            expect(service.reRuneAppFormData).toHaveBeenCalledWith(edn);
+
+        });
+    });
+});
+
Index: src/main/resources/angular_io/app/views/partial/eApp/rerun-eAppForm.component.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/eApp/rerun-eAppForm.component.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/eApp/rerun-eAppForm.component.ts	(revision 0)
@@ -0,0 +1,36 @@
+import { Component, OnInit } from '@angular/core';
+import { EAppService } from './eApp.service';
+import { Location } from '@angular/common';
+@Component({
+    selector: 'resubmit-eAppForm',
+    templateUrl: 'angular_io/app/views/partial/eApp/rerun-eAppForm.html'
+})
+
+export class ReruneAppFormComponent {
+    edn: string = "";
+    message: string = "";
+    dealMessageContent = "";
+    dealId: string = "";
+    errorMessage: String = "";
+    data :string[]=["A","B","C","E"];
+    constructor( private eAppService: EAppService) {
+    }
+
+    reRuneAppFormData(): void {
+        if (this.edn) {
+            this.eAppService.reRuneAppFormData(this.edn).subscribe((res) => {
+                if (res) {
+                    let body:any = res;
+                    this.message = body.statusText;
+                } else {
+                    this.message = "EDN not found";
+                }
+            }, (error) => {
+                this.errorMessage = <any>error;
+            });
+        } else {
+            this.message = "EDN is required."
+        }
+    }
+
+}
Index: src/main/resources/angular_io/app/views/partial/eApp/rerun-eAppForm.html
===================================================================
--- src/main/resources/angular_io/app/views/partial/eApp/rerun-eAppForm.html	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/eApp/rerun-eAppForm.html	(revision 0)
@@ -0,0 +1,22 @@
+<div>
+  <br>
+  <h1>
+    Rebuild eApplication Form Data
+  </h1>
+  <br />
+  <form #eAppForm="ngForm">
+    <div>
+      <label>Enterprise Deal Number: </label>
+    </div>
+    <div>
+      <input type="text" [(ngModel)]="edn" maxlength="16" id="WFedn" name="WFedn" #WFedn="ngModel" required wfFilter="^[0-9]*$">
+    </div>
+    <div *ngIf="WFedn.errors && (WFedn.dirty || WFedn.touched)" class="alert alert-danger">
+      <div [hidden]="!WFedn.errors.pattern">EDN must be a number.</div>
+    </div>
+    <button class="layoutButton twButton" style="width: auto"  (click)="reRuneAppFormData()" [disabled]="!eAppForm.form.valid">Rebuild Current Saved Clob</button>
+  </form>
+  <div>{{message}}</div>
+  <div style="color:red;">{{errorMessage}}</div>
+
+</div>
\ No newline at end of file
Index: src/main/resources/angular_io/app/views/partial/eApp/resubmit-eAppForm.component.spec.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/eApp/resubmit-eAppForm.component.spec.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/eApp/resubmit-eAppForm.component.spec.ts	(revision 0)
@@ -0,0 +1,102 @@
+/* tslint:disable:no-unused-variable */
+import { ResubmiteAppDataComponent } from './resubmit-eAppForm.component';
+import {  RouterTestingModule} from '@angular/router/testing';
+import { async, ComponentFixture, inject, TestBed } from '@angular/core/testing';
+import { By }           from '@angular/platform-browser';
+import { DebugElement } from '@angular/core';
+import { FormsModule }   from '@angular/forms';
+import { Observable } from 'rxjs/Rx'
+import { EAppService } from './eApp.service';
+import { Location } from '@angular/common';
+////////  SPECS  /////////////
+describe('ResubmiteAppDataComponent', function() {
+    let de: DebugElement;
+    let comp: ResubmiteAppDataComponent;
+    let fixture: ComponentFixture<ResubmiteAppDataComponent>;
+    let element: any;
+    let mockData = [
+        { id: 1234, colb: "bla bla bla", msg: "Failed to rebuild the message clob for EDN: 22913842" },
+        { id: 5678, colb: "bla bla bla 2", msg: "DealMessage  found for EDN : [22913842]"  }
+    ] ;
+    class MockEAppService {
+        getEappFormData(edn: string): Observable<any> {
+            return Observable.of(mockData);
+        }
+        saveEappFormData(edn: string, dealMessageContent: string): Observable<any> {
+            return Observable.of(mockData);
+        }
+
+    }
+    beforeEach(async(() => {
+        TestBed.configureTestingModule({
+            declarations: [ResubmiteAppDataComponent],
+            imports: [RouterTestingModule, FormsModule],
+            providers: [Location,{ provide: EAppService, useClass: MockEAppService }]
+        })
+            .compileComponents();
+    }));
+    let service: EAppService;
+    beforeEach(async(() => {
+        fixture = TestBed.createComponent(ResubmiteAppDataComponent);
+        comp = fixture.componentInstance;
+        // get the component's injected EAppService
+        service = fixture.debugElement.injector.get(EAppService);
+        //Another way to get injected service: service2=TestBed.get(EAppService);
+    }));
+
+    describe('Creating the component', () => {
+        it('should create component', () => expect(comp).toBeDefined());
+        it('can instantiate component with "new"',  inject([EAppService,Location], (service: EAppService,location: Location) => {
+            expect(service).not.toBeNull('service should be provided');
+            let component = new ResubmiteAppDataComponent(location,service);
+            expect(component instanceof ResubmiteAppDataComponent).toBe(true, 'new component should be ok');
+        }));
+    });
+    describe('Calling getEappFormData service method from component', () => {
+         let edn: string='1234';
+        it('should call service method with provided param through view', () => {
+          
+            element = fixture.nativeElement;
+            let btn = element.querySelector("#btnGetData");
+            comp.edn = edn;
+            spyOn(service, "getEappFormData").and.returnValue(Observable.of(mockData));
+            btn.click();
+            expect(service.getEappFormData).toHaveBeenCalledWith(edn);
+
+        });
+        it('should call service method with provided param through direct method call from the component object', () => {
+          
+            comp.edn = edn;
+            spyOn(service, "getEappFormData").and.returnValue(Observable.of(mockData));
+            comp.getEappFormData();
+            expect(service.getEappFormData).toHaveBeenCalledWith(edn);
+
+        });
+    });
+    
+       describe('Calling saveEappFormData service method from component', () => {
+         let edn: string='1234';
+          let dealMessageContent: string='abcd';  
+        it('should call service method with provided param through view', () => {
+          
+            element = fixture.nativeElement;
+            let btn = element.querySelector("#btnSaveData");
+            comp.edn = edn;
+            comp.dealMessageContent=dealMessageContent;
+            spyOn(service, "saveEappFormData").and.returnValue(Observable.of(mockData));
+            btn.click();
+            expect(service.saveEappFormData).toHaveBeenCalledWith(edn,dealMessageContent);
+
+        });
+        it('should call service method with provided param through direct method call from the component object', () => {
+           comp.dealMessageContent=dealMessageContent;
+            comp.edn = edn;
+            spyOn(service, "saveEappFormData").and.returnValue(Observable.of(mockData));
+            comp.saveEappFormData();
+            expect(service.saveEappFormData).toHaveBeenCalledWith(edn,dealMessageContent);
+
+        });
+    });
+    
+});
+
Index: src/main/resources/angular_io/app/views/partial/eApp/resubmit-eAppForm.component.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/eApp/resubmit-eAppForm.component.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/eApp/resubmit-eAppForm.component.ts	(revision 0)
@@ -0,0 +1,52 @@
+import { Component, OnInit } from '@angular/core';
+import { EAppService } from './eApp.service';
+import { Location } from '@angular/common';
+
+@Component({
+    selector: 'resubmit-eAppForm',
+    templateUrl: 'angular_io/app/views/partial/eApp/resubmit-eAppForm.html'
+})
+
+export class ResubmiteAppDataComponent {
+    edn: string = "";
+    message: string = "";
+    dealMessageContent = "";
+    dealId: string = "";
+    errorMessage: String = "";
+    constructor( private eAppService: EAppService) {
+    }
+
+    getEappFormData(): void {
+        if (this.edn) {
+            this.eAppService.getEappFormData(this.edn).subscribe((res) => {
+                if (res) {
+                    this.message = "";
+                    let body:any = res;
+                    this.edn = body.id;
+                    this.dealMessageContent = body.colb;
+                    //TODO for now we don't need that later on we will need to set the dealId   ==>   this.dealId=body.dealId;
+                } else {
+                    this.message = "EDN not found";
+                }
+            }, (error) => {
+                this.errorMessage = <any>error;
+            });
+        } else {
+            this.message = "EDN is required."
+        }
+    }
+
+    saveEappFormData(): void {
+        this.eAppService.saveEappFormData(this.edn, this.dealMessageContent).subscribe((res) => {//for now we are sending the edn, later on we should send the dealId since the Back-end service is using to save the data.
+            let status = res.status;
+            console.log(status);
+            if (status == 204) {
+                this.message = "Saved"
+            }
+        });
+    }
+
+    cancelEdit(): void {
+       // this.location.back();
+    }
+}
Index: src/main/resources/angular_io/app/views/partial/eApp/resubmit-eAppForm.html
===================================================================
--- src/main/resources/angular_io/app/views/partial/eApp/resubmit-eAppForm.html	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/eApp/resubmit-eAppForm.html	(revision 0)
@@ -0,0 +1,28 @@
+<div>
+	<br>
+	<h1>Resubmit eApplication Form Data</h1>
+	<br />
+	<form #eAppForm="ngForm">
+		<div>
+			<label>Enterprise Deal Number: </label>
+		</div>
+		<div>
+			<input type="text" [(ngModel)]="edn" maxlength="16" id="WFedn" name="WFedn" #WFedn="ngModel" required wfFilter="^[0-9]*$">
+		</div>
+		<div *ngIf="WFedn.errors && (WFedn.dirty || WFedn.touched)" class="alert alert-danger">
+			<div [hidden]="!WFedn.errors.pattern">Record Count must be a number.</div>
+		</div>
+		<button id ="btnGetData" name="btnGetData" class="layoutButton twButton" style="width: auto" (click)="getEappFormData()" [disabled]="!eAppForm.form.valid">Retrieve Current Saved Clob</button>
+	</form>
+	<div>{{message}}</div>
+	<div>
+		<div class="grid-content">
+			<div>
+				<textarea [(ngModel)]="dealMessageContent" class="x-form-text" style="width: 500px; height: 400px;"></textarea>
+			</div>
+			<button class="btn btn-small btn-default layoutButton twButton" wf-button-css (click)="cancelEdit();">Cancel</button>
+			<button id ="btnSaveData" name="btnSaveData" wf-button-css (click)="saveEappFormData();">Save Clob</button>
+		</div>
+		<div style="color: red;">{{errorMessage}}</div>
+	</div>
+</div>
\ No newline at end of file

Property changes on: src\main\resources\angular_io\app\views\partial\orderFloodCertificate
___________________________________________________________________
Added: bugtraq:number
   + true

Index: src/main/resources/angular_io/app/views/partial/orderFloodCertificate/order-flood.component.html
===================================================================
--- src/main/resources/angular_io/app/views/partial/orderFloodCertificate/order-flood.component.html	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/orderFloodCertificate/order-flood.component.html	(revision 0)
@@ -0,0 +1,22 @@
+<h1>Order Flood Certificate</h1>
+<div>
+	<br>
+	<form #orderForm="ngForm">
+		<div>
+			<label for="ednNumber">Enterprise Deal Number</label>
+		</div>
+		<div>
+			<input type="text" id="ednNumber" name="ednNumber" [(ngModel)]="orderFloodRequest.enterpriseDealNumber" maxlength="16" #ednNumber="ngModel" required wfFilter="^[0-9]*$" />
+		</div>
+		<div *ngIf="ednNumber.errors && (ednNumber.dirty || ednNumber.touched)" class="alert alert-danger">
+      <div [hidden]="!ednNumber.errors.required">EDN is required</div>
+      <div [hidden]="!ednNumber.errors.pattern">EDN must be a number.</div></div>
+		<button class="btn btn-small btn-default layoutButton twButton" class="layoutButton twButton" style="width: auto" (click)="backToCoreTools();" >Cancel</button>
+		<button class="layoutButton twButton" style="width: auto" (click)="orderFlood()" [disabled]="!orderForm.form.valid" id="btnOrderFlood" name="btnOrderFlood">Order Flood</button>
+	</form>
+	<br>
+	<div style="color: red;">{{error}}</div>
+</div>
+
+
+
Index: src/main/resources/angular_io/app/views/partial/orderFloodCertificate/order-flood.component.spec.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/orderFloodCertificate/order-flood.component.spec.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/orderFloodCertificate/order-flood.component.spec.ts	(revision 0)
@@ -0,0 +1,73 @@
+import { OrderFloodComponent } from './order-flood.component';
+import {  RouterTestingModule} from '@angular/router/testing';
+import { async, ComponentFixture, inject, TestBed } from '@angular/core/testing';
+import { By }           from '@angular/platform-browser';
+import { DebugElement } from '@angular/core';
+import { FormsModule }   from '@angular/forms';
+import { Observable } from 'rxjs/Rx'
+import { OrderFloodService, OrderFloodResponse, OrderFloodRequest } from './order-flood.service';
+import { Location } from '@angular/common';
+////////  SPECS  /////////////
+describe('OrderFloodComponent', function() {
+    let de: DebugElement;
+    let comp: OrderFloodComponent;
+    let fixture: ComponentFixture<OrderFloodComponent>;
+    let element: any;
+    let mockData = [
+         { id: 1, "msg": "Flood ordered successfully, Order number = CF11935129001479241324754" },
+         { id: 2, "msg": "Flood ordered successfully, Order number = CF11935125555551332324754" }
+    ] ;
+    class MockOrderFloodService {
+        orderFlood(orderFloodRequest: OrderFloodRequest): Observable<any> {
+            return Observable.of(mockData);
+        }
+
+    }
+    beforeEach(async(() => {
+        TestBed.configureTestingModule({
+            declarations: [OrderFloodComponent],
+            imports: [RouterTestingModule, FormsModule],
+            providers: [{ provide: OrderFloodService, useClass: MockOrderFloodService },Location]
+        })
+            .compileComponents();
+    }));
+    let service: OrderFloodService;
+    beforeEach(async(() => {
+        fixture = TestBed.createComponent(OrderFloodComponent);
+        comp = fixture.componentInstance;
+        // get the component's injected MockVendorSimulationService
+        service = fixture.debugElement.injector.get(OrderFloodService);
+        //Another way to get injected service: service2=TestBed.get(OrderFloodService);
+    }));
+
+    describe('Creating the component', () => {
+        it('should create component', () => expect(comp).toBeDefined());
+        it('can instantiate component with "new"', inject([OrderFloodService,Location], (service: OrderFloodService,location: Location) => {
+            expect(service).not.toBeNull('service should be provided');
+            let component = new OrderFloodComponent(location,service);
+            expect(component instanceof OrderFloodComponent).toBe(true, 'new component should be ok');
+        }));
+    });
+    describe('Calling service method from component', () => {
+       let  orderFloodRequest: OrderFloodRequest = { enterpriseDealNumber: '1' };
+        it('should call service method with provided param through view', () => {
+          
+            element = fixture.nativeElement;
+            comp.orderFloodRequest=orderFloodRequest;
+            let btn = element.querySelector("#btnOrderFlood");
+            
+            spyOn(service, "orderFlood").and.returnValue(Observable.of(mockData));
+            btn.click();
+            expect(service.orderFlood).toHaveBeenCalledWith(orderFloodRequest);
+
+        });
+        it('should call service method with provided param through direct method call from the component object', () => {
+          comp.orderFloodRequest=orderFloodRequest;
+            spyOn(service, "orderFlood").and.returnValue(Observable.of(mockData));
+            comp.orderFlood();
+            expect(service.orderFlood).toHaveBeenCalledWith(orderFloodRequest);
+
+        });
+    });
+});
+
Index: src/main/resources/angular_io/app/views/partial/orderFloodCertificate/order-flood.component.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/orderFloodCertificate/order-flood.component.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/orderFloodCertificate/order-flood.component.ts	(revision 0)
@@ -0,0 +1,46 @@
+import { Component, OnInit } from '@angular/core';
+import { OrderFloodService, OrderFloodResponse, OrderFloodRequest } from './order-flood.service';
+import { Location } from '@angular/common';
+
+@Component({
+    selector: 'order-flood',
+    templateUrl: 'angular_io/app/views/partial/orderFloodCertificate/order-flood.component.html'
+})
+
+export class OrderFloodComponent implements OnInit {
+    orderFloodResponse: OrderFloodResponse;
+    orderFloodRequest: OrderFloodRequest = { enterpriseDealNumber: '0' };
+    error: string;
+
+    ngOnInit(): void {
+        this.orderFloodResponse = null;
+    }
+
+    constructor( private orderFloodService: OrderFloodService) {
+    }
+
+    orderFlood(): void {
+        if (this.orderFloodRequest.enterpriseDealNumber != null && this.orderFloodRequest.enterpriseDealNumber != '') {
+
+            this.orderFloodService.orderFlood(this.orderFloodRequest).subscribe((res) => {
+                let d: Array<OrderFloodResponse> = [];
+                let body:any = res;
+                let resps: Array<OrderFloodResponse> = body;
+                let resId = Math.floor(Math.random() * 2) + 1;
+                if (resps) {
+                    resps.forEach((resp) => {
+                        d.push(new OrderFloodResponse(resp.msg));
+                    }, (error:any) => {
+                        this.error = <any>error;
+                    })
+                }
+                this.orderFloodResponse = d[resId - 1];
+                alert(this.orderFloodResponse.msg);
+            });
+        }
+    }
+    backToCoreTools(): void {
+        //this.location.back();
+    }
+}
+
Index: src/main/resources/angular_io/app/views/partial/orderFloodCertificate/order-flood.service.spec.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/orderFloodCertificate/order-flood.service.spec.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/orderFloodCertificate/order-flood.service.spec.ts	(revision 0)
@@ -0,0 +1,73 @@
+import { async, ComponentFixture, inject, TestBed } from '@angular/core/testing';
+import { By }           from '@angular/platform-browser';
+import { DebugElement } from '@angular/core';
+import { MockBackend, MockConnection} from '@angular/http/testing';
+import {HttpModule, Http, XHRBackend, Response, ResponseOptions} from '@angular/http';
+import { Observable } from 'rxjs/Observable';
+import 'rxjs/add/observable/of';
+import { OrderFloodService,OrderFloodRequest,OrderFloodResponse} from './order-flood.service';
+////////  SPECS  /////////////
+describe('OrderFloodService', function() {
+
+
+
+    const mockData =   { id: 1, "msg": "Flood ordered successfully, Order number = CF11935129001479241324754" };
+    beforeEach(async(() => {
+        TestBed.configureTestingModule({
+            imports: [HttpModule],
+            providers: [OrderFloodService, { provide: XHRBackend, useClass: MockBackend }]
+        })
+            .compileComponents();
+    }));
+
+    describe('Creating the service', () => {
+        it('can instantiate service when inject service',
+            inject([OrderFloodService], (service: OrderFloodService) => {
+                expect(service instanceof OrderFloodService).toBe(true);
+            }));
+        it('can instantiate service with "new"', inject([Http], (http: Http) => {
+            expect(http).not.toBeNull('http should be provided');
+            let service = new OrderFloodService(http);
+            expect(service instanceof OrderFloodService).toBe(true, 'new service should be ok');
+        }));
+        it('can provide the mockBackend as XHRBackend',
+            inject([XHRBackend], (backend: MockBackend) => {
+                expect(backend).not.toBeNull('backend should be provided');
+            }));
+
+    });
+
+    describe('Calling orderFlood service', () => {
+        let backend: MockBackend;
+        let service: OrderFloodService;
+        let response: Response;
+        let req: OrderFloodRequest={enterpriseDealNumber: '1'};
+        let status: number;
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new OrderFloodService(http);
+            let options = new ResponseOptions({ status: 200, body: { data: mockData } });
+            response = new Response(options);
+        }));
+
+        it('should return the correct Status when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.orderFlood(req).toPromise()
+                .then(res => {
+                    let b: any = res;
+                    expect(b).toBe(mockData, 'should return the correct Status code when using toPromise');
+                });
+        })));
+
+        it('should return the correct Status using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.orderFlood(req)
+                .do(res => {
+                    let b: any = res;
+                    expect(b).toBe(mockData, 'should return the correct Status code when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+    });
+});
+
Index: src/main/resources/angular_io/app/views/partial/orderFloodCertificate/order-flood.service.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/orderFloodCertificate/order-flood.service.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/orderFloodCertificate/order-flood.service.ts	(revision 0)
@@ -0,0 +1,46 @@
+import { Injectable } from '@angular/core';
+import { Http, Request, RequestOptionsArgs, Response, XHRBackend, RequestOptions, ConnectionBackend, Headers} from '@angular/http';
+//import { CoreHttpService } from '../lib/core-http.service';
+import { Observable }     from 'rxjs/Observable';
+import 'rxjs/Rx';
+
+@Injectable()
+export class OrderFloodService {
+    url="/app/ordeFlood";// URL to json mock data
+
+    constructor(private coreHttpService: Http) {
+
+    }
+    
+    orderFlood(request: OrderFloodRequest): Observable<Response> {
+        return this.coreHttpService.get(this.url).map(this.extractData).catch(this.handleError);
+    }
+      private extractData(res: Response) {
+            let body = res.json();
+            return body.data || {};
+        }
+        private handleError(error: Response | any) {
+            // In a real world app, we might use a remote logging infrastructure
+            let errMsg: string;
+            if (error instanceof Response) {
+                const body = error.json() || '';
+                const err = body.error || JSON.stringify(body);
+                errMsg = `${error.status} - ${error.statusText || ''} ${err}`;
+            } else {
+                errMsg = error.message ? error.message : error.toString();
+            }
+            console.error(errMsg);
+            return Observable.throw(errMsg);
+        }
+}
+
+export class OrderFloodResponse {
+    msg: string;
+    constructor(msg: string) {
+        this.msg = msg;
+    }
+}
+
+export class OrderFloodRequest {
+    enterpriseDealNumber: string
+}
\ No newline at end of file

Property changes on: src\main\resources\angular_io\app\views\partial\vendorSimulation
___________________________________________________________________
Added: bugtraq:number
   + true

Index: src/main/resources/angular_io/app/views/partial/vendorSimulation/vendor-simulation.component.spec.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/vendorSimulation/vendor-simulation.component.spec.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/vendorSimulation/vendor-simulation.component.spec.ts	(revision 0)
@@ -0,0 +1,122 @@
+/* tslint:disable:no-unused-variable */
+import { VendorSimulation } from './vendor-simulation.component';
+import {  RouterTestingModule} from '@angular/router/testing';
+import { async, ComponentFixture, inject, TestBed } from '@angular/core/testing';
+import { By }           from '@angular/platform-browser';
+import { DebugElement } from '@angular/core';
+import { FormsModule }   from '@angular/forms';
+import { Observable } from 'rxjs/Rx'
+import { VendorSimulationService } from './vendor-simulation.service';
+import { Location } from '@angular/common';
+////////  SPECS  /////////////
+describe('VendorSimulationComponent', function() {
+    let de: DebugElement;
+    let comp: VendorSimulation;
+    let fixture: ComponentFixture<VendorSimulation>;
+    let element: any;
+    let mockData = [
+        { id: 1234, dealId: 1000060090, processInstanceId: 7769 },
+        { id: 5678, dealId: 1550060090, processInstanceId: 6669 },
+        { id: 100, msg: "OK" }
+    ];//as HoganCallResponse[];
+    class MockVendorSimulationService {
+        getDeal(edn: string): Observable<any> {
+            return Observable.of(mockData);
+        }
+        triggerStipScheduler(edn: string): Observable<any> {
+            return Observable.of(mockData);
+        }
+        triggerStipShedRefactor(quartzBlockSize: number): Observable<any> {
+            return Observable.of(mockData);
+        }
+    }
+    beforeEach(async(() => {
+        TestBed.configureTestingModule({
+            declarations: [VendorSimulation],
+            imports: [RouterTestingModule, FormsModule],
+            providers: [{ provide: VendorSimulationService, useClass: MockVendorSimulationService }, Location]
+        })
+            .compileComponents();
+    }));
+    let service: MockVendorSimulationService;
+    beforeEach(async(() => {
+        fixture = TestBed.createComponent(VendorSimulation);
+        comp = fixture.componentInstance;
+        // get the component's injected MockVendorSimulationService
+        service = fixture.debugElement.injector.get(VendorSimulationService);
+        //Another way to get injected service: service2=TestBed.get(VendorSimulationService);
+    }));
+
+    describe('Creating the component', () => {
+        it('should create component', () => expect(comp).toBeDefined());
+        it('can instantiate component with "new"', inject([VendorSimulationService, Location], (service: VendorSimulationService, location: Location) => {
+            expect(service).not.toBeNull('service should be provided');
+            let component = new VendorSimulation(location, service);
+            expect(component instanceof VendorSimulation).toBe(true, 'new component should be ok');
+        }));
+    });
+    describe('Calling getDeal service method from component', () => {
+        let edn: string = '1234';
+        it('should call service method with provided param through view', () => {
+
+            element = fixture.nativeElement;
+            comp.edn = edn;
+            let btn = element.querySelector("#btnGetDeal");
+
+            spyOn(service, "getDeal").and.returnValue(Observable.of(mockData));
+            btn.click();
+            expect(service.getDeal).toHaveBeenCalledWith(edn);
+
+        });
+        it('should call service method with provided param through direct method call from the component object', () => {
+            comp.edn = edn;
+            spyOn(service, "getDeal").and.returnValue(Observable.of(mockData));
+            comp.getDeal();
+            expect(service.getDeal).toHaveBeenCalledWith(edn);
+
+        });
+    });
+    describe('Calling triggerStipScheduler service method from component', () => {
+        let edn: string = '1234';
+        it('should call service method with provided param through view', () => {
+
+            element = fixture.nativeElement;
+            comp.edn = edn;
+            let btn = element.querySelector("#btnTriggerStipEngineScheduler");
+
+            spyOn(service, "triggerStipScheduler").and.returnValue(Observable.of(mockData));
+            btn.click();
+            expect(service.triggerStipScheduler).toHaveBeenCalledWith(edn);
+
+        });
+        it('should call service method with provided param through direct method call from the component object', () => {
+            comp.edn = edn;
+            spyOn(service, "triggerStipScheduler").and.returnValue(Observable.of(mockData));
+            comp.triggerStipScheduler();
+            expect(service.triggerStipScheduler).toHaveBeenCalledWith(edn);
+
+        });
+    });
+    describe('Calling triggerStipShedRefactor service method from component', () => {
+        let quartzBlockSize: number = 100;
+        it('should call service method with provided param through view', () => {
+
+            element = fixture.nativeElement;
+            comp.quartzBlockSize = quartzBlockSize;
+            let btn = element.querySelector("#btnTriggerStipEngineRefactor");
+
+            spyOn(service, "triggerStipShedRefactor").and.returnValue(Observable.of(mockData));
+            btn.click();
+            expect(service.triggerStipShedRefactor).toHaveBeenCalledWith(quartzBlockSize);
+
+        });
+        it('should call service method with provided param through direct method call from the component object', () => {
+            comp.quartzBlockSize = quartzBlockSize;
+            spyOn(service, "triggerStipShedRefactor").and.returnValue(Observable.of(mockData));
+            comp.triggerStipShedRefactor();
+            expect(service.triggerStipShedRefactor).toHaveBeenCalledWith(quartzBlockSize);
+
+        });
+    });
+});
+
Index: src/main/resources/angular_io/app/views/partial/vendorSimulation/vendor-simulation.component.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/vendorSimulation/vendor-simulation.component.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/vendorSimulation/vendor-simulation.component.ts	(revision 0)
@@ -0,0 +1,197 @@
+import { Component, OnInit } from '@angular/core';
+import { VendorSimulationService} from './vendor-simulation.service';
+import { Location } from '@angular/common';
+
+@Component({
+    selector: 'vendor-simulation',
+    templateUrl: 'angular_io/app/views/partial/vendorSimulation/vendor-simulation.html'
+})
+
+export class VendorSimulation {
+    public edn: string = "";
+    errorMessage: string = "";
+    dealId: String = "";
+    processInstanceId: string = "";
+    quartzBlockSize: number = 100;
+    constructor( private vendorSimulationService: VendorSimulationService) {
+    }
+    getDeal(): void {
+        this.vendorSimulationService.getDeal(this.edn).subscribe((res) => {
+            if (res) {
+                let body: any = res;
+                this.edn = body.id;
+                this.dealId = body.dealId
+                this.processInstanceId = body.processInstanceId;
+            } else {
+                this.errorMessage = "EDN not found";
+            }
+        }, (error) => {
+            this.errorMessage = <any>error;
+        });
+    }
+    triggerStipScheduler(): void {
+        this.vendorSimulationService.triggerStipScheduler(this.edn).subscribe((res) => {
+            if (res) {
+                let body: any = res;
+                console.log(body);
+            } else {
+                this.errorMessage = "Request Failed";
+            }
+        }, (error) => {
+            this.errorMessage = <any>error;
+        });
+    }
+
+    triggerStipShedRefactor(): void {
+        this.vendorSimulationService.triggerStipShedRefactor(this.quartzBlockSize).subscribe((res) => {
+            if (res) {
+                let body: any = res;
+                console.log(body);
+            } else {
+                this.errorMessage = "Request Failed";
+            }
+        }, (error) => {
+            this.errorMessage = <any>error;
+        });
+    }
+
+    triggerStipTaskFollowUp(): void {
+        this.vendorSimulationService.triggerStipTaskFollowUp(this.quartzBlockSize).subscribe((res) => {
+            if (res) {
+                let body: any = res;
+                console.log(body);
+            } else {
+                this.errorMessage = "Request Failed";
+            }
+        }, (error) => {
+            this.errorMessage = <any>error;
+        });
+    }
+
+    triggerStipTaskFollowUpCema(): void {
+        this.vendorSimulationService.triggerStipTaskFollowUpCema(this.quartzBlockSize).subscribe((res) => {
+            if (res) {
+                let body: any = res;
+                console.log(body);
+            } else {
+                this.errorMessage = "Request Failed";
+            }
+        }, (error) => {
+            this.errorMessage = <any>error;
+        });
+    }
+
+    triggerStipTask3rdPartyFloodFU(): void {
+        this.vendorSimulationService.triggerStipTask3rdPartyFloodFU(this.quartzBlockSize).subscribe((res) => {
+            if (res) {
+                let body: any = res;
+                console.log(body);
+            } else {
+                this.errorMessage = "Request Failed";
+            }
+        }, (error) => {
+            this.errorMessage = <any>error;
+        });
+    }
+
+    triggerStipTaskPriorToDisbur(): void {
+        this.vendorSimulationService.triggerStipTaskPriorToDisbur(this.quartzBlockSize).subscribe((res) => {
+            if (res) {
+                let body: any = res;
+                console.log(body);
+            } else {
+                this.errorMessage = "Request Failed";
+            }
+        }, (error) => {
+            this.errorMessage = <any>error;
+        });
+    }
+
+    triggerStipTaskCoopFollowUp(): void {
+        this.vendorSimulationService.triggerStipTaskCoopFollowUp(this.quartzBlockSize).subscribe((res) => {
+            if (res) {
+                let body: any = res;
+                console.log(body);
+            } else {
+                this.errorMessage = "Request Failed";
+            }
+        }, (error) => {
+            this.errorMessage = <any>error;
+        });
+    }
+    triggerStipTaskCommunicate(): void {
+        this.vendorSimulationService.triggerStipTaskCommunicate(this.quartzBlockSize).subscribe((res) => {
+            if (res) {
+                let body: any = res;
+                console.log(body);
+            } else {
+                this.errorMessage = "Request Failed";
+            }
+        }, (error) => {
+            this.errorMessage = <any>error;
+        });
+    }
+    triggerStipExpiredDocs(): void {
+        this.vendorSimulationService.triggerStipExpiredDocs(this.quartzBlockSize).subscribe((res) => {
+            if (res) {
+                let body: any = res;
+                console.log(body);
+            } else {
+                this.errorMessage = "Request Failed";
+            }
+        }, (error) => {
+            this.errorMessage = <any>error;
+        });
+    }
+    triggerStipFUContigency(): void {
+        this.vendorSimulationService.triggerStipFUContigency(this.edn).subscribe((res) => {
+            if (res) {
+                let body: any = res;
+                console.log(body);
+            } else {
+                this.errorMessage = "Request Failed";
+            }
+        }, (error) => {
+            this.errorMessage = <any>error;
+        });
+    }
+    listFinalVOEOrder(): void {
+        this.vendorSimulationService.listFinalVOEOrder(this.edn).subscribe((res) => {
+            if (res) {
+                let body: any = res;
+                console.log(body);
+            } else {
+                this.errorMessage = "Request Failed";
+            }
+        }, (error) => {
+            this.errorMessage = <any>error;
+        });
+    }
+    listAppraisalExpiryOrders(): void {
+        this.vendorSimulationService.listAppraisalExpiryOrders(this.edn).subscribe((res) => {
+            if (res) {
+                let body: any = res;
+                console.log(body);
+            } else {
+                this.errorMessage = "Request Failed";
+            }
+        }, (error) => {
+            this.errorMessage = <any>error;
+        });
+    }
+    triggerAppraisalExpiryOrders(): void {
+        this.vendorSimulationService.triggerAppraisalExpiryOrders(this.edn).subscribe((res) => {
+            if (res) {
+                let body: any = res;
+                console.log(body);
+            } else {
+                this.errorMessage = "Request Failed";
+            }
+        }, (error) => {
+            this.errorMessage = <any>error;
+        });
+    }
+    cancel(): void {
+        //this.location.back();
+    };
+}
Index: src/main/resources/angular_io/app/views/partial/vendorSimulation/vendor-simulation.html
===================================================================
--- src/main/resources/angular_io/app/views/partial/vendorSimulation/vendor-simulation.html	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/vendorSimulation/vendor-simulation.html	(revision 0)
@@ -0,0 +1,54 @@
+<div>
+	<br>
+	<h1>Vendor Simulation</h1>
+	<br>
+	<form #vendoSimulation="ngForm">
+		<div>
+			<label>Enterprise Deal Number: </label> <input class="x-form-text" type="text" [(ngModel)]="edn" maxlength="16" id="WFedn" name="WFedn" #WFedn="ngModel" required wfFilter="^[0-9]*$">
+			<div *ngIf="WFedn.errors && (WFedn.dirty || WFedn.touched)" class="alert alert-danger">
+				<div [hidden]="!WFedn.errors.pattern">EDN must be a number.</div>
+			</div>
+			<button id="btnGetDeal" name="btnGetDeal" class="layoutButton twButton" style="width: auto" (click)="getDeal()" [disabled]="!vendoSimulation.form.valid">Get Deal</button>
+			<button type="button" class="layoutButton twButton" style="width: auto;" aria-hidden="false" tabindex="0" (click)="cancel();">Cancel</button>
+		</div>
+	</form>
+	<div>
+		<button type="button" class="layoutButton twButton" style="width: auto;" aria-hidden="false" tabindex="0" (click)="triggerStipScheduler();" id="btnTriggerStipEngineScheduler" name="btnTriggerStipEngineScheduler">Trigger Stip Engine
+			Scheduler</button>
+		<button type="button" class="layoutButton twButton" style="width: auto;" aria-hidden="false" tabindex="0" (click)="triggerStipShedRefactor();" id="btnTriggerStipEngineRefactor" name="btnTriggerStipEngineRefactor">Trigger Stip Engine Sched
+			Refactor</button>
+		<label>Quartz block size:</label> <input type="text" class="x-form-text" style="width: 130px;" aria-hidden="false" tabindex="0" maxlength="3" [(ngModel)]="quartzBlockSize">
+	</div>
+	<br>
+	<div>
+		<button type="button" class="layoutButton twButton" style="width: auto;" aria-hidden="false" tabindex="0" (click)="triggerStipTaskFollowUp();" id="btnTrigStipEngineTaskFollowUp" name="btnTrigStipEngineTaskFollowUp">Trig Stip Engine Task Follow Up</button>
+		<button type="button" class="layoutButton twButton" style="width: auto;" aria-hidden="false" tabindex="0" (click)="triggerStipTaskFollowUpCema();" id="btnTrigStipEngineTaskFollowUpCema" name="btnTrigStipEngineTaskFollowUpCema">Trig Stip Engine Task FollowUp Cema</button>
+		<button type="button" class="layoutButton twButton" style="width: auto;" aria-hidden="false" tabindex="0" (click)="triggerStipTask3rdPartyFloodFU();" id="btnTrigStipETask3rdPartyFloodFU" name="btnTrigStipETask3rdPartyFloodFU">Trig Stip E Task 3rd Party Flood FU</button>
+		<button type="button" class="layoutButton twButton" style="width: auto;" aria-hidden="false" tabindex="0" (click)="triggerStipTaskPriorToDisbur();" id="btnTrigStipEngineTaskPriortoDisbur" name="btnTrigStipEngineTaskPriortoDisbur">Trig Stip Engine Task Prior to Disbur</button>
+	</div>
+	<br>
+	<div>
+    <button type="button" class="layoutButton twButton" style="width: auto;" aria-hidden="false" tabindex="0" (click)="triggerStipTaskCoopFollowUp();" id="btntriggerStipTaskCoopFollowUp" name="btntriggerStipTaskCoopFollowUp">Trig Stip Engine Task Coop Follow up </button>
+    <button type="button" class="layoutButton twButton" style="width: auto;" aria-hidden="false" tabindex="0" (click)="triggerStipTaskCommunicate();" id="btntriggerStipTaskCommunicate" name="btntriggerStipTaskCommunicate">Trig Stip Engine Task Communicate</button>
+    <button type="button" class="layoutButton twButton" style="width: auto;" aria-hidden="false" tabindex="0" (click)="triggerStipExpiredDocs();" id="btntriggerStipExpiredDocs" name="btntriggerStipExpiredDocs">Trig Stip Engine Expired Docs </button>
+    <button type="button" class="layoutButton twButton" style="width: auto;" aria-hidden="false" tabindex="0" (click)="triggerStipFUContigency();" id="btntriggerStipFUContigency" name="btntriggerStipFUContigency">Trig Stip Engine FU Contigency </button>
+  </div>
+  <br>
+  <div>
+    <button type="button" class="layoutButton twButton" style="width: auto;" aria-hidden="false" tabindex="0" (click)="listFinalVOEOrder();" id="btnlistFinalVOEOrder" name="btnlistFinalVOEOrder">List Final VOE Order</button>
+    <button type="button" class="layoutButton twButton" style="width: auto;" aria-hidden="false" tabindex="0" (click)="listAppraisalExpiryOrders();" id="btnlistAppraisalExpiryOrders" name="btnlistAppraisalExpiryOrders">List Appraisal Expiry Orders</button>
+    <button type="button" class="layoutButton twButton" style="width: auto;" aria-hidden="false" tabindex="0" (click)="triggerAppraisalExpirationOrders();" id="btntriggerAppraisalExpirationOrders" name="btntriggerAppraisalExpirationOrders">Trigger appraisal expiration orders</button>
+  </div>
+  <br>
+	<div>
+		<div>
+			<label>Enterprise Deal Number:</label> <label class="grid-content" style="white-space: nowrap;" aria-hidden="false">{{edn}}</label>
+		</div>
+		<div>
+			<label>Deal Id:</label> <label class="grid-content" style="white-space: nowrap;" aria-hidden="false">{{dealId}}</label>
+		</div>
+		<div>
+			<label>Process Instance Id:</label> <label class="grid-content-bold" style="white-space: nowrap;" aria-hidden="false">{{processInstanceId}}</label>
+		</div>
+	</div>
+</div>
\ No newline at end of file
Index: src/main/resources/angular_io/app/views/partial/vendorSimulation/vendor-simulation.service.spec.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/vendorSimulation/vendor-simulation.service.spec.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/vendorSimulation/vendor-simulation.service.spec.ts	(revision 0)
@@ -0,0 +1,529 @@
+/* tslint:disable:no-unused-variable */
+import { async, ComponentFixture, inject, TestBed } from '@angular/core/testing';
+import { By }           from '@angular/platform-browser';
+import { DebugElement } from '@angular/core';
+import { MockBackend, MockConnection} from '@angular/http/testing';
+import {HttpModule, Http, XHRBackend, Response, ResponseOptions} from '@angular/http';
+import { Observable } from 'rxjs/Observable';
+import 'rxjs/add/observable/of';
+import { VendorSimulationService} from './vendor-simulation.service';
+////////  SPECS  /////////////
+describe('VendorSimulationService', function() {
+
+
+
+    const mockData = { id: 1234, dealId: 1000060090, processInstanceId: 7769 };
+    beforeEach(async(() => {
+        TestBed.configureTestingModule({
+            imports: [HttpModule],
+            providers: [VendorSimulationService, { provide: XHRBackend, useClass: MockBackend }]
+        })
+            .compileComponents();
+    }));
+
+    describe('Creating the service', () => {
+        it('can instantiate service when inject service',
+            inject([VendorSimulationService], (service: VendorSimulationService) => {
+                expect(service instanceof VendorSimulationService).toBe(true);
+            }));
+        it('can instantiate service with "new"', inject([Http], (http: Http) => {
+            expect(http).not.toBeNull('http should be provided');
+            let service = new VendorSimulationService(http);
+            expect(service instanceof VendorSimulationService).toBe(true, 'new service should be ok');
+        }));
+        it('can provide the mockBackend as XHRBackend',
+            inject([XHRBackend], (backend: MockBackend) => {
+                expect(backend).not.toBeNull('backend should be provided');
+            }));
+
+    });
+
+    describe('Calling getDeal service', () => {
+        let backend: MockBackend;
+        let service: VendorSimulationService;
+        let response: Response;
+        let edn = '1234';
+        let status: number;
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new VendorSimulationService(http);
+            let options = new ResponseOptions({ status: 200, body: { data: mockData } });
+            response = new Response(options);
+        }));
+
+        it('should return the correct Status when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.getDeal(edn).toPromise()
+                .then(res => {
+                    let b: any = res;
+                    expect(b).toBe(mockData, 'should return the correct Status code when using toPromise');
+                });
+        })));
+
+        it('should return the correct Status using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.getDeal(edn)
+                .do(res => {
+                    let b: any = res;
+                    expect(b).toBe(mockData, 'should return the correct Status code when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+    });
+
+    describe('Calling triggerStipScheduler service', () => {
+        let backend: MockBackend;
+        let service: VendorSimulationService;
+        let response: Response;
+        let edn = '1234';
+        let status: number;
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new VendorSimulationService(http);
+            let options = new ResponseOptions({ status: 200, body: { data: mockData } });
+            response = new Response(options);
+        }));
+
+        it('should return the correct data when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipScheduler(edn).toPromise()
+                .then(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using toPromise');
+                });
+        })));
+
+        it('should return the correct data using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipScheduler(edn)
+                .do(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+    });
+    describe('Calling triggerStipShedRefactor service', () => {
+        let backend: MockBackend;
+        let service: VendorSimulationService;
+        let response: Response;
+        let quartzBlockSize = 100;
+        let status: number;
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new VendorSimulationService(http);
+            let options = new ResponseOptions({ status: 200, body: { data: mockData } });
+            response = new Response(options);
+        }));
+
+        it('should return the correct data when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipShedRefactor(quartzBlockSize).toPromise()
+                .then(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using toPromise');
+                });
+        })));
+
+        it('should return the correct data using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipShedRefactor(quartzBlockSize)
+                .do(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+    });
+
+
+    describe('Calling triggerStipTaskFollowUp service', () => {
+        let backend: MockBackend;
+        let service: VendorSimulationService;
+        let response: Response;
+        let quartzBlockSize = 100;
+        let status: number;
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new VendorSimulationService(http);
+            let options = new ResponseOptions({ status: 200, body: { data: mockData } });
+            response = new Response(options);
+        }));
+
+        it('should return the correct data when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipTaskFollowUp(quartzBlockSize).toPromise()
+                .then(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using toPromise');
+                });
+        })));
+
+        it('should return the correct data using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipTaskFollowUp(quartzBlockSize)
+                .do(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+    });
+
+    describe('Calling triggerStipTaskFollowUpCema service', () => {
+        let backend: MockBackend;
+        let service: VendorSimulationService;
+        let response: Response;
+        let quartzBlockSize: 100;
+        let status: number;
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new VendorSimulationService(http);
+            let options = new ResponseOptions({ status: 200, body: { data: mockData } });
+            response = new Response(options);
+        }));
+
+        it('should return the correct data when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipTaskFollowUpCema(quartzBlockSize).toPromise()
+                .then(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using toPromise');
+                });
+        })));
+
+        it('should return the correct data using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipTaskFollowUpCema(quartzBlockSize)
+                .do(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+    });
+
+
+    describe('Calling triggerStipTask3rdPartyFloodFU service', () => {
+        let backend: MockBackend;
+        let service: VendorSimulationService;
+        let response: Response;
+        let quartzBlockSize: 100;
+        let status: number;
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new VendorSimulationService(http);
+            let options = new ResponseOptions({ status: 200, body: { data: mockData } });
+            response = new Response(options);
+        }));
+
+        it('should return the correct data when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipTask3rdPartyFloodFU(quartzBlockSize).toPromise()
+                .then(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using toPromise');
+                });
+        })));
+
+        it('should return the correct data using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipTask3rdPartyFloodFU(quartzBlockSize)
+                .do(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+    });
+
+    describe('Calling triggerStipTaskPriorToDisbur service', () => {
+        let backend: MockBackend;
+        let service: VendorSimulationService;
+        let response: Response;
+        let quartzBlockSize: 100;
+        let status: number;
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new VendorSimulationService(http);
+            let options = new ResponseOptions({ status: 200, body: { data: mockData } });
+            response = new Response(options);
+        }));
+
+        it('should return the correct data when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipTaskPriorToDisbur(quartzBlockSize).toPromise()
+                .then(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using toPromise');
+                });
+        })));
+
+        it('should return the correct data using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipTaskPriorToDisbur(quartzBlockSize)
+                .do(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+    });
+
+    describe('Calling triggerStipTaskCoopFollowUp service', () => {
+        let backend: MockBackend;
+        let service: VendorSimulationService;
+        let response: Response;
+        let quartzBlockSize: 100;
+        let status: number;
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new VendorSimulationService(http);
+            let options = new ResponseOptions({ status: 200, body: { data: mockData } });
+            response = new Response(options);
+        }));
+
+        it('should return the correct data when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipTaskCoopFollowUp(quartzBlockSize).toPromise()
+                .then(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using toPromise');
+                });
+        })));
+
+        it('should return the correct data using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipTaskCoopFollowUp(quartzBlockSize)
+                .do(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+    });
+
+    describe('Calling triggerStipTaskCommunicate service', () => {
+        let backend: MockBackend;
+        let service: VendorSimulationService;
+        let response: Response;
+        let quartzBlockSize: 100;
+        let status: number;
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new VendorSimulationService(http);
+            let options = new ResponseOptions({ status: 200, body: { data: mockData } });
+            response = new Response(options);
+        }));
+
+        it('should return the correct data when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipTaskCommunicate(quartzBlockSize).toPromise()
+                .then(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using toPromise');
+                });
+        })));
+
+        it('should return the correct data using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipTaskCommunicate(quartzBlockSize)
+                .do(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+    });
+    describe('Calling triggerStipExpiredDocs service', () => {
+        let backend: MockBackend;
+        let service: VendorSimulationService;
+        let response: Response;
+        let quartzBlockSize: 100;
+        let status: number;
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new VendorSimulationService(http);
+            let options = new ResponseOptions({ status: 200, body: { data: mockData } });
+            response = new Response(options);
+        }));
+
+        it('should return the correct data when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipExpiredDocs(quartzBlockSize).toPromise()
+                .then(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using toPromise');
+                });
+        })));
+
+        it('should return the correct data using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipExpiredDocs(quartzBlockSize)
+                .do(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+    });
+
+
+    describe('Calling triggerStipFUContigency service', () => {
+        let backend: MockBackend;
+        let service: VendorSimulationService;
+        let response: Response;
+        let edn = '1234';
+        let status: number;
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new VendorSimulationService(http);
+            let options = new ResponseOptions({ status: 200, body: { data: mockData } });
+            response = new Response(options);
+        }));
+
+        it('should return the correct data when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipFUContigency(edn).toPromise()
+                .then(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using toPromise');
+                });
+        })));
+
+        it('should return the correct data using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerStipFUContigency(edn)
+                .do(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+    });
+
+    describe('Calling listFinalVOEOrder service', () => {
+        let backend: MockBackend;
+        let service: VendorSimulationService;
+        let response: Response;
+        let edn = '1234';
+        let status: number;
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new VendorSimulationService(http);
+            let options = new ResponseOptions({ status: 200, body: { data: mockData } });
+            response = new Response(options);
+        }));
+
+        it('should return the correct data when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.listFinalVOEOrder(edn).toPromise()
+                .then(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using toPromise');
+                });
+        })));
+
+        it('should return the correct data using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.listFinalVOEOrder(edn)
+                .do(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+    });
+    describe('Calling listAppraisalExpiryOrders service', () => {
+        let backend: MockBackend;
+        let service: VendorSimulationService;
+        let response: Response;
+        let edn = '1234';
+        let status: number;
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new VendorSimulationService(http);
+            let options = new ResponseOptions({ status: 200, body: { data: mockData } });
+            response = new Response(options);
+        }));
+
+        it('should return the correct data when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.listAppraisalExpiryOrders(edn).toPromise()
+                .then(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using toPromise');
+                });
+        })));
+
+        it('should return the correct data using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.listAppraisalExpiryOrders(edn)
+                .do(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+    });
+    describe('Calling triggerAppraisalExpiryOrders service', () => {
+        let backend: MockBackend;
+        let service: VendorSimulationService;
+        let response: Response;
+        let edn = '1234';
+        let status: number;
+        beforeEach(inject([Http, XHRBackend], (http: Http, be: MockBackend) => {
+            backend = be;
+            service = new VendorSimulationService(http);
+            let options = new ResponseOptions({ status: 200, body: { data: mockData } });
+            response = new Response(options);
+        }));
+
+        it('should return the correct data when using toPromise', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerAppraisalExpiryOrders(edn).toPromise()
+                .then(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using toPromise');
+                });
+        })));
+
+        it('should return the correct data using (Observable.do)', async(inject([], () => {
+            backend.connections.subscribe((c: MockConnection) => c.mockRespond(response));
+            service.triggerAppraisalExpiryOrders(edn)
+                .do(res => {
+                    let b: any = res.json();
+                    console.log(b);
+                    expect(b.data.dealId).toBe(mockData.dealId, 'should return the correct data when using (Observable.do)');
+                })
+                .toPromise();
+        })));
+    });
+
+});
+
Index: src/main/resources/angular_io/app/views/partial/vendorSimulation/vendor-simulation.service.ts
===================================================================
--- src/main/resources/angular_io/app/views/partial/vendorSimulation/vendor-simulation.service.ts	(revision 0)
+++ src/main/resources/angular_io/app/views/partial/vendorSimulation/vendor-simulation.service.ts	(revision 0)
@@ -0,0 +1,103 @@
+import { Injectable } from '@angular/core';
+import { Http, Request, RequestOptionsArgs, Response, XHRBackend, RequestOptions, ConnectionBackend, Headers} from '@angular/http';
+//import { CoreHttpService } from '../lib/core-http.service';
+import { Observable }     from 'rxjs/Observable';
+import 'rxjs/Rx';
+
+@Injectable()
+export class VendorSimulationService {
+    url = "/app/vendorSimulation/";// URL to mock data
+    private headers = new Headers({ 'Content-Type': 'application/json' });
+    constructor(private coreHttpService: Http) {
+
+    }
+    getDeal(edn: string): Observable<Response> {
+        //let restUrl = url+'getDeal';
+        let restUrl = this.url + edn;
+        return this.coreHttpService.get(restUrl).map(this.extractData).catch(this.handleError);
+    }
+    triggerStipScheduler(edn: string): Observable<Response> {
+        //let restUrl = url+'triggerStipScheduler';
+        let restUrl = this.url + edn;
+        return this.coreHttpService.post(restUrl, JSON.stringify({ id: edn }), { headers: this.headers });
+    }
+    triggerStipShedRefactor(quartzBlockSize: number): Observable<Response> {
+        //let restUrl = url+'triggerStipShedRefactor';
+        let restUrl = this.url + quartzBlockSize;
+        return this.coreHttpService.post(restUrl, JSON.stringify({ id: quartzBlockSize }), { headers: this.headers });
+    }
+    triggerStipTaskFollowUp(quartzBlockSize: number): Observable<Response> {
+        //let restUrl = url+'triggerStipTaskFollowUp';
+        let restUrl = this.url + quartzBlockSize;
+        return this.coreHttpService.post(restUrl, JSON.stringify({ id: quartzBlockSize }), { headers: this.headers });
+    }
+    triggerStipTaskFollowUpCema(quartzBlockSize: number): Observable<Response> {
+        //let restUrl = url+'triggerStipTaskFollowUpCema';
+        let restUrl = this.url + quartzBlockSize;
+        return this.coreHttpService.post(restUrl, JSON.stringify({ id: quartzBlockSize }), { headers: this.headers });
+    }
+    triggerStipTask3rdPartyFloodFU(quartzBlockSize: number): Observable<Response> {
+        //let restUrl = url+'triggerStipTask3rdPartyFloodFU';
+        let restUrl = this.url + quartzBlockSize;
+        return this.coreHttpService.post(restUrl, JSON.stringify({ id: quartzBlockSize }), { headers: this.headers });
+    }
+    triggerStipTaskPriorToDisbur(quartzBlockSize: number): Observable<Response> {
+        //let restUrl = url+'triggerStipTaskPriorToDisbur';
+        let restUrl = this.url + quartzBlockSize;
+        return this.coreHttpService.post(restUrl, JSON.stringify({ id: quartzBlockSize }), { headers: this.headers });
+    }
+    triggerStipTaskCoopFollowUp(quartzBlockSize: number): Observable<Response> {
+        //let restUrl = url+'triggerStipTaskCoopFollowUp';
+        let restUrl = this.url + quartzBlockSize;
+        return this.coreHttpService.post(restUrl, JSON.stringify({ id: quartzBlockSize }), { headers: this.headers });
+    }
+    triggerStipTaskCommunicate(quartzBlockSize: number): Observable<Response> {
+        //let restUrl = url+'triggerStipTaskCommunicate';
+        let restUrl = this.url + quartzBlockSize;
+        return this.coreHttpService.post(restUrl, JSON.stringify({ id: quartzBlockSize }), { headers: this.headers });
+    }
+    triggerStipExpiredDocs(quartzBlockSize: number): Observable<Response> {
+        //let restUrl = url+'triggerStipExpiredDocs';
+        let restUrl = this.url + quartzBlockSize;
+        return this.coreHttpService.post(restUrl, JSON.stringify({ id: quartzBlockSize }), { headers: this.headers });
+    }
+
+    triggerStipFUContigency(edn: string): Observable<Response> {
+        //let restUrl = url+'triggerStipFUContigency';
+        let restUrl = this.url + edn;
+        return this.coreHttpService.post(restUrl, JSON.stringify({ id: edn }), { headers: this.headers });
+    }
+    listFinalVOEOrder(edn: string): Observable<Response> {
+        //let restUrl = url+'listFinalVOEOrder';
+        let restUrl = this.url + edn;
+        return this.coreHttpService.post(restUrl, JSON.stringify({ id: edn }), { headers: this.headers });
+    }
+    listAppraisalExpiryOrders(edn: string): Observable<Response> {
+        //let restUrl = url+'listAppraisalExpiryOrders';
+        let restUrl = this.url + edn;
+        return this.coreHttpService.post(restUrl, JSON.stringify({ id: edn }), { headers: this.headers });
+    }
+    triggerAppraisalExpiryOrders(edn: string): Observable<Response> {
+        //let restUrl = url+'triggerAppraisalExpiryOrders';
+        let restUrl = this.url + edn;
+        return this.coreHttpService.post(restUrl, JSON.stringify({ id: edn }), { headers: this.headers });
+    }
+
+    private extractData(res: Response) {
+        let body = res.json();
+        return body.data || {};
+    }
+    private handleError(error: Response | any) {
+        let errMsg: string;
+        if (error instanceof Response) {
+            const body = error.json() || '';
+            const err = body.error || JSON.stringify(body);
+            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;
+        } else {
+            errMsg = error.message ? error.message : error.toString();
+        }
+        console.error(errMsg);
+        return Observable.throw(errMsg);
+    }
+}
+
Index: src/main/resources/angular_io/package.json
===================================================================
--- src/main/resources/angular_io/package.json	(revision 0)
+++ src/main/resources/angular_io/package.json	(revision 0)
@@ -0,0 +1,63 @@
+{
+  "name": "core-admin",
+  "version": "1.0.0",
+  "description": "CoreAdmin package.json supplemented with testing support",
+  "scripts": {
+    "build": " \"npm run lint\" && tsc -p ./",
+    "build:watch": " \"npm run lint\" && tsc -p ./ -w",
+    "build:e2e": "tsc -p e2e/",
+    "serve": "lite-server -c=server/config/config.json",
+    "serve:e2e": "lite-server -c=bs-config.e2e.json",
+    "prestart": "npm run build",
+    "start": "concurrently \"npm run build:watch\" \"npm run serve\"",
+    "pree2e": "npm run build:e2e",
+    "e2e": "concurrently \"npm run serve:e2e\" \"npm run protractor\" --kill-others --success first",
+    "preprotractor": "webdriver-manager update",
+    "protractor": "protractor protractor.config.js",
+    "pretest": "npm run build",
+    "test": "concurrently \"npm run build:watch\" \"karma start karma.conf.js\"",
+    "pretest:once": "npm run build",
+    "test:once": "karma start karma.conf.js --single-run",
+    "lint": "tslint ./app/**/*.ts -t verbose"
+  },
+  "keywords": [],
+  "author": "u270106",
+  "license": "MIT",
+  "dependencies": {
+    "@angular/common": "~2.4.0",
+    "@angular/compiler": "~2.4.0",
+    "@angular/core": "~2.4.0",
+    "@angular/forms": "~2.4.0",
+    "@angular/http": "~2.4.0",
+    "@angular/platform-browser": "~2.4.0",
+    "@angular/platform-browser-dynamic": "~2.4.0",
+    "@angular/router": "~3.4.0",
+    "@angular/upgrade": "~2.4.0",
+    "angular-in-memory-web-api": "~0.2.4",
+    "core-js": "^2.4.1",
+    "rxjs": "5.0.1",
+    "systemjs": "0.19.40",
+    "zone.js": "^0.7.4"
+  },
+  "devDependencies": {
+    "@types/angular": "^1.6.6",
+    "@types/core-js": "^0.9.35",
+    "@types/jasmine": "2.5.36",
+    "@types/node": "^6.0.46",
+    "canonical-path": "0.0.2",
+    "concurrently": "^3.2.0",
+    "jasmine-core": "~2.4.1",
+    "karma": "^1.3.0",
+    "karma-chrome-launcher": "^2.0.0",
+    "karma-cli": "^1.0.1",
+    "karma-jasmine": "^1.0.2",
+    "karma-jasmine-html-reporter": "^0.2.2",
+    "lite-server": "^2.2.2",
+    "live-server": "^1.0.0",
+    "lodash": "^4.16.4",
+    "protractor": "~4.0.14",
+    "rimraf": "^2.5.4",
+    "tslint": "^3.15.1",
+    "typescript": "~2.0.10"
+  }
+}
Index: src/main/resources/angular_io/readme.md
===================================================================
--- src/main/resources/angular_io/readme.md	(revision 0)
+++ src/main/resources/angular_io/readme.md	(revision 0)
@@ -0,0 +1,33 @@
+-----------Running Locally-----------
+Install latest version of node and npm (if not installed)
+open cmd in this directory
+Run "npm install" (if not run previously)
+Run "npm run start"
+
+This will start the lite-server with required config ("server/config/config.json") at location '../'
+
+check for the below message in the cmd
+  -------------------------------------
+        Local: http://localhost:3000
+     External: http://10.78.175.21:3000
+  -------------------------------------
+use - http://localhost:3000/index_angular.html for angular2 based ui (default uses angular1)
+
+
+--------------------Proxy config--------------------
+
+--------------------NPM--------------------
+Add the following config to .npmrc in the <CURRENT_USER> directory
+proxy=http://proxy.wellsfargo.com:8080
+https-proxy=http://proxy.wellsfargo.com:8080
+sslverify=false
+strict-ssl=false
+
+--------------------GIT--------------------
+Add the following config to .gitconfig in the <CURRENT_USER> directory
+[http]
+	sslverify = false
+	proxy = http://proxy.wellsfargo.com:8080
+[https]
+	sslverify = false
+	proxy = http://proxy.wellsfargo.com:8080

Property changes on: src\main\resources\angular_io\scripts
___________________________________________________________________
Added: bugtraq:number
   + true

Index: src/main/resources/angular_io/scripts/systemjs.config.web.js
===================================================================
--- src/main/resources/angular_io/scripts/systemjs.config.web.js	(revision 0)
+++ src/main/resources/angular_io/scripts/systemjs.config.web.js	(revision 0)
@@ -0,0 +1,78 @@
+/**
+ * WEB ANGULAR VERSION
+ * (based on systemjs.config.js in angular.io)
+ * System configuration for Angular samples
+ * Adjust as necessary for your application needs.
+ */
+(function (global) {
+  System.config({
+    // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER
+    // transpiler: 'ts',
+    // typescriptOptions: {
+    //   // Copy of compiler options in standard tsconfig.json
+    //   "target": "es5",
+    //   "module": "system",
+    //   "moduleResolution": "node",
+    //   "sourceMap": true,
+    //   "emitDecoratorMetadata": true,
+    //   "experimentalDecorators": true,
+    //   "noImplicitAny": true,
+    //   "suppressImplicitAnyIndexErrors": true
+    // },
+    // meta: {
+    //   'typescript': {
+    //     "exports": "ts"
+    //   }
+    // },
+    paths: {
+      // paths serve as alias
+      'npm:': 'angular_io/node_modules/'
+    },
+    // map tells the System loader where to look for things
+    map: {
+      // our app is within the app folder
+      app: 'angular_io/target/app',
+
+      // angular bundles
+      '@angular/core': 'npm:@angular/core/bundles/core.umd.js',
+      '@angular/common': 'npm:@angular/common/bundles/common.umd.js',
+      '@angular/compiler': 'npm:@angular/compiler/bundles/compiler.umd.js',
+      '@angular/platform-browser': 'npm:@angular/platform-browser/bundles/platform-browser.umd.js',
+      '@angular/platform-browser-dynamic': 'npm:@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',
+      '@angular/http': 'npm:@angular/http/bundles/http.umd.js',
+      '@angular/router': 'npm:@angular/router/bundles/router.umd.js',
+      '@angular/forms': 'npm:@angular/forms/bundles/forms.umd.js',
+      '@angular/upgrade': 'npm:@angular/upgrade/bundles/upgrade.umd.js',
+      '@angular/upgrade/static': 'npm:@angular/upgrade/bundles/upgrade-static.umd.js',
+
+      // other libraries
+      'rxjs':                      'npm:rxjs',
+      'angular-in-memory-web-api': 'npm:angular-in-memory-web-api/bundles/in-memory-web-api.umd.js',
+      'ts':                        'npm:plugin-typescript@4.0.10/lib/plugin.js',
+      'typescript':                'npm:typescript@2.0.3/lib/typescript.js'
+      //'@types': 'npm:@types'
+
+    },
+    // packages tells the System loader how to load when no filename and/or no extension
+    packages: {
+      app: {
+        main: './main',
+        defaultExtension: 'js'
+      },
+      rxjs: {
+        defaultExtension: 'js'
+      }
+    }
+  });
+  System.import('app').then(function(msg){
+        console.log("System Module loaded");
+    }).catch(
+        console.error.bind(console)
+    );
+})(this);
+
+/*
+Copyright 2016 Google Inc. All Rights Reserved.
+Use of this source code is governed by an MIT-style license that
+can be found in the LICENSE file at http://angular.io/license
+*/

Property changes on: src\main\resources\angular_io\server
___________________________________________________________________
Added: bugtraq:number
   + true


Property changes on: src\main\resources\angular_io\server\config
___________________________________________________________________
Added: bugtraq:number
   + true

Index: src/main/resources/angular_io/server/config/config.json
===================================================================
--- src/main/resources/angular_io/server/config/config.json	(revision 0)
+++ src/main/resources/angular_io/server/config/config.json	(revision 0)
@@ -0,0 +1,11 @@
+{
+  "port":3000,
+  "server": {
+    "baseDir": "../",
+    "index":"index_angular.html",
+    "routes": {
+      "/coreStaticWeb": "../../../../../CoreStaticWeb/src/main/resources",
+      "/applicationAdmin": "../../../../../ApplicationAdminWeb/src/main/resources"
+    }
+  }
+}

Property changes on: src\main\resources\angular_io\thirdparty
___________________________________________________________________
Added: bugtraq:number
   + true


Property changes on: src\main\resources\angular_io\thirdparty\other
___________________________________________________________________
Added: bugtraq:number
   + true

Index: src/main/resources/angular_io/thirdparty/other/shim.min.js
===================================================================
--- src/main/resources/angular_io/thirdparty/other/shim.min.js	(revision 0)
+++ src/main/resources/angular_io/thirdparty/other/shim.min.js	(revision 0)
@@ -0,0 +1,10 @@
+/**
+ * core-js 2.4.1
+ * https://github.com/zloirock/core-js
+ * License: http://rock.mit-license.org
+ * ɠ2016 Denis Pushkarev
+ */
+!function(a,b,c){"use strict";!function(a){function __webpack_require__(c){if(b[c])return b[c].exports;var d=b[c]={exports:{},id:c,loaded:!1};return a[c].call(d.exports,d,d.exports,__webpack_require__),d.loaded=!0,d.exports}var b={};return __webpack_require__.m=a,__webpack_require__.c=b,__webpack_require__.p="",__webpack_require__(0)}([function(a,b,c){c(1),c(50),c(51),c(52),c(54),c(55),c(58),c(59),c(60),c(61),c(62),c(63),c(64),c(65),c(66),c(68),c(70),c(72),c(74),c(77),c(78),c(79),c(83),c(86),c(87),c(88),c(89),c(91),c(92),c(93),c(94),c(95),c(97),c(99),c(100),c(101),c(103),c(104),c(105),c(107),c(108),c(109),c(111),c(112),c(113),c(114),c(115),c(116),c(117),c(118),c(119),c(120),c(121),c(122),c(123),c(124),c(126),c(130),c(131),c(132),c(133),c(137),c(139),c(140),c(141),c(142),c(143),c(144),c(145),c(146),c(147),c(148),c(149),c(150),c(151),c(152),c(158),c(159),c(161),c(162),c(163),c(167),c(168),c(169),c(170),c(171),c(173),c(174),c(175),c(176),c(179),c(181),c(182),c(183),c(185),c(187),c(189),c(190),c(191),c(193),c(194),c(195),c(196),c(203),c(206),c(207),c(209),c(210),c(211),c(212),c(213),c(214),c(215),c(216),c(217),c(218),c(219),c(220),c(222),c(223),c(224),c(225),c(226),c(227),c(228),c(229),c(231),c(234),c(235),c(237),c(238),c(239),c(240),c(241),c(242),c(243),c(244),c(245),c(246),c(247),c(249),c(250),c(251),c(252),c(253),c(254),c(255),c(256),c(258),c(259),c(261),c(262),c(263),c(264),c(267),c(268),c(269),c(270),c(271),c(272),c(273),c(274),c(276),c(277),c(278),c(279),c(280),c(281),c(282),c(283),c(284),c(285),c(286),c(287),a.exports=c(288)},function(a,b,d){var e=d(2),f=d(3),g=d(4),h=d(6),i=d(16),j=d(20).KEY,k=d(5),l=d(21),m=d(22),n=d(17),o=d(23),p=d(24),q=d(25),r=d(27),s=d(40),t=d(43),u=d(10),v=d(30),w=d(14),x=d(15),y=d(44),z=d(47),A=d(49),B=d(9),C=d(28),D=A.f,E=B.f,F=z.f,G=e.Symbol,H=e.JSON,I=H&&H.stringify,J="prototype",K=o("_hidden"),L=o("toPrimitive"),M={}.propertyIsEnumerable,N=l("symbol-registry"),O=l("symbols"),P=l("op-symbols"),Q=Object[J],R="function"==typeof G,S=e.QObject,T=!S||!S[J]||!S[J].findChild,U=g&&k(function(){return 7!=y(E({},"a",{get:function(){return E(this,"a",{value:7}).a}})).a})?function(a,b,c){var d=D(Q,b);d&&delete Q[b],E(a,b,c),d&&a!==Q&&E(Q,b,d)}:E,V=function(a){var b=O[a]=y(G[J]);return b._k=a,b},W=R&&"symbol"==typeof G.iterator?function(a){return"symbol"==typeof a}:function(a){return a instanceof G},X=function defineProperty(a,b,c){return a===Q&&X(P,b,c),u(a),b=w(b,!0),u(c),f(O,b)?(c.enumerable?(f(a,K)&&a[K][b]&&(a[K][b]=!1),c=y(c,{enumerable:x(0,!1)})):(f(a,K)||E(a,K,x(1,{})),a[K][b]=!0),U(a,b,c)):E(a,b,c)},Y=function defineProperties(a,b){u(a);for(var c,d=s(b=v(b)),e=0,f=d.length;f>e;)X(a,c=d[e++],b[c]);return a},Z=function create(a,b){return b===c?y(a):Y(y(a),b)},$=function propertyIsEnumerable(a){var b=M.call(this,a=w(a,!0));return!(this===Q&&f(O,a)&&!f(P,a))&&(!(b||!f(this,a)||!f(O,a)||f(this,K)&&this[K][a])||b)},_=function getOwnPropertyDescriptor(a,b){if(a=v(a),b=w(b,!0),a!==Q||!f(O,b)||f(P,b)){var c=D(a,b);return!c||!f(O,b)||f(a,K)&&a[K][b]||(c.enumerable=!0),c}},aa=function getOwnPropertyNames(a){for(var b,c=F(v(a)),d=[],e=0;c.length>e;)f(O,b=c[e++])||b==K||b==j||d.push(b);return d},ba=function getOwnPropertySymbols(a){for(var b,c=a===Q,d=F(c?P:v(a)),e=[],g=0;d.length>g;)!f(O,b=d[g++])||c&&!f(Q,b)||e.push(O[b]);return e};R||(G=function Symbol(){if(this instanceof G)throw TypeError("Symbol is not a constructor!");var a=n(arguments.length>0?arguments[0]:c),b=function(c){this===Q&&b.call(P,c),f(this,K)&&f(this[K],a)&&(this[K][a]=!1),U(this,a,x(1,c))};return g&&T&&U(Q,a,{configurable:!0,set:b}),V(a)},i(G[J],"toString",function toString(){return this._k}),A.f=_,B.f=X,d(48).f=z.f=aa,d(42).f=$,d(41).f=ba,g&&!d(26)&&i(Q,"propertyIsEnumerable",$,!0),p.f=function(a){return V(o(a))}),h(h.G+h.W+h.F*!R,{Symbol:G});for(var ca="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),da=0;ca.length>da;)o(ca[da++]);for(var ca=C(o.store),da=0;ca.length>da;)q(ca[da++]);h(h.S+h.F*!R,"Symbol",{"for":function(a){return f(N,a+="")?N[a]:N[a]=G(a)},keyFor:function keyFor(a){if(W(a))return r(N,a);throw TypeError(a+" is not a symbol!")},useSetter:function(){T=!0},useSimple:function(){T=!1}}),h(h.S+h.F*!R,"Object",{create:Z,defineProperty:X,defineProperties:Y,getOwnPropertyDescriptor:_,getOwnPropertyNames:aa,getOwnPropertySymbols:ba}),H&&h(h.S+h.F*(!R||k(function(){var a=G();return"[null]"!=I([a])||"{}"!=I({a:a})||"{}"!=I(Object(a))})),"JSON",{stringify:function stringify(a){if(a!==c&&!W(a)){for(var b,d,e=[a],f=1;arguments.length>f;)e.push(arguments[f++]);return b=e[1],"function"==typeof b&&(d=b),!d&&t(b)||(b=function(a,b){if(d&&(b=d.call(this,a,b)),!W(b))return b}),e[1]=b,I.apply(H,e)}}}),G[J][L]||d(8)(G[J],L,G[J].valueOf),m(G,"Symbol"),m(Math,"Math",!0),m(e.JSON,"JSON",!0)},function(a,c){var d=a.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof b&&(b=d)},function(a,b){var c={}.hasOwnProperty;a.exports=function(a,b){return c.call(a,b)}},function(a,b,c){a.exports=!c(5)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(a,b){a.exports=function(a){try{return!!a()}catch(b){return!0}}},function(a,b,d){var e=d(2),f=d(7),g=d(8),h=d(16),i=d(18),j="prototype",k=function(a,b,d){var l,m,n,o,p=a&k.F,q=a&k.G,r=a&k.S,s=a&k.P,t=a&k.B,u=q?e:r?e[b]||(e[b]={}):(e[b]||{})[j],v=q?f:f[b]||(f[b]={}),w=v[j]||(v[j]={});q&&(d=b);for(l in d)m=!p&&u&&u[l]!==c,n=(m?u:d)[l],o=t&&m?i(n,e):s&&"function"==typeof n?i(Function.call,n):n,u&&h(u,l,n,a&k.U),v[l]!=n&&g(v,l,o),s&&w[l]!=n&&(w[l]=n)};e.core=f,k.F=1,k.G=2,k.S=4,k.P=8,k.B=16,k.W=32,k.U=64,k.R=128,a.exports=k},function(b,c){var d=b.exports={version:"2.4.0"};"number"==typeof a&&(a=d)},function(a,b,c){var d=c(9),e=c(15);a.exports=c(4)?function(a,b,c){return d.f(a,b,e(1,c))}:function(a,b,c){return a[b]=c,a}},function(a,b,c){var d=c(10),e=c(12),f=c(14),g=Object.defineProperty;b.f=c(4)?Object.defineProperty:function defineProperty(a,b,c){if(d(a),b=f(b,!0),d(c),e)try{return g(a,b,c)}catch(h){}if("get"in c||"set"in c)throw TypeError("Accessors not supported!");return"value"in c&&(a[b]=c.value),a}},function(a,b,c){var d=c(11);a.exports=function(a){if(!d(a))throw TypeError(a+" is not an object!");return a}},function(a,b){a.exports=function(a){return"object"==typeof a?null!==a:"function"==typeof a}},function(a,b,c){a.exports=!c(4)&&!c(5)(function(){return 7!=Object.defineProperty(c(13)("div"),"a",{get:function(){return 7}}).a})},function(a,b,c){var d=c(11),e=c(2).document,f=d(e)&&d(e.createElement);a.exports=function(a){return f?e.createElement(a):{}}},function(a,b,c){var d=c(11);a.exports=function(a,b){if(!d(a))return a;var c,e;if(b&&"function"==typeof(c=a.toString)&&!d(e=c.call(a)))return e;if("function"==typeof(c=a.valueOf)&&!d(e=c.call(a)))return e;if(!b&&"function"==typeof(c=a.toString)&&!d(e=c.call(a)))return e;throw TypeError("Can't convert object to primitive value")}},function(a,b){a.exports=function(a,b){return{enumerable:!(1&a),configurable:!(2&a),writable:!(4&a),value:b}}},function(a,b,c){var d=c(2),e=c(8),f=c(3),g=c(17)("src"),h="toString",i=Function[h],j=(""+i).split(h);c(7).inspectSource=function(a){return i.call(a)},(a.exports=function(a,b,c,h){var i="function"==typeof c;i&&(f(c,"name")||e(c,"name",b)),a[b]!==c&&(i&&(f(c,g)||e(c,g,a[b]?""+a[b]:j.join(String(b)))),a===d?a[b]=c:h?a[b]?a[b]=c:e(a,b,c):(delete a[b],e(a,b,c)))})(Function.prototype,h,function toString(){return"function"==typeof this&&this[g]||i.call(this)})},function(a,b){var d=0,e=Math.random();a.exports=function(a){return"Symbol(".concat(a===c?"":a,")_",(++d+e).toString(36))}},function(a,b,d){var e=d(19);a.exports=function(a,b,d){if(e(a),b===c)return a;switch(d){case 1:return function(c){return a.call(b,c)};case 2:return function(c,d){return a.call(b,c,d)};case 3:return function(c,d,e){return a.call(b,c,d,e)}}return function(){return a.apply(b,arguments)}}},function(a,b){a.exports=function(a){if("function"!=typeof a)throw TypeError(a+" is not a function!");return a}},function(a,b,c){var d=c(17)("meta"),e=c(11),f=c(3),g=c(9).f,h=0,i=Object.isExtensible||function(){return!0},j=!c(5)(function(){return i(Object.preventExtensions({}))}),k=function(a){g(a,d,{value:{i:"O"+ ++h,w:{}}})},l=function(a,b){if(!e(a))return"symbol"==typeof a?a:("string"==typeof a?"S":"P")+a;if(!f(a,d)){if(!i(a))return"F";if(!b)return"E";k(a)}return a[d].i},m=function(a,b){if(!f(a,d)){if(!i(a))return!0;if(!b)return!1;k(a)}return a[d].w},n=function(a){return j&&o.NEED&&i(a)&&!f(a,d)&&k(a),a},o=a.exports={KEY:d,NEED:!1,fastKey:l,getWeak:m,onFreeze:n}},function(a,b,c){var d=c(2),e="__core-js_shared__",f=d[e]||(d[e]={});a.exports=function(a){return f[a]||(f[a]={})}},function(a,b,c){var d=c(9).f,e=c(3),f=c(23)("toStringTag");a.exports=function(a,b,c){a&&!e(a=c?a:a.prototype,f)&&d(a,f,{configurable:!0,value:b})}},function(a,b,c){var d=c(21)("wks"),e=c(17),f=c(2).Symbol,g="function"==typeof f,h=a.exports=function(a){return d[a]||(d[a]=g&&f[a]||(g?f:e)("Symbol."+a))};h.store=d},function(a,b,c){b.f=c(23)},function(a,b,c){var d=c(2),e=c(7),f=c(26),g=c(24),h=c(9).f;a.exports=function(a){var b=e.Symbol||(e.Symbol=f?{}:d.Symbol||{});"_"==a.charAt(0)||a in b||h(b,a,{value:g.f(a)})}},function(a,b){a.exports=!1},function(a,b,c){var d=c(28),e=c(30);a.exports=function(a,b){for(var c,f=e(a),g=d(f),h=g.length,i=0;h>i;)if(f[c=g[i++]]===b)return c}},function(a,b,c){var d=c(29),e=c(39);a.exports=Object.keys||function keys(a){return d(a,e)}},function(a,b,c){var d=c(3),e=c(30),f=c(34)(!1),g=c(38)("IE_PROTO");a.exports=function(a,b){var c,h=e(a),i=0,j=[];for(c in h)c!=g&&d(h,c)&&j.push(c);for(;b.length>i;)d(h,c=b[i++])&&(~f(j,c)||j.push(c));return j}},function(a,b,c){var d=c(31),e=c(33);a.exports=function(a){return d(e(a))}},function(a,b,c){var d=c(32);a.exports=Object("z").propertyIsEnumerable(0)?Object:function(a){return"String"==d(a)?a.split(""):Object(a)}},function(a,b){var c={}.toString;a.exports=function(a){return c.call(a).slice(8,-1)}},function(a,b){a.exports=function(a){if(a==c)throw TypeError("Can't call method on  "+a);return a}},function(a,b,c){var d=c(30),e=c(35),f=c(37);a.exports=function(a){return function(b,c,g){var h,i=d(b),j=e(i.length),k=f(g,j);if(a&&c!=c){for(;j>k;)if(h=i[k++],h!=h)return!0}else for(;j>k;k++)if((a||k in i)&&i[k]===c)return a||k||0;return!a&&-1}}},function(a,b,c){var d=c(36),e=Math.min;a.exports=function(a){return a>0?e(d(a),9007199254740991):0}},function(a,b){var c=Math.ceil,d=Math.floor;a.exports=function(a){return isNaN(a=+a)?0:(a>0?d:c)(a)}},function(a,b,c){var d=c(36),e=Math.max,f=Math.min;a.exports=function(a,b){return a=d(a),a<0?e(a+b,0):f(a,b)}},function(a,b,c){var d=c(21)("keys"),e=c(17);a.exports=function(a){return d[a]||(d[a]=e(a))}},function(a,b){a.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(a,b,c){var d=c(28),e=c(41),f=c(42);a.exports=function(a){var b=d(a),c=e.f;if(c)for(var g,h=c(a),i=f.f,j=0;h.length>j;)i.call(a,g=h[j++])&&b.push(g);return b}},function(a,b){b.f=Object.getOwnPropertySymbols},function(a,b){b.f={}.propertyIsEnumerable},function(a,b,c){var d=c(32);a.exports=Array.isArray||function isArray(a){return"Array"==d(a)}},function(a,b,d){var e=d(10),f=d(45),g=d(39),h=d(38)("IE_PROTO"),i=function(){},j="prototype",k=function(){var a,b=d(13)("iframe"),c=g.length,e="<",f=">";for(b.style.display="none",d(46).appendChild(b),b.src="javascript:",a=b.contentWindow.document,a.open(),a.write(e+"script"+f+"document.F=Object"+e+"/script"+f),a.close(),k=a.F;c--;)delete k[j][g[c]];return k()};a.exports=Object.create||function create(a,b){var d;return null!==a?(i[j]=e(a),d=new i,i[j]=null,d[h]=a):d=k(),b===c?d:f(d,b)}},function(a,b,c){var d=c(9),e=c(10),f=c(28);a.exports=c(4)?Object.defineProperties:function defineProperties(a,b){e(a);for(var c,g=f(b),h=g.length,i=0;h>i;)d.f(a,c=g[i++],b[c]);return a}},function(a,b,c){a.exports=c(2).document&&document.documentElement},function(a,b,c){var d=c(30),e=c(48).f,f={}.toString,g="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],h=function(a){try{return e(a)}catch(b){return g.slice()}};a.exports.f=function getOwnPropertyNames(a){return g&&"[object Window]"==f.call(a)?h(a):e(d(a))}},function(a,b,c){var d=c(29),e=c(39).concat("length","prototype");b.f=Object.getOwnPropertyNames||function getOwnPropertyNames(a){return d(a,e)}},function(a,b,c){var d=c(42),e=c(15),f=c(30),g=c(14),h=c(3),i=c(12),j=Object.getOwnPropertyDescriptor;b.f=c(4)?j:function getOwnPropertyDescriptor(a,b){if(a=f(a),b=g(b,!0),i)try{return j(a,b)}catch(c){}if(h(a,b))return e(!d.f.call(a,b),a[b])}},function(a,b,c){var d=c(6);d(d.S+d.F*!c(4),"Object",{defineProperty:c(9).f})},function(a,b,c){var d=c(6);d(d.S+d.F*!c(4),"Object",{defineProperties:c(45)})},function(a,b,c){var d=c(30),e=c(49).f;c(53)("getOwnPropertyDescriptor",function(){return function getOwnPropertyDescriptor(a,b){return e(d(a),b)}})},function(a,b,c){var d=c(6),e=c(7),f=c(5);a.exports=function(a,b){var c=(e.Object||{})[a]||Object[a],g={};g[a]=b(c),d(d.S+d.F*f(function(){c(1)}),"Object",g)}},function(a,b,c){var d=c(6);d(d.S,"Object",{create:c(44)})},function(a,b,c){var d=c(56),e=c(57);c(53)("getPrototypeOf",function(){return function getPrototypeOf(a){return e(d(a))}})},function(a,b,c){var d=c(33);a.exports=function(a){return Object(d(a))}},function(a,b,c){var d=c(3),e=c(56),f=c(38)("IE_PROTO"),g=Object.prototype;a.exports=Object.getPrototypeOf||function(a){return a=e(a),d(a,f)?a[f]:"function"==typeof a.constructor&&a instanceof a.constructor?a.constructor.prototype:a instanceof Object?g:null}},function(a,b,c){var d=c(56),e=c(28);c(53)("keys",function(){return function keys(a){return e(d(a))}})},function(a,b,c){c(53)("getOwnPropertyNames",function(){return c(47).f})},function(a,b,c){var d=c(11),e=c(20).onFreeze;c(53)("freeze",function(a){return function freeze(b){return a&&d(b)?a(e(b)):b}})},function(a,b,c){var d=c(11),e=c(20).onFreeze;c(53)("seal",function(a){return function seal(b){return a&&d(b)?a(e(b)):b}})},function(a,b,c){var d=c(11),e=c(20).onFreeze;c(53)("preventExtensions",function(a){return function preventExtensions(b){return a&&d(b)?a(e(b)):b}})},function(a,b,c){var d=c(11);c(53)("isFrozen",function(a){return function isFrozen(b){return!d(b)||!!a&&a(b)}})},function(a,b,c){var d=c(11);c(53)("isSealed",function(a){return function isSealed(b){return!d(b)||!!a&&a(b)}})},function(a,b,c){var d=c(11);c(53)("isExtensible",function(a){return function isExtensible(b){return!!d(b)&&(!a||a(b))}})},function(a,b,c){var d=c(6);d(d.S+d.F,"Object",{assign:c(67)})},function(a,b,c){var d=c(28),e=c(41),f=c(42),g=c(56),h=c(31),i=Object.assign;a.exports=!i||c(5)(function(){var a={},b={},c=Symbol(),d="abcdefghijklmnopqrst";return a[c]=7,d.split("").forEach(function(a){b[a]=a}),7!=i({},a)[c]||Object.keys(i({},b)).join("")!=d})?function assign(a,b){for(var c=g(a),i=arguments.length,j=1,k=e.f,l=f.f;i>j;)for(var m,n=h(arguments[j++]),o=k?d(n).concat(k(n)):d(n),p=o.length,q=0;p>q;)l.call(n,m=o[q++])&&(c[m]=n[m]);return c}:i},function(a,b,c){var d=c(6);d(d.S,"Object",{is:c(69)})},function(a,b){a.exports=Object.is||function is(a,b){return a===b?0!==a||1/a===1/b:a!=a&&b!=b}},function(a,b,c){var d=c(6);d(d.S,"Object",{setPrototypeOf:c(71).set})},function(a,b,d){var e=d(11),f=d(10),g=function(a,b){if(f(a),!e(b)&&null!==b)throw TypeError(b+": can't set as prototype!")};a.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(a,b,c){try{c=d(18)(Function.call,d(49).f(Object.prototype,"__proto__").set,2),c(a,[]),b=!(a instanceof Array)}catch(e){b=!0}return function setPrototypeOf(a,d){return g(a,d),b?a.__proto__=d:c(a,d),a}}({},!1):c),check:g}},function(a,b,c){var d=c(73),e={};e[c(23)("toStringTag")]="z",e+""!="[object z]"&&c(16)(Object.prototype,"toString",function toString(){return"[object "+d(this)+"]"},!0)},function(a,b,d){var e=d(32),f=d(23)("toStringTag"),g="Arguments"==e(function(){return arguments}()),h=function(a,b){try{return a[b]}catch(c){}};a.exports=function(a){var b,d,i;return a===c?"Undefined":null===a?"Null":"string"==typeof(d=h(b=Object(a),f))?d:g?e(b):"Object"==(i=e(b))&&"function"==typeof b.callee?"Arguments":i}},function(a,b,c){var d=c(6);d(d.P,"Function",{bind:c(75)})},function(a,b,c){var d=c(19),e=c(11),f=c(76),g=[].slice,h={},i=function(a,b,c){if(!(b in h)){for(var d=[],e=0;e<b;e++)d[e]="a["+e+"]";h[b]=Function("F,a","return new F("+d.join(",")+")")}return h[b](a,c)};a.exports=Function.bind||function bind(a){var b=d(this),c=g.call(arguments,1),h=function(){var d=c.concat(g.call(arguments));return this instanceof h?i(b,d.length,d):f(b,d,a)};return e(b.prototype)&&(h.prototype=b.prototype),h}},function(a,b){a.exports=function(a,b,d){var e=d===c;switch(b.length){case 0:return e?a():a.call(d);case 1:return e?a(b[0]):a.call(d,b[0]);case 2:return e?a(b[0],b[1]):a.call(d,b[0],b[1]);case 3:return e?a(b[0],b[1],b[2]):a.call(d,b[0],b[1],b[2]);case 4:return e?a(b[0],b[1],b[2],b[3]):a.call(d,b[0],b[1],b[2],b[3])}return a.apply(d,b)}},function(a,b,c){var d=c(9).f,e=c(15),f=c(3),g=Function.prototype,h=/^\s*function ([^ (]*)/,i="name",j=Object.isExtensible||function(){return!0};i in g||c(4)&&d(g,i,{configurable:!0,get:function(){try{var a=this,b=(""+a).match(h)[1];return f(a,i)||!j(a)||d(a,i,e(5,b)),b}catch(c){return""}}})},function(a,b,c){var d=c(11),e=c(57),f=c(23)("hasInstance"),g=Function.prototype;f in g||c(9).f(g,f,{value:function(a){if("function"!=typeof this||!d(a))return!1;if(!d(this.prototype))return a instanceof this;for(;a=e(a);)if(this.prototype===a)return!0;return!1}})},function(a,b,c){var d=c(2),e=c(3),f=c(32),g=c(80),h=c(14),i=c(5),j=c(48).f,k=c(49).f,l=c(9).f,m=c(81).trim,n="Number",o=d[n],p=o,q=o.prototype,r=f(c(44)(q))==n,s="trim"in String.prototype,t=function(a){var b=h(a,!1);if("string"==typeof b&&b.length>2){b=s?b.trim():m(b,3);var c,d,e,f=b.charCodeAt(0);if(43===f||45===f){if(c=b.charCodeAt(2),88===c||120===c)return NaN}else if(48===f){switch(b.charCodeAt(1)){case 66:case 98:d=2,e=49;break;case 79:case 111:d=8,e=55;break;default:return+b}for(var g,i=b.slice(2),j=0,k=i.length;j<k;j++)if(g=i.charCodeAt(j),g<48||g>e)return NaN;return parseInt(i,d)}}return+b};if(!o(" 0o1")||!o("0b1")||o("+0x1")){o=function Number(a){var b=arguments.length<1?0:a,c=this;return c instanceof o&&(r?i(function(){q.valueOf.call(c)}):f(c)!=n)?g(new p(t(b)),c,o):t(b)};for(var u,v=c(4)?j(p):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),w=0;v.length>w;w++)e(p,u=v[w])&&!e(o,u)&&l(o,u,k(p,u));o.prototype=q,q.constructor=o,c(16)(d,n,o)}},function(a,b,c){var d=c(11),e=c(71).set;a.exports=function(a,b,c){var f,g=b.constructor;return g!==c&&"function"==typeof g&&(f=g.prototype)!==c.prototype&&d(f)&&e&&e(a,f),a}},function(a,b,c){var d=c(6),e=c(33),f=c(5),g=c(82),h="["+g+"]",i="??",j=RegExp("^"+h+h+"*"),k=RegExp(h+h+"*$"),l=function(a,b,c){var e={},h=f(function(){return!!g[a]()||i[a]()!=i}),j=e[a]=h?b(m):g[a];c&&(e[c]=j),d(d.P+d.F*h,"String",e)},m=l.trim=function(a,b){return a=String(e(a)),1&b&&(a=a.replace(j,"")),2&b&&(a=a.replace(k,"")),a};a.exports=l},function(a,b){a.exports="\t\n\x0B\f\r  ??       ?????? \u2028\u2029\ufeff"},function(a,b,c){var d=c(6),e=c(36),f=c(84),g=c(85),h=1..toFixed,i=Math.floor,j=[0,0,0,0,0,0],k="Number.toFixed: incorrect invocation!",l="0",m=function(a,b){for(var c=-1,d=b;++c<6;)d+=a*j[c],j[c]=d%1e7,d=i(d/1e7)},n=function(a){for(var b=6,c=0;--b>=0;)c+=j[b],j[b]=i(c/a),c=c%a*1e7},o=function(){for(var a=6,b="";--a>=0;)if(""!==b||0===a||0!==j[a]){var c=String(j[a]);b=""===b?c:b+g.call(l,7-c.length)+c}return b},p=function(a,b,c){return 0===b?c:b%2===1?p(a,b-1,c*a):p(a*a,b/2,c)},q=function(a){for(var b=0,c=a;c>=4096;)b+=12,c/=4096;for(;c>=2;)b+=1,c/=2;return b};d(d.P+d.F*(!!h&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!c(5)(function(){h.call({})})),"Number",{toFixed:function toFixed(a){var b,c,d,h,i=f(this,k),j=e(a),r="",s=l;if(j<0||j>20)throw RangeError(k);if(i!=i)return"NaN";if(i<=-1e21||i>=1e21)return String(i);if(i<0&&(r="-",i=-i),i>1e-21)if(b=q(i*p(2,69,1))-69,c=b<0?i*p(2,-b,1):i/p(2,b,1),c*=4503599627370496,b=52-b,b>0){for(m(0,c),d=j;d>=7;)m(1e7,0),d-=7;for(m(p(10,d,1),0),d=b-1;d>=23;)n(1<<23),d-=23;n(1<<d),m(1,1),n(2),s=o()}else m(0,c),m(1<<-b,0),s=o()+g.call(l,j);return j>0?(h=s.length,s=r+(h<=j?"0."+g.call(l,j-h)+s:s.slice(0,h-j)+"."+s.slice(h-j))):s=r+s,s}})},function(a,b,c){var d=c(32);a.exports=function(a,b){if("number"!=typeof a&&"Number"!=d(a))throw TypeError(b);return+a}},function(a,b,c){var d=c(36),e=c(33);a.exports=function repeat(a){var b=String(e(this)),c="",f=d(a);if(f<0||f==1/0)throw RangeError("Count can't be negative");for(;f>0;(f>>>=1)&&(b+=b))1&f&&(c+=b);return c}},function(a,b,d){var e=d(6),f=d(5),g=d(84),h=1..toPrecision;e(e.P+e.F*(f(function(){return"1"!==h.call(1,c)})||!f(function(){h.call({})})),"Number",{toPrecision:function toPrecision(a){var b=g(this,"Number#toPrecision: incorrect invocation!");return a===c?h.call(b):h.call(b,a)}})},function(a,b,c){var d=c(6);d(d.S,"Number",{EPSILON:Math.pow(2,-52)})},function(a,b,c){var d=c(6),e=c(2).isFinite;d(d.S,"Number",{isFinite:function isFinite(a){return"number"==typeof a&&e(a)}})},function(a,b,c){var d=c(6);d(d.S,"Number",{isInteger:c(90)})},function(a,b,c){var d=c(11),e=Math.floor;a.exports=function isInteger(a){return!d(a)&&isFinite(a)&&e(a)===a}},function(a,b,c){var d=c(6);d(d.S,"Number",{isNaN:function isNaN(a){return a!=a}})},function(a,b,c){var d=c(6),e=c(90),f=Math.abs;d(d.S,"Number",{isSafeInteger:function isSafeInteger(a){return e(a)&&f(a)<=9007199254740991}})},function(a,b,c){var d=c(6);d(d.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},function(a,b,c){var d=c(6);d(d.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991})},function(a,b,c){var d=c(6),e=c(96);d(d.S+d.F*(Number.parseFloat!=e),"Number",{parseFloat:e})},function(a,b,c){var d=c(2).parseFloat,e=c(81).trim;a.exports=1/d(c(82)+"-0")!==-(1/0)?function parseFloat(a){var b=e(String(a),3),c=d(b);return 0===c&&"-"==b.charAt(0)?-0:c}:d},function(a,b,c){var d=c(6),e=c(98);d(d.S+d.F*(Number.parseInt!=e),"Number",{parseInt:e})},function(a,b,c){var d=c(2).parseInt,e=c(81).trim,f=c(82),g=/^[\-+]?0[xX]/;a.exports=8!==d(f+"08")||22!==d(f+"0x16")?function parseInt(a,b){var c=e(String(a),3);return d(c,b>>>0||(g.test(c)?16:10))}:d},function(a,b,c){var d=c(6),e=c(98);d(d.G+d.F*(parseInt!=e),{parseInt:e})},function(a,b,c){var d=c(6),e=c(96);d(d.G+d.F*(parseFloat!=e),{parseFloat:e})},function(a,b,c){var d=c(6),e=c(102),f=Math.sqrt,g=Math.acosh;d(d.S+d.F*!(g&&710==Math.floor(g(Number.MAX_VALUE))&&g(1/0)==1/0),"Math",{acosh:function acosh(a){return(a=+a)<1?NaN:a>94906265.62425156?Math.log(a)+Math.LN2:e(a-1+f(a-1)*f(a+1))}})},function(a,b){a.exports=Math.log1p||function log1p(a){return(a=+a)>-1e-8&&a<1e-8?a-a*a/2:Math.log(1+a)}},function(a,b,c){function asinh(a){return isFinite(a=+a)&&0!=a?a<0?-asinh(-a):Math.log(a+Math.sqrt(a*a+1)):a}var d=c(6),e=Math.asinh;d(d.S+d.F*!(e&&1/e(0)>0),"Math",{asinh:asinh})},function(a,b,c){var d=c(6),e=Math.atanh;d(d.S+d.F*!(e&&1/e(-0)<0),"Math",{atanh:function atanh(a){return 0==(a=+a)?a:Math.log((1+a)/(1-a))/2}})},function(a,b,c){var d=c(6),e=c(106);d(d.S,"Math",{cbrt:function cbrt(a){return e(a=+a)*Math.pow(Math.abs(a),1/3)}})},function(a,b){a.exports=Math.sign||function sign(a){return 0==(a=+a)||a!=a?a:a<0?-1:1}},function(a,b,c){var d=c(6);d(d.S,"Math",{clz32:function clz32(a){return(a>>>=0)?31-Math.floor(Math.log(a+.5)*Math.LOG2E):32}})},function(a,b,c){var d=c(6),e=Math.exp;d(d.S,"Math",{cosh:function cosh(a){return(e(a=+a)+e(-a))/2}})},function(a,b,c){var d=c(6),e=c(110);d(d.S+d.F*(e!=Math.expm1),"Math",{expm1:e})},function(a,b){var c=Math.expm1;a.exports=!c||c(10)>22025.465794806718||c(10)<22025.465794806718||c(-2e-17)!=-2e-17?function expm1(a){return 0==(a=+a)?a:a>-1e-6&&a<1e-6?a+a*a/2:Math.exp(a)-1}:c},function(a,b,c){var d=c(6),e=c(106),f=Math.pow,g=f(2,-52),h=f(2,-23),i=f(2,127)*(2-h),j=f(2,-126),k=function(a){return a+1/g-1/g};d(d.S,"Math",{fround:function fround(a){var b,c,d=Math.abs(a),f=e(a);return d<j?f*k(d/j/h)*j*h:(b=(1+h/g)*d,c=b-(b-d),c>i||c!=c?f*(1/0):f*c)}})},function(a,b,c){var d=c(6),e=Math.abs;d(d.S,"Math",{hypot:function hypot(a,b){for(var c,d,f=0,g=0,h=arguments.length,i=0;g<h;)c=e(arguments[g++]),i<c?(d=i/c,f=f*d*d+1,i=c):c>0?(d=c/i,f+=d*d):f+=c;return i===1/0?1/0:i*Math.sqrt(f)}})},function(a,b,c){var d=c(6),e=Math.imul;d(d.S+d.F*c(5)(function(){return e(4294967295,5)!=-5||2!=e.length}),"Math",{imul:function imul(a,b){var c=65535,d=+a,e=+b,f=c&d,g=c&e;return 0|f*g+((c&d>>>16)*g+f*(c&e>>>16)<<16>>>0)}})},function(a,b,c){var d=c(6);d(d.S,"Math",{log10:function log10(a){return Math.log(a)/Math.LN10}})},function(a,b,c){var d=c(6);d(d.S,"Math",{log1p:c(102)})},function(a,b,c){var d=c(6);d(d.S,"Math",{log2:function log2(a){return Math.log(a)/Math.LN2}})},function(a,b,c){var d=c(6);d(d.S,"Math",{sign:c(106)})},function(a,b,c){var d=c(6),e=c(110),f=Math.exp;d(d.S+d.F*c(5)(function(){return!Math.sinh(-2e-17)!=-2e-17}),"Math",{sinh:function sinh(a){return Math.abs(a=+a)<1?(e(a)-e(-a))/2:(f(a-1)-f(-a-1))*(Math.E/2)}})},function(a,b,c){var d=c(6),e=c(110),f=Math.exp;d(d.S,"Math",{tanh:function tanh(a){var b=e(a=+a),c=e(-a);return b==1/0?1:c==1/0?-1:(b-c)/(f(a)+f(-a))}})},function(a,b,c){var d=c(6);d(d.S,"Math",{trunc:function trunc(a){return(a>0?Math.floor:Math.ceil)(a)}})},function(a,b,c){var d=c(6),e=c(37),f=String.fromCharCode,g=String.fromCodePoint;d(d.S+d.F*(!!g&&1!=g.length),"String",{fromCodePoint:function fromCodePoint(a){for(var b,c=[],d=arguments.length,g=0;d>g;){if(b=+arguments[g++],e(b,1114111)!==b)throw RangeError(b+" is not a valid code point");c.push(b<65536?f(b):f(((b-=65536)>>10)+55296,b%1024+56320))}return c.join("")}})},function(a,b,c){var d=c(6),e=c(30),f=c(35);d(d.S,"String",{raw:function raw(a){for(var b=e(a.raw),c=f(b.length),d=arguments.length,g=[],h=0;c>h;)g.push(String(b[h++])),h<d&&g.push(String(arguments[h]));return g.join("")}})},function(a,b,c){c(81)("trim",function(a){return function trim(){return a(this,3)}})},function(a,b,c){var d=c(6),e=c(125)(!1);d(d.P,"String",{codePointAt:function codePointAt(a){return e(this,a)}})},function(a,b,d){var e=d(36),f=d(33);a.exports=function(a){return function(b,d){var g,h,i=String(f(b)),j=e(d),k=i.length;return j<0||j>=k?a?"":c:(g=i.charCodeAt(j),g<55296||g>56319||j+1===k||(h=i.charCodeAt(j+1))<56320||h>57343?a?i.charAt(j):g:a?i.slice(j,j+2):(g-55296<<10)+(h-56320)+65536)}}},function(a,b,d){var e=d(6),f=d(35),g=d(127),h="endsWith",i=""[h];e(e.P+e.F*d(129)(h),"String",{endsWith:function endsWith(a){var b=g(this,a,h),d=arguments.length>1?arguments[1]:c,e=f(b.length),j=d===c?e:Math.min(f(d),e),k=String(a);return i?i.call(b,k,j):b.slice(j-k.length,j)===k}})},function(a,b,c){var d=c(128),e=c(33);a.exports=function(a,b,c){if(d(b))throw TypeError("String#"+c+" doesn't accept regex!");return String(e(a))}},function(a,b,d){var e=d(11),f=d(32),g=d(23)("match");a.exports=function(a){var b;return e(a)&&((b=a[g])!==c?!!b:"RegExp"==f(a))}},function(a,b,c){var d=c(23)("match");a.exports=function(a){var b=/./;try{"/./"[a](b)}catch(c){try{return b[d]=!1,!"/./"[a](b)}catch(e){}}return!0}},function(a,b,d){var e=d(6),f=d(127),g="includes";e(e.P+e.F*d(129)(g),"String",{includes:function includes(a){return!!~f(this,a,g).indexOf(a,arguments.length>1?arguments[1]:c)}})},function(a,b,c){var d=c(6);d(d.P,"String",{repeat:c(85)})},function(a,b,d){var e=d(6),f=d(35),g=d(127),h="startsWith",i=""[h];e(e.P+e.F*d(129)(h),"String",{startsWith:function startsWith(a){var b=g(this,a,h),d=f(Math.min(arguments.length>1?arguments[1]:c,b.length)),e=String(a);return i?i.call(b,e,d):b.slice(d,d+e.length)===e}})},function(a,b,d){var e=d(125)(!0);d(134)(String,"String",function(a){this._t=String(a),this._i=0},function(){var a,b=this._t,d=this._i;return d>=b.length?{value:c,done:!0}:(a=e(b,d),this._i+=a.length,{value:a,done:!1})})},function(a,b,d){var e=d(26),f=d(6),g=d(16),h=d(8),i=d(3),j=d(135),k=d(136),l=d(22),m=d(57),n=d(23)("iterator"),o=!([].keys&&"next"in[].keys()),p="@@iterator",q="keys",r="values",s=function(){return this};a.exports=function(a,b,d,t,u,v,w){k(d,b,t);var x,y,z,A=function(a){if(!o&&a in E)return E[a];switch(a){case q:return function keys(){return new d(this,a)};case r:return function values(){return new d(this,a)}}return function entries(){return new d(this,a)}},B=b+" Iterator",C=u==r,D=!1,E=a.prototype,F=E[n]||E[p]||u&&E[u],G=F||A(u),H=u?C?A("entries"):G:c,I="Array"==b?E.entries||F:F;if(I&&(z=m(I.call(new a)),z!==Object.prototype&&(l(z,B,!0),e||i(z,n)||h(z,n,s))),C&&F&&F.name!==r&&(D=!0,G=function values(){return F.call(this)}),e&&!w||!o&&!D&&E[n]||h(E,n,G),j[b]=G,j[B]=s,u)if(x={values:C?G:A(r),keys:v?G:A(q),entries:H},w)for(y in x)y in E||g(E,y,x[y]);else f(f.P+f.F*(o||D),b,x);return x}},function(a,b){a.exports={}},function(a,b,c){var d=c(44),e=c(15),f=c(22),g={};c(8)(g,c(23)("iterator"),function(){return this}),a.exports=function(a,b,c){a.prototype=d(g,{next:e(1,c)}),f(a,b+" Iterator")}},function(a,b,c){c(138)("anchor",function(a){return function anchor(b){return a(this,"a","name",b)}})},function(a,b,c){var d=c(6),e=c(5),f=c(33),g=/"/g,h=function(a,b,c,d){var e=String(f(a)),h="<"+b;return""!==c&&(h+=" "+c+'="'+String(d).replace(g,"&quot;")+'"'),h+">"+e+"</"+b+">"};a.exports=function(a,b){var c={};c[a]=b(h),d(d.P+d.F*e(function(){var b=""[a]('"');return b!==b.toLowerCase()||b.split('"').length>3}),"String",c)}},function(a,b,c){c(138)("big",function(a){return function big(){return a(this,"big","","")}})},function(a,b,c){c(138)("blink",function(a){return function blink(){return a(this,"blink","","")}})},function(a,b,c){c(138)("bold",function(a){return function bold(){return a(this,"b","","")}})},function(a,b,c){c(138)("fixed",function(a){return function fixed(){return a(this,"tt","","")}})},function(a,b,c){c(138)("fontcolor",function(a){return function fontcolor(b){return a(this,"font","color",b)}})},function(a,b,c){c(138)("fontsize",function(a){return function fontsize(b){return a(this,"font","size",b)}})},function(a,b,c){c(138)("italics",function(a){return function italics(){return a(this,"i","","")}})},function(a,b,c){c(138)("link",function(a){return function link(b){return a(this,"a","href",b)}})},function(a,b,c){c(138)("small",function(a){return function small(){return a(this,"small","","")}})},function(a,b,c){c(138)("strike",function(a){return function strike(){return a(this,"strike","","")}})},function(a,b,c){c(138)("sub",function(a){return function sub(){return a(this,"sub","","")}})},function(a,b,c){c(138)("sup",function(a){return function sup(){return a(this,"sup","","")}})},function(a,b,c){var d=c(6);d(d.S,"Array",{isArray:c(43)})},function(a,b,d){var e=d(18),f=d(6),g=d(56),h=d(153),i=d(154),j=d(35),k=d(155),l=d(156);f(f.S+f.F*!d(157)(function(a){Array.from(a)}),"Array",{from:function from(a){var b,d,f,m,n=g(a),o="function"==typeof this?this:Array,p=arguments.length,q=p>1?arguments[1]:c,r=q!==c,s=0,t=l(n);if(r&&(q=e(q,p>2?arguments[2]:c,2)),t==c||o==Array&&i(t))for(b=j(n.length),d=new o(b);b>s;s++)k(d,s,r?q(n[s],s):n[s]);else for(m=t.call(n),d=new o;!(f=m.next()).done;s++)k(d,s,r?h(m,q,[f.value,s],!0):f.value);return d.length=s,d}})},function(a,b,d){var e=d(10);a.exports=function(a,b,d,f){try{return f?b(e(d)[0],d[1]):b(d)}catch(g){var h=a["return"];throw h!==c&&e(h.call(a)),g}}},function(a,b,d){var e=d(135),f=d(23)("iterator"),g=Array.prototype;a.exports=function(a){return a!==c&&(e.Array===a||g[f]===a)}},function(a,b,c){var d=c(9),e=c(15);a.exports=function(a,b,c){b in a?d.f(a,b,e(0,c)):a[b]=c}},function(a,b,d){var e=d(73),f=d(23)("iterator"),g=d(135);a.exports=d(7).getIteratorMethod=function(a){if(a!=c)return a[f]||a["@@iterator"]||g[e(a)]}},function(a,b,c){var d=c(23)("iterator"),e=!1;
+try{var f=[7][d]();f["return"]=function(){e=!0},Array.from(f,function(){throw 2})}catch(g){}a.exports=function(a,b){if(!b&&!e)return!1;var c=!1;try{var f=[7],g=f[d]();g.next=function(){return{done:c=!0}},f[d]=function(){return g},a(f)}catch(h){}return c}},function(a,b,c){var d=c(6),e=c(155);d(d.S+d.F*c(5)(function(){function F(){}return!(Array.of.call(F)instanceof F)}),"Array",{of:function of(){for(var a=0,b=arguments.length,c=new("function"==typeof this?this:Array)(b);b>a;)e(c,a,arguments[a++]);return c.length=b,c}})},function(a,b,d){var e=d(6),f=d(30),g=[].join;e(e.P+e.F*(d(31)!=Object||!d(160)(g)),"Array",{join:function join(a){return g.call(f(this),a===c?",":a)}})},function(a,b,c){var d=c(5);a.exports=function(a,b){return!!a&&d(function(){b?a.call(null,function(){},1):a.call(null)})}},function(a,b,d){var e=d(6),f=d(46),g=d(32),h=d(37),i=d(35),j=[].slice;e(e.P+e.F*d(5)(function(){f&&j.call(f)}),"Array",{slice:function slice(a,b){var d=i(this.length),e=g(this);if(b=b===c?d:b,"Array"==e)return j.call(this,a,b);for(var f=h(a,d),k=h(b,d),l=i(k-f),m=Array(l),n=0;n<l;n++)m[n]="String"==e?this.charAt(f+n):this[f+n];return m}})},function(a,b,d){var e=d(6),f=d(19),g=d(56),h=d(5),i=[].sort,j=[1,2,3];e(e.P+e.F*(h(function(){j.sort(c)})||!h(function(){j.sort(null)})||!d(160)(i)),"Array",{sort:function sort(a){return a===c?i.call(g(this)):i.call(g(this),f(a))}})},function(a,b,c){var d=c(6),e=c(164)(0),f=c(160)([].forEach,!0);d(d.P+d.F*!f,"Array",{forEach:function forEach(a){return e(this,a,arguments[1])}})},function(a,b,d){var e=d(18),f=d(31),g=d(56),h=d(35),i=d(165);a.exports=function(a,b){var d=1==a,j=2==a,k=3==a,l=4==a,m=6==a,n=5==a||m,o=b||i;return function(b,i,p){for(var q,r,s=g(b),t=f(s),u=e(i,p,3),v=h(t.length),w=0,x=d?o(b,v):j?o(b,0):c;v>w;w++)if((n||w in t)&&(q=t[w],r=u(q,w,s),a))if(d)x[w]=r;else if(r)switch(a){case 3:return!0;case 5:return q;case 6:return w;case 2:x.push(q)}else if(l)return!1;return m?-1:k||l?l:x}}},function(a,b,c){var d=c(166);a.exports=function(a,b){return new(d(a))(b)}},function(a,b,d){var e=d(11),f=d(43),g=d(23)("species");a.exports=function(a){var b;return f(a)&&(b=a.constructor,"function"!=typeof b||b!==Array&&!f(b.prototype)||(b=c),e(b)&&(b=b[g],null===b&&(b=c))),b===c?Array:b}},function(a,b,c){var d=c(6),e=c(164)(1);d(d.P+d.F*!c(160)([].map,!0),"Array",{map:function map(a){return e(this,a,arguments[1])}})},function(a,b,c){var d=c(6),e=c(164)(2);d(d.P+d.F*!c(160)([].filter,!0),"Array",{filter:function filter(a){return e(this,a,arguments[1])}})},function(a,b,c){var d=c(6),e=c(164)(3);d(d.P+d.F*!c(160)([].some,!0),"Array",{some:function some(a){return e(this,a,arguments[1])}})},function(a,b,c){var d=c(6),e=c(164)(4);d(d.P+d.F*!c(160)([].every,!0),"Array",{every:function every(a){return e(this,a,arguments[1])}})},function(a,b,c){var d=c(6),e=c(172);d(d.P+d.F*!c(160)([].reduce,!0),"Array",{reduce:function reduce(a){return e(this,a,arguments.length,arguments[1],!1)}})},function(a,b,c){var d=c(19),e=c(56),f=c(31),g=c(35);a.exports=function(a,b,c,h,i){d(b);var j=e(a),k=f(j),l=g(j.length),m=i?l-1:0,n=i?-1:1;if(c<2)for(;;){if(m in k){h=k[m],m+=n;break}if(m+=n,i?m<0:l<=m)throw TypeError("Reduce of empty array with no initial value")}for(;i?m>=0:l>m;m+=n)m in k&&(h=b(h,k[m],m,j));return h}},function(a,b,c){var d=c(6),e=c(172);d(d.P+d.F*!c(160)([].reduceRight,!0),"Array",{reduceRight:function reduceRight(a){return e(this,a,arguments.length,arguments[1],!0)}})},function(a,b,c){var d=c(6),e=c(34)(!1),f=[].indexOf,g=!!f&&1/[1].indexOf(1,-0)<0;d(d.P+d.F*(g||!c(160)(f)),"Array",{indexOf:function indexOf(a){return g?f.apply(this,arguments)||0:e(this,a,arguments[1])}})},function(a,b,c){var d=c(6),e=c(30),f=c(36),g=c(35),h=[].lastIndexOf,i=!!h&&1/[1].lastIndexOf(1,-0)<0;d(d.P+d.F*(i||!c(160)(h)),"Array",{lastIndexOf:function lastIndexOf(a){if(i)return h.apply(this,arguments)||0;var b=e(this),c=g(b.length),d=c-1;for(arguments.length>1&&(d=Math.min(d,f(arguments[1]))),d<0&&(d=c+d);d>=0;d--)if(d in b&&b[d]===a)return d||0;return-1}})},function(a,b,c){var d=c(6);d(d.P,"Array",{copyWithin:c(177)}),c(178)("copyWithin")},function(a,b,d){var e=d(56),f=d(37),g=d(35);a.exports=[].copyWithin||function copyWithin(a,b){var d=e(this),h=g(d.length),i=f(a,h),j=f(b,h),k=arguments.length>2?arguments[2]:c,l=Math.min((k===c?h:f(k,h))-j,h-i),m=1;for(j<i&&i<j+l&&(m=-1,j+=l-1,i+=l-1);l-- >0;)j in d?d[i]=d[j]:delete d[i],i+=m,j+=m;return d}},function(a,b,d){var e=d(23)("unscopables"),f=Array.prototype;f[e]==c&&d(8)(f,e,{}),a.exports=function(a){f[e][a]=!0}},function(a,b,c){var d=c(6);d(d.P,"Array",{fill:c(180)}),c(178)("fill")},function(a,b,d){var e=d(56),f=d(37),g=d(35);a.exports=function fill(a){for(var b=e(this),d=g(b.length),h=arguments.length,i=f(h>1?arguments[1]:c,d),j=h>2?arguments[2]:c,k=j===c?d:f(j,d);k>i;)b[i++]=a;return b}},function(a,b,d){var e=d(6),f=d(164)(5),g="find",h=!0;g in[]&&Array(1)[g](function(){h=!1}),e(e.P+e.F*h,"Array",{find:function find(a){return f(this,a,arguments.length>1?arguments[1]:c)}}),d(178)(g)},function(a,b,d){var e=d(6),f=d(164)(6),g="findIndex",h=!0;g in[]&&Array(1)[g](function(){h=!1}),e(e.P+e.F*h,"Array",{findIndex:function findIndex(a){return f(this,a,arguments.length>1?arguments[1]:c)}}),d(178)(g)},function(a,b,d){var e=d(178),f=d(184),g=d(135),h=d(30);a.exports=d(134)(Array,"Array",function(a,b){this._t=h(a),this._i=0,this._k=b},function(){var a=this._t,b=this._k,d=this._i++;return!a||d>=a.length?(this._t=c,f(1)):"keys"==b?f(0,d):"values"==b?f(0,a[d]):f(0,[d,a[d]])},"values"),g.Arguments=g.Array,e("keys"),e("values"),e("entries")},function(a,b){a.exports=function(a,b){return{value:b,done:!!a}}},function(a,b,c){c(186)("Array")},function(a,b,c){var d=c(2),e=c(9),f=c(4),g=c(23)("species");a.exports=function(a){var b=d[a];f&&b&&!b[g]&&e.f(b,g,{configurable:!0,get:function(){return this}})}},function(a,b,d){var e=d(2),f=d(80),g=d(9).f,h=d(48).f,i=d(128),j=d(188),k=e.RegExp,l=k,m=k.prototype,n=/a/g,o=/a/g,p=new k(n)!==n;if(d(4)&&(!p||d(5)(function(){return o[d(23)("match")]=!1,k(n)!=n||k(o)==o||"/a/i"!=k(n,"i")}))){k=function RegExp(a,b){var d=this instanceof k,e=i(a),g=b===c;return!d&&e&&a.constructor===k&&g?a:f(p?new l(e&&!g?a.source:a,b):l((e=a instanceof k)?a.source:a,e&&g?j.call(a):b),d?this:m,k)};for(var q=(function(a){a in k||g(k,a,{configurable:!0,get:function(){return l[a]},set:function(b){l[a]=b}})}),r=h(l),s=0;r.length>s;)q(r[s++]);m.constructor=k,k.prototype=m,d(16)(e,"RegExp",k)}d(186)("RegExp")},function(a,b,c){var d=c(10);a.exports=function(){var a=d(this),b="";return a.global&&(b+="g"),a.ignoreCase&&(b+="i"),a.multiline&&(b+="m"),a.unicode&&(b+="u"),a.sticky&&(b+="y"),b}},function(a,b,d){d(190);var e=d(10),f=d(188),g=d(4),h="toString",i=/./[h],j=function(a){d(16)(RegExp.prototype,h,a,!0)};d(5)(function(){return"/a/b"!=i.call({source:"a",flags:"b"})})?j(function toString(){var a=e(this);return"/".concat(a.source,"/","flags"in a?a.flags:!g&&a instanceof RegExp?f.call(a):c)}):i.name!=h&&j(function toString(){return i.call(this)})},function(a,b,c){c(4)&&"g"!=/./g.flags&&c(9).f(RegExp.prototype,"flags",{configurable:!0,get:c(188)})},function(a,b,d){d(192)("match",1,function(a,b,d){return[function match(d){var e=a(this),f=d==c?c:d[b];return f!==c?f.call(d,e):new RegExp(d)[b](String(e))},d]})},function(a,b,c){var d=c(8),e=c(16),f=c(5),g=c(33),h=c(23);a.exports=function(a,b,c){var i=h(a),j=c(g,i,""[a]),k=j[0],l=j[1];f(function(){var b={};return b[i]=function(){return 7},7!=""[a](b)})&&(e(String.prototype,a,k),d(RegExp.prototype,i,2==b?function(a,b){return l.call(a,this,b)}:function(a){return l.call(a,this)}))}},function(a,b,d){d(192)("replace",2,function(a,b,d){return[function replace(e,f){var g=a(this),h=e==c?c:e[b];return h!==c?h.call(e,g,f):d.call(String(g),e,f)},d]})},function(a,b,d){d(192)("search",1,function(a,b,d){return[function search(d){var e=a(this),f=d==c?c:d[b];return f!==c?f.call(d,e):new RegExp(d)[b](String(e))},d]})},function(a,b,d){d(192)("split",2,function(a,b,e){var f=d(128),g=e,h=[].push,i="split",j="length",k="lastIndex";if("c"=="abbc"[i](/(b)*/)[1]||4!="test"[i](/(?:)/,-1)[j]||2!="ab"[i](/(?:ab)*/)[j]||4!="."[i](/(.?)(.?)/)[j]||"."[i](/()()/)[j]>1||""[i](/.?/)[j]){var l=/()??/.exec("")[1]===c;e=function(a,b){var d=String(this);if(a===c&&0===b)return[];if(!f(a))return g.call(d,a,b);var e,i,m,n,o,p=[],q=(a.ignoreCase?"i":"")+(a.multiline?"m":"")+(a.unicode?"u":"")+(a.sticky?"y":""),r=0,s=b===c?4294967295:b>>>0,t=new RegExp(a.source,q+"g");for(l||(e=new RegExp("^"+t.source+"$(?!\\s)",q));(i=t.exec(d))&&(m=i.index+i[0][j],!(m>r&&(p.push(d.slice(r,i.index)),!l&&i[j]>1&&i[0].replace(e,function(){for(o=1;o<arguments[j]-2;o++)arguments[o]===c&&(i[o]=c)}),i[j]>1&&i.index<d[j]&&h.apply(p,i.slice(1)),n=i[0][j],r=m,p[j]>=s)));)t[k]===i.index&&t[k]++;return r===d[j]?!n&&t.test("")||p.push(""):p.push(d.slice(r)),p[j]>s?p.slice(0,s):p}}else"0"[i](c,0)[j]&&(e=function(a,b){return a===c&&0===b?[]:g.call(this,a,b)});return[function split(d,f){var g=a(this),h=d==c?c:d[b];return h!==c?h.call(d,g,f):e.call(String(g),d,f)},e]})},function(a,b,d){var e,f,g,h=d(26),i=d(2),j=d(18),k=d(73),l=d(6),m=d(11),n=d(19),o=d(197),p=d(198),q=d(199),r=d(200).set,s=d(201)(),t="Promise",u=i.TypeError,v=i.process,w=i[t],v=i.process,x="process"==k(v),y=function(){},z=!!function(){try{var a=w.resolve(1),b=(a.constructor={})[d(23)("species")]=function(a){a(y,y)};return(x||"function"==typeof PromiseRejectionEvent)&&a.then(y)instanceof b}catch(c){}}(),A=function(a,b){return a===b||a===w&&b===g},B=function(a){var b;return!(!m(a)||"function"!=typeof(b=a.then))&&b},C=function(a){return A(w,a)?new D(a):new f(a)},D=f=function(a){var b,d;this.promise=new a(function(a,e){if(b!==c||d!==c)throw u("Bad Promise constructor");b=a,d=e}),this.resolve=n(b),this.reject=n(d)},E=function(a){try{a()}catch(b){return{error:b}}},F=function(a,b){if(!a._n){a._n=!0;var c=a._c;s(function(){for(var d=a._v,e=1==a._s,f=0,g=function(b){var c,f,g=e?b.ok:b.fail,h=b.resolve,i=b.reject,j=b.domain;try{g?(e||(2==a._h&&I(a),a._h=1),g===!0?c=d:(j&&j.enter(),c=g(d),j&&j.exit()),c===b.promise?i(u("Promise-chain cycle")):(f=B(c))?f.call(c,h,i):h(c)):i(d)}catch(k){i(k)}};c.length>f;)g(c[f++]);a._c=[],a._n=!1,b&&!a._h&&G(a)})}},G=function(a){r.call(i,function(){var b,d,e,f=a._v;if(H(a)&&(b=E(function(){x?v.emit("unhandledRejection",f,a):(d=i.onunhandledrejection)?d({promise:a,reason:f}):(e=i.console)&&e.error&&e.error("Unhandled promise rejection",f)}),a._h=x||H(a)?2:1),a._a=c,b)throw b.error})},H=function(a){if(1==a._h)return!1;for(var b,c=a._a||a._c,d=0;c.length>d;)if(b=c[d++],b.fail||!H(b.promise))return!1;return!0},I=function(a){r.call(i,function(){var b;x?v.emit("rejectionHandled",a):(b=i.onrejectionhandled)&&b({promise:a,reason:a._v})})},J=function(a){var b=this;b._d||(b._d=!0,b=b._w||b,b._v=a,b._s=2,b._a||(b._a=b._c.slice()),F(b,!0))},K=function(a){var b,c=this;if(!c._d){c._d=!0,c=c._w||c;try{if(c===a)throw u("Promise can't be resolved itself");(b=B(a))?s(function(){var d={_w:c,_d:!1};try{b.call(a,j(K,d,1),j(J,d,1))}catch(e){J.call(d,e)}}):(c._v=a,c._s=1,F(c,!1))}catch(d){J.call({_w:c,_d:!1},d)}}};z||(w=function Promise(a){o(this,w,t,"_h"),n(a),e.call(this);try{a(j(K,this,1),j(J,this,1))}catch(b){J.call(this,b)}},e=function Promise(a){this._c=[],this._a=c,this._s=0,this._d=!1,this._v=c,this._h=0,this._n=!1},e.prototype=d(202)(w.prototype,{then:function then(a,b){var d=C(q(this,w));return d.ok="function"!=typeof a||a,d.fail="function"==typeof b&&b,d.domain=x?v.domain:c,this._c.push(d),this._a&&this._a.push(d),this._s&&F(this,!1),d.promise},"catch":function(a){return this.then(c,a)}}),D=function(){var a=new e;this.promise=a,this.resolve=j(K,a,1),this.reject=j(J,a,1)}),l(l.G+l.W+l.F*!z,{Promise:w}),d(22)(w,t),d(186)(t),g=d(7)[t],l(l.S+l.F*!z,t,{reject:function reject(a){var b=C(this),c=b.reject;return c(a),b.promise}}),l(l.S+l.F*(h||!z),t,{resolve:function resolve(a){if(a instanceof w&&A(a.constructor,this))return a;var b=C(this),c=b.resolve;return c(a),b.promise}}),l(l.S+l.F*!(z&&d(157)(function(a){w.all(a)["catch"](y)})),t,{all:function all(a){var b=this,d=C(b),e=d.resolve,f=d.reject,g=E(function(){var d=[],g=0,h=1;p(a,!1,function(a){var i=g++,j=!1;d.push(c),h++,b.resolve(a).then(function(a){j||(j=!0,d[i]=a,--h||e(d))},f)}),--h||e(d)});return g&&f(g.error),d.promise},race:function race(a){var b=this,c=C(b),d=c.reject,e=E(function(){p(a,!1,function(a){b.resolve(a).then(c.resolve,d)})});return e&&d(e.error),c.promise}})},function(a,b){a.exports=function(a,b,d,e){if(!(a instanceof b)||e!==c&&e in a)throw TypeError(d+": incorrect invocation!");return a}},function(a,b,c){var d=c(18),e=c(153),f=c(154),g=c(10),h=c(35),i=c(156),j={},k={},b=a.exports=function(a,b,c,l,m){var n,o,p,q,r=m?function(){return a}:i(a),s=d(c,l,b?2:1),t=0;if("function"!=typeof r)throw TypeError(a+" is not iterable!");if(f(r)){for(n=h(a.length);n>t;t++)if(q=b?s(g(o=a[t])[0],o[1]):s(a[t]),q===j||q===k)return q}else for(p=r.call(a);!(o=p.next()).done;)if(q=e(p,s,o.value,b),q===j||q===k)return q};b.BREAK=j,b.RETURN=k},function(a,b,d){var e=d(10),f=d(19),g=d(23)("species");a.exports=function(a,b){var d,h=e(a).constructor;return h===c||(d=e(h)[g])==c?b:f(d)}},function(a,b,c){var d,e,f,g=c(18),h=c(76),i=c(46),j=c(13),k=c(2),l=k.process,m=k.setImmediate,n=k.clearImmediate,o=k.MessageChannel,p=0,q={},r="onreadystatechange",s=function(){var a=+this;if(q.hasOwnProperty(a)){var b=q[a];delete q[a],b()}},t=function(a){s.call(a.data)};m&&n||(m=function setImmediate(a){for(var b=[],c=1;arguments.length>c;)b.push(arguments[c++]);return q[++p]=function(){h("function"==typeof a?a:Function(a),b)},d(p),p},n=function clearImmediate(a){delete q[a]},"process"==c(32)(l)?d=function(a){l.nextTick(g(s,a,1))}:o?(e=new o,f=e.port2,e.port1.onmessage=t,d=g(f.postMessage,f,1)):k.addEventListener&&"function"==typeof postMessage&&!k.importScripts?(d=function(a){k.postMessage(a+"","*")},k.addEventListener("message",t,!1)):d=r in j("script")?function(a){i.appendChild(j("script"))[r]=function(){i.removeChild(this),s.call(a)}}:function(a){setTimeout(g(s,a,1),0)}),a.exports={set:m,clear:n}},function(a,b,d){var e=d(2),f=d(200).set,g=e.MutationObserver||e.WebKitMutationObserver,h=e.process,i=e.Promise,j="process"==d(32)(h);a.exports=function(){var a,b,d,k=function(){var e,f;for(j&&(e=h.domain)&&e.exit();a;){f=a.fn,a=a.next;try{f()}catch(g){throw a?d():b=c,g}}b=c,e&&e.enter()};if(j)d=function(){h.nextTick(k)};else if(g){var l=!0,m=document.createTextNode("");new g(k).observe(m,{characterData:!0}),d=function(){m.data=l=!l}}else if(i&&i.resolve){var n=i.resolve();d=function(){n.then(k)}}else d=function(){f.call(e,k)};return function(e){var f={fn:e,next:c};b&&(b.next=f),a||(a=f,d()),b=f}}},function(a,b,c){var d=c(16);a.exports=function(a,b,c){for(var e in b)d(a,e,b[e],c);return a}},function(a,b,d){var e=d(204);a.exports=d(205)("Map",function(a){return function Map(){return a(this,arguments.length>0?arguments[0]:c)}},{get:function get(a){var b=e.getEntry(this,a);return b&&b.v},set:function set(a,b){return e.def(this,0===a?0:a,b)}},e,!0)},function(a,b,d){var e=d(9).f,f=d(44),g=d(202),h=d(18),i=d(197),j=d(33),k=d(198),l=d(134),m=d(184),n=d(186),o=d(4),p=d(20).fastKey,q=o?"_s":"size",r=function(a,b){var c,d=p(b);if("F"!==d)return a._i[d];for(c=a._f;c;c=c.n)if(c.k==b)return c};a.exports={getConstructor:function(a,b,d,l){var m=a(function(a,e){i(a,m,b,"_i"),a._i=f(null),a._f=c,a._l=c,a[q]=0,e!=c&&k(e,d,a[l],a)});return g(m.prototype,{clear:function clear(){for(var a=this,b=a._i,d=a._f;d;d=d.n)d.r=!0,d.p&&(d.p=d.p.n=c),delete b[d.i];a._f=a._l=c,a[q]=0},"delete":function(a){var b=this,c=r(b,a);if(c){var d=c.n,e=c.p;delete b._i[c.i],c.r=!0,e&&(e.n=d),d&&(d.p=e),b._f==c&&(b._f=d),b._l==c&&(b._l=e),b[q]--}return!!c},forEach:function forEach(a){i(this,m,"forEach");for(var b,d=h(a,arguments.length>1?arguments[1]:c,3);b=b?b.n:this._f;)for(d(b.v,b.k,this);b&&b.r;)b=b.p},has:function has(a){return!!r(this,a)}}),o&&e(m.prototype,"size",{get:function(){return j(this[q])}}),m},def:function(a,b,d){var e,f,g=r(a,b);return g?g.v=d:(a._l=g={i:f=p(b,!0),k:b,v:d,p:e=a._l,n:c,r:!1},a._f||(a._f=g),e&&(e.n=g),a[q]++,"F"!==f&&(a._i[f]=g)),a},getEntry:r,setStrong:function(a,b,d){l(a,b,function(a,b){this._t=a,this._k=b,this._l=c},function(){for(var a=this,b=a._k,d=a._l;d&&d.r;)d=d.p;return a._t&&(a._l=d=d?d.n:a._t._f)?"keys"==b?m(0,d.k):"values"==b?m(0,d.v):m(0,[d.k,d.v]):(a._t=c,m(1))},d?"entries":"values",!d,!0),n(b)}}},function(a,b,d){var e=d(2),f=d(6),g=d(16),h=d(202),i=d(20),j=d(198),k=d(197),l=d(11),m=d(5),n=d(157),o=d(22),p=d(80);a.exports=function(a,b,d,q,r,s){var t=e[a],u=t,v=r?"set":"add",w=u&&u.prototype,x={},y=function(a){var b=w[a];g(w,a,"delete"==a?function(a){return!(s&&!l(a))&&b.call(this,0===a?0:a)}:"has"==a?function has(a){return!(s&&!l(a))&&b.call(this,0===a?0:a)}:"get"==a?function get(a){return s&&!l(a)?c:b.call(this,0===a?0:a)}:"add"==a?function add(a){return b.call(this,0===a?0:a),this}:function set(a,c){return b.call(this,0===a?0:a,c),this})};if("function"==typeof u&&(s||w.forEach&&!m(function(){(new u).entries().next()}))){var z=new u,A=z[v](s?{}:-0,1)!=z,B=m(function(){z.has(1)}),C=n(function(a){new u(a)}),D=!s&&m(function(){for(var a=new u,b=5;b--;)a[v](b,b);return!a.has(-0)});C||(u=b(function(b,d){k(b,u,a);var e=p(new t,b,u);return d!=c&&j(d,r,e[v],e),e}),u.prototype=w,w.constructor=u),(B||D)&&(y("delete"),y("has"),r&&y("get")),(D||A)&&y(v),s&&w.clear&&delete w.clear}else u=q.getConstructor(b,a,r,v),h(u.prototype,d),i.NEED=!0;return o(u,a),x[a]=u,f(f.G+f.W+f.F*(u!=t),x),s||q.setStrong(u,a,r),u}},function(a,b,d){var e=d(204);a.exports=d(205)("Set",function(a){return function Set(){return a(this,arguments.length>0?arguments[0]:c)}},{add:function add(a){return e.def(this,a=0===a?0:a,a)}},e)},function(a,b,d){var e,f=d(164)(0),g=d(16),h=d(20),i=d(67),j=d(208),k=d(11),l=h.getWeak,m=Object.isExtensible,n=j.ufstore,o={},p=function(a){return function WeakMap(){return a(this,arguments.length>0?arguments[0]:c)}},q={get:function get(a){if(k(a)){var b=l(a);return b===!0?n(this).get(a):b?b[this._i]:c}},set:function set(a,b){return j.def(this,a,b)}},r=a.exports=d(205)("WeakMap",p,q,j,!0,!0);7!=(new r).set((Object.freeze||Object)(o),7).get(o)&&(e=j.getConstructor(p),i(e.prototype,q),h.NEED=!0,f(["delete","has","get","set"],function(a){var b=r.prototype,c=b[a];g(b,a,function(b,d){if(k(b)&&!m(b)){this._f||(this._f=new e);var f=this._f[a](b,d);return"set"==a?this:f}return c.call(this,b,d)})}))},function(a,b,d){var e=d(202),f=d(20).getWeak,g=d(10),h=d(11),i=d(197),j=d(198),k=d(164),l=d(3),m=k(5),n=k(6),o=0,p=function(a){return a._l||(a._l=new q)},q=function(){this.a=[]},r=function(a,b){return m(a.a,function(a){return a[0]===b})};q.prototype={get:function(a){var b=r(this,a);if(b)return b[1]},has:function(a){return!!r(this,a)},set:function(a,b){var c=r(this,a);c?c[1]=b:this.a.push([a,b])},"delete":function(a){var b=n(this.a,function(b){return b[0]===a});return~b&&this.a.splice(b,1),!!~b}},a.exports={getConstructor:function(a,b,d,g){var k=a(function(a,e){i(a,k,b,"_i"),a._i=o++,a._l=c,e!=c&&j(e,d,a[g],a)});return e(k.prototype,{"delete":function(a){if(!h(a))return!1;var b=f(a);return b===!0?p(this)["delete"](a):b&&l(b,this._i)&&delete b[this._i]},has:function has(a){if(!h(a))return!1;var b=f(a);return b===!0?p(this).has(a):b&&l(b,this._i)}}),k},def:function(a,b,c){var d=f(g(b),!0);return d===!0?p(a).set(b,c):d[a._i]=c,a},ufstore:p}},function(a,b,d){var e=d(208);d(205)("WeakSet",function(a){return function WeakSet(){return a(this,arguments.length>0?arguments[0]:c)}},{add:function add(a){return e.def(this,a,!0)}},e,!1,!0)},function(a,b,c){var d=c(6),e=c(19),f=c(10),g=(c(2).Reflect||{}).apply,h=Function.apply;d(d.S+d.F*!c(5)(function(){g(function(){})}),"Reflect",{apply:function apply(a,b,c){var d=e(a),i=f(c);return g?g(d,b,i):h.call(d,b,i)}})},function(a,b,c){var d=c(6),e=c(44),f=c(19),g=c(10),h=c(11),i=c(5),j=c(75),k=(c(2).Reflect||{}).construct,l=i(function(){function F(){}return!(k(function(){},[],F)instanceof F)}),m=!i(function(){k(function(){})});d(d.S+d.F*(l||m),"Reflect",{construct:function construct(a,b){f(a),g(b);var c=arguments.length<3?a:f(arguments[2]);if(m&&!l)return k(a,b,c);if(a==c){switch(b.length){case 0:return new a;case 1:return new a(b[0]);case 2:return new a(b[0],b[1]);case 3:return new a(b[0],b[1],b[2]);case 4:return new a(b[0],b[1],b[2],b[3])}var d=[null];return d.push.apply(d,b),new(j.apply(a,d))}var i=c.prototype,n=e(h(i)?i:Object.prototype),o=Function.apply.call(a,n,b);return h(o)?o:n}})},function(a,b,c){var d=c(9),e=c(6),f=c(10),g=c(14);e(e.S+e.F*c(5)(function(){Reflect.defineProperty(d.f({},1,{value:1}),1,{value:2})}),"Reflect",{defineProperty:function defineProperty(a,b,c){f(a),b=g(b,!0),f(c);try{return d.f(a,b,c),!0}catch(e){return!1}}})},function(a,b,c){var d=c(6),e=c(49).f,f=c(10);d(d.S,"Reflect",{deleteProperty:function deleteProperty(a,b){var c=e(f(a),b);return!(c&&!c.configurable)&&delete a[b]}})},function(a,b,d){var e=d(6),f=d(10),g=function(a){this._t=f(a),this._i=0;var b,c=this._k=[];for(b in a)c.push(b)};d(136)(g,"Object",function(){var a,b=this,d=b._k;do if(b._i>=d.length)return{value:c,done:!0};while(!((a=d[b._i++])in b._t));return{value:a,done:!1}}),e(e.S,"Reflect",{enumerate:function enumerate(a){return new g(a)}})},function(a,b,d){function get(a,b){var d,h,k=arguments.length<3?a:arguments[2];return j(a)===k?a[b]:(d=e.f(a,b))?g(d,"value")?d.value:d.get!==c?d.get.call(k):c:i(h=f(a))?get(h,b,k):void 0}var e=d(49),f=d(57),g=d(3),h=d(6),i=d(11),j=d(10);h(h.S,"Reflect",{get:get})},function(a,b,c){var d=c(49),e=c(6),f=c(10);e(e.S,"Reflect",{getOwnPropertyDescriptor:function getOwnPropertyDescriptor(a,b){return d.f(f(a),b)}})},function(a,b,c){var d=c(6),e=c(57),f=c(10);d(d.S,"Reflect",{getPrototypeOf:function getPrototypeOf(a){return e(f(a))}})},function(a,b,c){var d=c(6);d(d.S,"Reflect",{has:function has(a,b){return b in a}})},function(a,b,c){var d=c(6),e=c(10),f=Object.isExtensible;d(d.S,"Reflect",{isExtensible:function isExtensible(a){return e(a),!f||f(a)}})},function(a,b,c){var d=c(6);d(d.S,"Reflect",{ownKeys:c(221)})},function(a,b,c){var d=c(48),e=c(41),f=c(10),g=c(2).Reflect;a.exports=g&&g.ownKeys||function ownKeys(a){var b=d.f(f(a)),c=e.f;return c?b.concat(c(a)):b}},function(a,b,c){var d=c(6),e=c(10),f=Object.preventExtensions;d(d.S,"Reflect",{preventExtensions:function preventExtensions(a){e(a);try{return f&&f(a),!0}catch(b){return!1}}})},function(a,b,d){function set(a,b,d){var i,m,n=arguments.length<4?a:arguments[3],o=f.f(k(a),b);if(!o){if(l(m=g(a)))return set(m,b,d,n);o=j(0)}return h(o,"value")?!(o.writable===!1||!l(n))&&(i=f.f(n,b)||j(0),i.value=d,e.f(n,b,i),!0):o.set!==c&&(o.set.call(n,d),!0)}var e=d(9),f=d(49),g=d(57),h=d(3),i=d(6),j=d(15),k=d(10),l=d(11);i(i.S,"Reflect",{set:set})},function(a,b,c){var d=c(6),e=c(71);e&&d(d.S,"Reflect",{setPrototypeOf:function setPrototypeOf(a,b){e.check(a,b);try{return e.set(a,b),!0}catch(c){return!1}}})},function(a,b,c){var d=c(6);d(d.S,"Date",{now:function(){return(new Date).getTime()}})},function(a,b,c){var d=c(6),e=c(56),f=c(14);d(d.P+d.F*c(5)(function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})}),"Date",{toJSON:function toJSON(a){var b=e(this),c=f(b);return"number"!=typeof c||isFinite(c)?b.toISOString():null}})},function(a,b,c){var d=c(6),e=c(5),f=Date.prototype.getTime,g=function(a){return a>9?a:"0"+a};d(d.P+d.F*(e(function(){return"0385-07-25T07:06:39.999Z"!=new Date(-5e13-1).toISOString()})||!e(function(){new Date(NaN).toISOString()})),"Date",{toISOString:function toISOString(){if(!isFinite(f.call(this)))throw RangeError("Invalid time value");var a=this,b=a.getUTCFullYear(),c=a.getUTCMilliseconds(),d=b<0?"-":b>9999?"+":"";return d+("00000"+Math.abs(b)).slice(d?-6:-4)+"-"+g(a.getUTCMonth()+1)+"-"+g(a.getUTCDate())+"T"+g(a.getUTCHours())+":"+g(a.getUTCMinutes())+":"+g(a.getUTCSeconds())+"."+(c>99?c:"0"+g(c))+"Z"}})},function(a,b,c){var d=Date.prototype,e="Invalid Date",f="toString",g=d[f],h=d.getTime;new Date(NaN)+""!=e&&c(16)(d,f,function toString(){var a=h.call(this);return a===a?g.call(this):e})},function(a,b,c){var d=c(23)("toPrimitive"),e=Date.prototype;d in e||c(8)(e,d,c(230))},function(a,b,c){var d=c(10),e=c(14),f="number";a.exports=function(a){if("string"!==a&&a!==f&&"default"!==a)throw TypeError("Incorrect hint");return e(d(this),a!=f)}},function(a,b,d){var e=d(6),f=d(232),g=d(233),h=d(10),i=d(37),j=d(35),k=d(11),l=d(2).ArrayBuffer,m=d(199),n=g.ArrayBuffer,o=g.DataView,p=f.ABV&&l.isView,q=n.prototype.slice,r=f.VIEW,s="ArrayBuffer";e(e.G+e.W+e.F*(l!==n),{ArrayBuffer:n}),e(e.S+e.F*!f.CONSTR,s,{isView:function isView(a){return p&&p(a)||k(a)&&r in a}}),e(e.P+e.U+e.F*d(5)(function(){return!new n(2).slice(1,c).byteLength}),s,{slice:function slice(a,b){if(q!==c&&b===c)return q.call(h(this),a);for(var d=h(this).byteLength,e=i(a,d),f=i(b===c?d:b,d),g=new(m(this,n))(j(f-e)),k=new o(this),l=new o(g),p=0;e<f;)l.setUint8(p++,k.getUint8(e++));return g}}),d(186)(s)},function(a,b,c){for(var d,e=c(2),f=c(8),g=c(17),h=g("typed_array"),i=g("view"),j=!(!e.ArrayBuffer||!e.DataView),k=j,l=0,m=9,n="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");l<m;)(d=e[n[l++]])?(f(d.prototype,h,!0),f(d.prototype,i,!0)):k=!1;a.exports={ABV:j,CONSTR:k,TYPED:h,VIEW:i}},function(a,b,d){var e=d(2),f=d(4),g=d(26),h=d(232),i=d(8),j=d(202),k=d(5),l=d(197),m=d(36),n=d(35),o=d(48).f,p=d(9).f,q=d(180),r=d(22),s="ArrayBuffer",t="DataView",u="prototype",v="Wrong length!",w="Wrong index!",x=e[s],y=e[t],z=e.Math,A=e.RangeError,B=e.Infinity,C=x,D=z.abs,E=z.pow,F=z.floor,G=z.log,H=z.LN2,I="buffer",J="byteLength",K="byteOffset",L=f?"_b":I,M=f?"_l":J,N=f?"_o":K,O=function(a,b,c){var d,e,f,g=Array(c),h=8*c-b-1,i=(1<<h)-1,j=i>>1,k=23===b?E(2,-24)-E(2,-77):0,l=0,m=a<0||0===a&&1/a<0?1:0;for(a=D(a),a!=a||a===B?(e=a!=a?1:0,d=i):(d=F(G(a)/H),a*(f=E(2,-d))<1&&(d--,f*=2),a+=d+j>=1?k/f:k*E(2,1-j),a*f>=2&&(d++,f/=2),d+j>=i?(e=0,d=i):d+j>=1?(e=(a*f-1)*E(2,b),d+=j):(e=a*E(2,j-1)*E(2,b),d=0));b>=8;g[l++]=255&e,e/=256,b-=8);for(d=d<<b|e,h+=b;h>0;g[l++]=255&d,d/=256,h-=8);return g[--l]|=128*m,g},P=function(a,b,c){var d,e=8*c-b-1,f=(1<<e)-1,g=f>>1,h=e-7,i=c-1,j=a[i--],k=127&j;for(j>>=7;h>0;k=256*k+a[i],i--,h-=8);for(d=k&(1<<-h)-1,k>>=-h,h+=b;h>0;d=256*d+a[i],i--,h-=8);if(0===k)k=1-g;else{if(k===f)return d?NaN:j?-B:B;d+=E(2,b),k-=g}return(j?-1:1)*d*E(2,k-b)},Q=function(a){return a[3]<<24|a[2]<<16|a[1]<<8|a[0]},R=function(a){return[255&a]},S=function(a){return[255&a,a>>8&255]},T=function(a){return[255&a,a>>8&255,a>>16&255,a>>24&255]},U=function(a){return O(a,52,8)},V=function(a){return O(a,23,4)},W=function(a,b,c){p(a[u],b,{get:function(){return this[c]}})},X=function(a,b,c,d){var e=+c,f=m(e);if(e!=f||f<0||f+b>a[M])throw A(w);var g=a[L]._b,h=f+a[N],i=g.slice(h,h+b);return d?i:i.reverse()},Y=function(a,b,c,d,e,f){var g=+c,h=m(g);if(g!=h||h<0||h+b>a[M])throw A(w);for(var i=a[L]._b,j=h+a[N],k=d(+e),l=0;l<b;l++)i[j+l]=k[f?l:b-l-1]},Z=function(a,b){l(a,x,s);var c=+b,d=n(c);if(c!=d)throw A(v);return d};if(h.ABV){if(!k(function(){new x})||!k(function(){new x(.5)})){x=function ArrayBuffer(a){return new C(Z(this,a))};for(var $,_=x[u]=C[u],aa=o(C),ba=0;aa.length>ba;)($=aa[ba++])in x||i(x,$,C[$]);g||(_.constructor=x)}var ca=new y(new x(2)),da=y[u].setInt8;ca.setInt8(0,2147483648),ca.setInt8(1,2147483649),!ca.getInt8(0)&&ca.getInt8(1)||j(y[u],{setInt8:function setInt8(a,b){da.call(this,a,b<<24>>24)},setUint8:function setUint8(a,b){da.call(this,a,b<<24>>24)}},!0)}else x=function ArrayBuffer(a){var b=Z(this,a);this._b=q.call(Array(b),0),this[M]=b},y=function DataView(a,b,d){l(this,y,t),l(a,x,t);var e=a[M],f=m(b);if(f<0||f>e)throw A("Wrong offset!");if(d=d===c?e-f:n(d),f+d>e)throw A(v);this[L]=a,this[N]=f,this[M]=d},f&&(W(x,J,"_l"),W(y,I,"_b"),W(y,J,"_l"),W(y,K,"_o")),j(y[u],{getInt8:function getInt8(a){return X(this,1,a)[0]<<24>>24},getUint8:function getUint8(a){return X(this,1,a)[0]},getInt16:function getInt16(a){var b=X(this,2,a,arguments[1]);return(b[1]<<8|b[0])<<16>>16},getUint16:function getUint16(a){var b=X(this,2,a,arguments[1]);return b[1]<<8|b[0]},getInt32:function getInt32(a){return Q(X(this,4,a,arguments[1]))},getUint32:function getUint32(a){return Q(X(this,4,a,arguments[1]))>>>0},getFloat32:function getFloat32(a){return P(X(this,4,a,arguments[1]),23,4)},getFloat64:function getFloat64(a){return P(X(this,8,a,arguments[1]),52,8)},setInt8:function setInt8(a,b){Y(this,1,a,R,b)},setUint8:function setUint8(a,b){Y(this,1,a,R,b)},setInt16:function setInt16(a,b){Y(this,2,a,S,b,arguments[2])},setUint16:function setUint16(a,b){Y(this,2,a,S,b,arguments[2])},setInt32:function setInt32(a,b){Y(this,4,a,T,b,arguments[2])},setUint32:function setUint32(a,b){Y(this,4,a,T,b,arguments[2])},setFloat32:function setFloat32(a,b){Y(this,4,a,V,b,arguments[2])},setFloat64:function setFloat64(a,b){Y(this,8,a,U,b,arguments[2])}});r(x,s),r(y,t),i(y[u],h.VIEW,!0),b[s]=x,b[t]=y},function(a,b,c){var d=c(6);d(d.G+d.W+d.F*!c(232).ABV,{DataView:c(233).DataView})},function(a,b,c){c(236)("Int8",1,function(a){return function Int8Array(b,c,d){return a(this,b,c,d)}})},function(a,b,d){if(d(4)){var e=d(26),f=d(2),g=d(5),h=d(6),i=d(232),j=d(233),k=d(18),l=d(197),m=d(15),n=d(8),o=d(202),p=d(36),q=d(35),r=d(37),s=d(14),t=d(3),u=d(69),v=d(73),w=d(11),x=d(56),y=d(154),z=d(44),A=d(57),B=d(48).f,C=d(156),D=d(17),E=d(23),F=d(164),G=d(34),H=d(199),I=d(183),J=d(135),K=d(157),L=d(186),M=d(180),N=d(177),O=d(9),P=d(49),Q=O.f,R=P.f,S=f.RangeError,T=f.TypeError,U=f.Uint8Array,V="ArrayBuffer",W="Shared"+V,X="BYTES_PER_ELEMENT",Y="prototype",Z=Array[Y],$=j.ArrayBuffer,_=j.DataView,aa=F(0),ba=F(2),ca=F(3),da=F(4),ea=F(5),fa=F(6),ga=G(!0),ha=G(!1),ia=I.values,ja=I.keys,ka=I.entries,la=Z.lastIndexOf,ma=Z.reduce,na=Z.reduceRight,oa=Z.join,pa=Z.sort,qa=Z.slice,ra=Z.toString,sa=Z.toLocaleString,ta=E("iterator"),ua=E("toStringTag"),va=D("typed_constructor"),wa=D("def_constructor"),xa=i.CONSTR,ya=i.TYPED,za=i.VIEW,Aa="Wrong length!",Ba=F(1,function(a,b){return Ha(H(a,a[wa]),b)}),Ca=g(function(){return 1===new U(new Uint16Array([1]).buffer)[0]}),Da=!!U&&!!U[Y].set&&g(function(){new U(1).set({})}),Ea=function(a,b){if(a===c)throw T(Aa);var d=+a,e=q(a);if(b&&!u(d,e))throw S(Aa);return e},Fa=function(a,b){var c=p(a);if(c<0||c%b)throw S("Wrong offset!");return c},Ga=function(a){if(w(a)&&ya in a)return a;throw T(a+" is not a typed array!")},Ha=function(a,b){if(!(w(a)&&va in a))throw T("It is not a typed array constructor!");return new a(b)},Ia=function(a,b){return Ja(H(a,a[wa]),b)},Ja=function(a,b){for(var c=0,d=b.length,e=Ha(a,d);d>c;)e[c]=b[c++];return e},Ka=function(a,b,c){Q(a,b,{get:function(){return this._d[c]}})},La=function from(a){var b,d,e,f,g,h,i=x(a),j=arguments.length,l=j>1?arguments[1]:c,m=l!==c,n=C(i);if(n!=c&&!y(n)){for(h=n.call(i),e=[],b=0;!(g=h.next()).done;b++)e.push(g.value);i=e}for(m&&j>2&&(l=k(l,arguments[2],2)),b=0,d=q(i.length),f=Ha(this,d);d>b;b++)f[b]=m?l(i[b],b):i[b];return f},Ma=function of(){for(var a=0,b=arguments.length,c=Ha(this,b);b>a;)c[a]=arguments[a++];return c},Na=!!U&&g(function(){sa.call(new U(1))}),Oa=function toLocaleString(){return sa.apply(Na?qa.call(Ga(this)):Ga(this),arguments)},Pa={copyWithin:function copyWithin(a,b){return N.call(Ga(this),a,b,arguments.length>2?arguments[2]:c)},every:function every(a){return da(Ga(this),a,arguments.length>1?arguments[1]:c)},fill:function fill(a){return M.apply(Ga(this),arguments)},filter:function filter(a){return Ia(this,ba(Ga(this),a,arguments.length>1?arguments[1]:c))},find:function find(a){return ea(Ga(this),a,arguments.length>1?arguments[1]:c)},findIndex:function findIndex(a){return fa(Ga(this),a,arguments.length>1?arguments[1]:c)},forEach:function forEach(a){aa(Ga(this),a,arguments.length>1?arguments[1]:c)},indexOf:function indexOf(a){return ha(Ga(this),a,arguments.length>1?arguments[1]:c)},includes:function includes(a){return ga(Ga(this),a,arguments.length>1?arguments[1]:c)},join:function join(a){return oa.apply(Ga(this),arguments)},lastIndexOf:function lastIndexOf(a){
+return la.apply(Ga(this),arguments)},map:function map(a){return Ba(Ga(this),a,arguments.length>1?arguments[1]:c)},reduce:function reduce(a){return ma.apply(Ga(this),arguments)},reduceRight:function reduceRight(a){return na.apply(Ga(this),arguments)},reverse:function reverse(){for(var a,b=this,c=Ga(b).length,d=Math.floor(c/2),e=0;e<d;)a=b[e],b[e++]=b[--c],b[c]=a;return b},some:function some(a){return ca(Ga(this),a,arguments.length>1?arguments[1]:c)},sort:function sort(a){return pa.call(Ga(this),a)},subarray:function subarray(a,b){var d=Ga(this),e=d.length,f=r(a,e);return new(H(d,d[wa]))(d.buffer,d.byteOffset+f*d.BYTES_PER_ELEMENT,q((b===c?e:r(b,e))-f))}},Qa=function slice(a,b){return Ia(this,qa.call(Ga(this),a,b))},Ra=function set(a){Ga(this);var b=Fa(arguments[1],1),c=this.length,d=x(a),e=q(d.length),f=0;if(e+b>c)throw S(Aa);for(;f<e;)this[b+f]=d[f++]},Sa={entries:function entries(){return ka.call(Ga(this))},keys:function keys(){return ja.call(Ga(this))},values:function values(){return ia.call(Ga(this))}},Ta=function(a,b){return w(a)&&a[ya]&&"symbol"!=typeof b&&b in a&&String(+b)==String(b)},Ua=function getOwnPropertyDescriptor(a,b){return Ta(a,b=s(b,!0))?m(2,a[b]):R(a,b)},Va=function defineProperty(a,b,c){return!(Ta(a,b=s(b,!0))&&w(c)&&t(c,"value"))||t(c,"get")||t(c,"set")||c.configurable||t(c,"writable")&&!c.writable||t(c,"enumerable")&&!c.enumerable?Q(a,b,c):(a[b]=c.value,a)};xa||(P.f=Ua,O.f=Va),h(h.S+h.F*!xa,"Object",{getOwnPropertyDescriptor:Ua,defineProperty:Va}),g(function(){ra.call({})})&&(ra=sa=function toString(){return oa.call(this)});var Wa=o({},Pa);o(Wa,Sa),n(Wa,ta,Sa.values),o(Wa,{slice:Qa,set:Ra,constructor:function(){},toString:ra,toLocaleString:Oa}),Ka(Wa,"buffer","b"),Ka(Wa,"byteOffset","o"),Ka(Wa,"byteLength","l"),Ka(Wa,"length","e"),Q(Wa,ua,{get:function(){return this[ya]}}),a.exports=function(a,b,d,j){j=!!j;var k=a+(j?"Clamped":"")+"Array",m="Uint8Array"!=k,o="get"+a,p="set"+a,r=f[k],s=r||{},t=r&&A(r),u=!r||!i.ABV,x={},y=r&&r[Y],C=function(a,c){var d=a._d;return d.v[o](c*b+d.o,Ca)},D=function(a,c,d){var e=a._d;j&&(d=(d=Math.round(d))<0?0:d>255?255:255&d),e.v[p](c*b+e.o,d,Ca)},E=function(a,b){Q(a,b,{get:function(){return C(this,b)},set:function(a){return D(this,b,a)},enumerable:!0})};u?(r=d(function(a,d,e,f){l(a,r,k,"_d");var g,h,i,j,m=0,o=0;if(w(d)){if(!(d instanceof $||(j=v(d))==V||j==W))return ya in d?Ja(r,d):La.call(r,d);g=d,o=Fa(e,b);var p=d.byteLength;if(f===c){if(p%b)throw S(Aa);if(h=p-o,h<0)throw S(Aa)}else if(h=q(f)*b,h+o>p)throw S(Aa);i=h/b}else i=Ea(d,!0),h=i*b,g=new $(h);for(n(a,"_d",{b:g,o:o,l:h,e:i,v:new _(g)});m<i;)E(a,m++)}),y=r[Y]=z(Wa),n(y,"constructor",r)):K(function(a){new r(null),new r(a)},!0)||(r=d(function(a,d,e,f){l(a,r,k);var g;return w(d)?d instanceof $||(g=v(d))==V||g==W?f!==c?new s(d,Fa(e,b),f):e!==c?new s(d,Fa(e,b)):new s(d):ya in d?Ja(r,d):La.call(r,d):new s(Ea(d,m))}),aa(t!==Function.prototype?B(s).concat(B(t)):B(s),function(a){a in r||n(r,a,s[a])}),r[Y]=y,e||(y.constructor=r));var F=y[ta],G=!!F&&("values"==F.name||F.name==c),H=Sa.values;n(r,va,!0),n(y,ya,k),n(y,za,!0),n(y,wa,r),(j?new r(1)[ua]==k:ua in y)||Q(y,ua,{get:function(){return k}}),x[k]=r,h(h.G+h.W+h.F*(r!=s),x),h(h.S,k,{BYTES_PER_ELEMENT:b,from:La,of:Ma}),X in y||n(y,X,b),h(h.P,k,Pa),L(k),h(h.P+h.F*Da,k,{set:Ra}),h(h.P+h.F*!G,k,Sa),h(h.P+h.F*(y.toString!=ra),k,{toString:ra}),h(h.P+h.F*g(function(){new r(1).slice()}),k,{slice:Qa}),h(h.P+h.F*(g(function(){return[1,2].toLocaleString()!=new r([1,2]).toLocaleString()})||!g(function(){y.toLocaleString.call([1,2])})),k,{toLocaleString:Oa}),J[k]=G?F:H,e||G||n(y,ta,H)}}else a.exports=function(){}},function(a,b,c){c(236)("Uint8",1,function(a){return function Uint8Array(b,c,d){return a(this,b,c,d)}})},function(a,b,c){c(236)("Uint8",1,function(a){return function Uint8ClampedArray(b,c,d){return a(this,b,c,d)}},!0)},function(a,b,c){c(236)("Int16",2,function(a){return function Int16Array(b,c,d){return a(this,b,c,d)}})},function(a,b,c){c(236)("Uint16",2,function(a){return function Uint16Array(b,c,d){return a(this,b,c,d)}})},function(a,b,c){c(236)("Int32",4,function(a){return function Int32Array(b,c,d){return a(this,b,c,d)}})},function(a,b,c){c(236)("Uint32",4,function(a){return function Uint32Array(b,c,d){return a(this,b,c,d)}})},function(a,b,c){c(236)("Float32",4,function(a){return function Float32Array(b,c,d){return a(this,b,c,d)}})},function(a,b,c){c(236)("Float64",8,function(a){return function Float64Array(b,c,d){return a(this,b,c,d)}})},function(a,b,d){var e=d(6),f=d(34)(!0);e(e.P,"Array",{includes:function includes(a){return f(this,a,arguments.length>1?arguments[1]:c)}}),d(178)("includes")},function(a,b,c){var d=c(6),e=c(125)(!0);d(d.P,"String",{at:function at(a){return e(this,a)}})},function(a,b,d){var e=d(6),f=d(248);e(e.P,"String",{padStart:function padStart(a){return f(this,a,arguments.length>1?arguments[1]:c,!0)}})},function(a,b,d){var e=d(35),f=d(85),g=d(33);a.exports=function(a,b,d,h){var i=String(g(a)),j=i.length,k=d===c?" ":String(d),l=e(b);if(l<=j||""==k)return i;var m=l-j,n=f.call(k,Math.ceil(m/k.length));return n.length>m&&(n=n.slice(0,m)),h?n+i:i+n}},function(a,b,d){var e=d(6),f=d(248);e(e.P,"String",{padEnd:function padEnd(a){return f(this,a,arguments.length>1?arguments[1]:c,!1)}})},function(a,b,c){c(81)("trimLeft",function(a){return function trimLeft(){return a(this,1)}},"trimStart")},function(a,b,c){c(81)("trimRight",function(a){return function trimRight(){return a(this,2)}},"trimEnd")},function(a,b,c){var d=c(6),e=c(33),f=c(35),g=c(128),h=c(188),i=RegExp.prototype,j=function(a,b){this._r=a,this._s=b};c(136)(j,"RegExp String",function next(){var a=this._r.exec(this._s);return{value:a,done:null===a}}),d(d.P,"String",{matchAll:function matchAll(a){if(e(this),!g(a))throw TypeError(a+" is not a regexp!");var b=String(this),c="flags"in i?String(a.flags):h.call(a),d=new RegExp(a.source,~c.indexOf("g")?c:"g"+c);return d.lastIndex=f(a.lastIndex),new j(d,b)}})},function(a,b,c){c(25)("asyncIterator")},function(a,b,c){c(25)("observable")},function(a,b,c){var d=c(6),e=c(221),f=c(30),g=c(49),h=c(155);d(d.S,"Object",{getOwnPropertyDescriptors:function getOwnPropertyDescriptors(a){for(var b,c=f(a),d=g.f,i=e(c),j={},k=0;i.length>k;)h(j,b=i[k++],d(c,b));return j}})},function(a,b,c){var d=c(6),e=c(257)(!1);d(d.S,"Object",{values:function values(a){return e(a)}})},function(a,b,c){var d=c(28),e=c(30),f=c(42).f;a.exports=function(a){return function(b){for(var c,g=e(b),h=d(g),i=h.length,j=0,k=[];i>j;)f.call(g,c=h[j++])&&k.push(a?[c,g[c]]:g[c]);return k}}},function(a,b,c){var d=c(6),e=c(257)(!0);d(d.S,"Object",{entries:function entries(a){return e(a)}})},function(a,b,c){var d=c(6),e=c(56),f=c(19),g=c(9);c(4)&&d(d.P+c(260),"Object",{__defineGetter__:function __defineGetter__(a,b){g.f(e(this),a,{get:f(b),enumerable:!0,configurable:!0})}})},function(a,b,c){a.exports=c(26)||!c(5)(function(){var a=Math.random();__defineSetter__.call(null,a,function(){}),delete c(2)[a]})},function(a,b,c){var d=c(6),e=c(56),f=c(19),g=c(9);c(4)&&d(d.P+c(260),"Object",{__defineSetter__:function __defineSetter__(a,b){g.f(e(this),a,{set:f(b),enumerable:!0,configurable:!0})}})},function(a,b,c){var d=c(6),e=c(56),f=c(14),g=c(57),h=c(49).f;c(4)&&d(d.P+c(260),"Object",{__lookupGetter__:function __lookupGetter__(a){var b,c=e(this),d=f(a,!0);do if(b=h(c,d))return b.get;while(c=g(c))}})},function(a,b,c){var d=c(6),e=c(56),f=c(14),g=c(57),h=c(49).f;c(4)&&d(d.P+c(260),"Object",{__lookupSetter__:function __lookupSetter__(a){var b,c=e(this),d=f(a,!0);do if(b=h(c,d))return b.set;while(c=g(c))}})},function(a,b,c){var d=c(6);d(d.P+d.R,"Map",{toJSON:c(265)("Map")})},function(a,b,c){var d=c(73),e=c(266);a.exports=function(a){return function toJSON(){if(d(this)!=a)throw TypeError(a+"#toJSON isn't generic");return e(this)}}},function(a,b,c){var d=c(198);a.exports=function(a,b){var c=[];return d(a,!1,c.push,c,b),c}},function(a,b,c){var d=c(6);d(d.P+d.R,"Set",{toJSON:c(265)("Set")})},function(a,b,c){var d=c(6);d(d.S,"System",{global:c(2)})},function(a,b,c){var d=c(6),e=c(32);d(d.S,"Error",{isError:function isError(a){return"Error"===e(a)}})},function(a,b,c){var d=c(6);d(d.S,"Math",{iaddh:function iaddh(a,b,c,d){var e=a>>>0,f=b>>>0,g=c>>>0;return f+(d>>>0)+((e&g|(e|g)&~(e+g>>>0))>>>31)|0}})},function(a,b,c){var d=c(6);d(d.S,"Math",{isubh:function isubh(a,b,c,d){var e=a>>>0,f=b>>>0,g=c>>>0;return f-(d>>>0)-((~e&g|~(e^g)&e-g>>>0)>>>31)|0}})},function(a,b,c){var d=c(6);d(d.S,"Math",{imulh:function imulh(a,b){var c=65535,d=+a,e=+b,f=d&c,g=e&c,h=d>>16,i=e>>16,j=(h*g>>>0)+(f*g>>>16);return h*i+(j>>16)+((f*i>>>0)+(j&c)>>16)}})},function(a,b,c){var d=c(6);d(d.S,"Math",{umulh:function umulh(a,b){var c=65535,d=+a,e=+b,f=d&c,g=e&c,h=d>>>16,i=e>>>16,j=(h*g>>>0)+(f*g>>>16);return h*i+(j>>>16)+((f*i>>>0)+(j&c)>>>16)}})},function(a,b,c){var d=c(275),e=c(10),f=d.key,g=d.set;d.exp({defineMetadata:function defineMetadata(a,b,c,d){g(a,b,e(c),f(d))}})},function(a,b,d){var e=d(203),f=d(6),g=d(21)("metadata"),h=g.store||(g.store=new(d(207))),i=function(a,b,d){var f=h.get(a);if(!f){if(!d)return c;h.set(a,f=new e)}var g=f.get(b);if(!g){if(!d)return c;f.set(b,g=new e)}return g},j=function(a,b,d){var e=i(b,d,!1);return e!==c&&e.has(a)},k=function(a,b,d){var e=i(b,d,!1);return e===c?c:e.get(a)},l=function(a,b,c,d){i(c,d,!0).set(a,b)},m=function(a,b){var c=i(a,b,!1),d=[];return c&&c.forEach(function(a,b){d.push(b)}),d},n=function(a){return a===c||"symbol"==typeof a?a:String(a)},o=function(a){f(f.S,"Reflect",a)};a.exports={store:h,map:i,has:j,get:k,set:l,keys:m,key:n,exp:o}},function(a,b,d){var e=d(275),f=d(10),g=e.key,h=e.map,i=e.store;e.exp({deleteMetadata:function deleteMetadata(a,b){var d=arguments.length<3?c:g(arguments[2]),e=h(f(b),d,!1);if(e===c||!e["delete"](a))return!1;if(e.size)return!0;var j=i.get(b);return j["delete"](d),!!j.size||i["delete"](b)}})},function(a,b,d){var e=d(275),f=d(10),g=d(57),h=e.has,i=e.get,j=e.key,k=function(a,b,d){var e=h(a,b,d);if(e)return i(a,b,d);var f=g(b);return null!==f?k(a,f,d):c};e.exp({getMetadata:function getMetadata(a,b){return k(a,f(b),arguments.length<3?c:j(arguments[2]))}})},function(a,b,d){var e=d(206),f=d(266),g=d(275),h=d(10),i=d(57),j=g.keys,k=g.key,l=function(a,b){var c=j(a,b),d=i(a);if(null===d)return c;var g=l(d,b);return g.length?c.length?f(new e(c.concat(g))):g:c};g.exp({getMetadataKeys:function getMetadataKeys(a){return l(h(a),arguments.length<2?c:k(arguments[1]))}})},function(a,b,d){var e=d(275),f=d(10),g=e.get,h=e.key;e.exp({getOwnMetadata:function getOwnMetadata(a,b){return g(a,f(b),arguments.length<3?c:h(arguments[2]))}})},function(a,b,d){var e=d(275),f=d(10),g=e.keys,h=e.key;e.exp({getOwnMetadataKeys:function getOwnMetadataKeys(a){return g(f(a),arguments.length<2?c:h(arguments[1]))}})},function(a,b,d){var e=d(275),f=d(10),g=d(57),h=e.has,i=e.key,j=function(a,b,c){var d=h(a,b,c);if(d)return!0;var e=g(b);return null!==e&&j(a,e,c)};e.exp({hasMetadata:function hasMetadata(a,b){return j(a,f(b),arguments.length<3?c:i(arguments[2]))}})},function(a,b,d){var e=d(275),f=d(10),g=e.has,h=e.key;e.exp({hasOwnMetadata:function hasOwnMetadata(a,b){return g(a,f(b),arguments.length<3?c:h(arguments[2]))}})},function(a,b,d){var e=d(275),f=d(10),g=d(19),h=e.key,i=e.set;e.exp({metadata:function metadata(a,b){return function decorator(d,e){i(a,b,(e!==c?f:g)(d),h(e))}}})},function(a,b,c){var d=c(6),e=c(201)(),f=c(2).process,g="process"==c(32)(f);d(d.G,{asap:function asap(a){var b=g&&f.domain;e(b?b.bind(a):a)}})},function(a,b,d){var e=d(6),f=d(2),g=d(7),h=d(201)(),i=d(23)("observable"),j=d(19),k=d(10),l=d(197),m=d(202),n=d(8),o=d(198),p=o.RETURN,q=function(a){return null==a?c:j(a)},r=function(a){var b=a._c;b&&(a._c=c,b())},s=function(a){return a._o===c},t=function(a){s(a)||(a._o=c,r(a))},u=function(a,b){k(a),this._c=c,this._o=a,a=new v(this);try{var d=b(a),e=d;null!=d&&("function"==typeof d.unsubscribe?d=function(){e.unsubscribe()}:j(d),this._c=d)}catch(f){return void a.error(f)}s(this)&&r(this)};u.prototype=m({},{unsubscribe:function unsubscribe(){t(this)}});var v=function(a){this._s=a};v.prototype=m({},{next:function next(a){var b=this._s;if(!s(b)){var c=b._o;try{var d=q(c.next);if(d)return d.call(c,a)}catch(e){try{t(b)}finally{throw e}}}},error:function error(a){var b=this._s;if(s(b))throw a;var d=b._o;b._o=c;try{var e=q(d.error);if(!e)throw a;a=e.call(d,a)}catch(f){try{r(b)}finally{throw f}}return r(b),a},complete:function complete(a){var b=this._s;if(!s(b)){var d=b._o;b._o=c;try{var e=q(d.complete);a=e?e.call(d,a):c}catch(f){try{r(b)}finally{throw f}}return r(b),a}}});var w=function Observable(a){l(this,w,"Observable","_f")._f=j(a)};m(w.prototype,{subscribe:function subscribe(a){return new u(a,this._f)},forEach:function forEach(a){var b=this;return new(g.Promise||f.Promise)(function(c,d){j(a);var e=b.subscribe({next:function(b){try{return a(b)}catch(c){d(c),e.unsubscribe()}},error:d,complete:c})})}}),m(w,{from:function from(a){var b="function"==typeof this?this:w,c=q(k(a)[i]);if(c){var d=k(c.call(a));return d.constructor===b?d:new b(function(a){return d.subscribe(a)})}return new b(function(b){var c=!1;return h(function(){if(!c){try{if(o(a,!1,function(a){if(b.next(a),c)return p})===p)return}catch(d){if(c)throw d;return void b.error(d)}b.complete()}}),function(){c=!0}})},of:function of(){for(var a=0,b=arguments.length,c=Array(b);a<b;)c[a]=arguments[a++];return new("function"==typeof this?this:w)(function(a){var b=!1;return h(function(){if(!b){for(var d=0;d<c.length;++d)if(a.next(c[d]),b)return;a.complete()}}),function(){b=!0}})}}),n(w.prototype,i,function(){return this}),e(e.G,{Observable:w}),d(186)("Observable")},function(a,b,c){var d=c(6),e=c(200);d(d.G+d.B,{setImmediate:e.set,clearImmediate:e.clear})},function(a,b,c){for(var d=c(183),e=c(16),f=c(2),g=c(8),h=c(135),i=c(23),j=i("iterator"),k=i("toStringTag"),l=h.Array,m=["NodeList","DOMTokenList","MediaList","StyleSheetList","CSSRuleList"],n=0;n<5;n++){var o,p=m[n],q=f[p],r=q&&q.prototype;if(r){r[j]||g(r,j,l),r[k]||g(r,k,p),h[p]=l;for(o in d)r[o]||e(r,o,d[o],!0)}}},function(a,b,c){var d=c(2),e=c(6),f=c(76),g=c(289),h=d.navigator,i=!!h&&/MSIE .\./.test(h.userAgent),j=function(a){return i?function(b,c){return a(f(g,[].slice.call(arguments,2),"function"==typeof b?b:Function(b)),c)}:a};e(e.G+e.B+e.F*i,{setTimeout:j(d.setTimeout),setInterval:j(d.setInterval)})},function(a,b,c){var d=c(290),e=c(76),f=c(19);a.exports=function(){for(var a=f(this),b=arguments.length,c=Array(b),g=0,h=d._,i=!1;b>g;)(c[g]=arguments[g++])===h&&(i=!0);return function(){var d,f=this,g=arguments.length,j=0,k=0;if(!i&&!g)return e(a,c,f);if(d=c.slice(),i)for(;b>j;j++)d[j]===h&&(d[j]=arguments[k++]);for(;g>k;)d.push(arguments[k++]);return e(a,d,f)}}},function(a,b,c){a.exports=c(2)}]),"undefined"!=typeof module&&module.exports?module.exports=a:"function"==typeof define&&define.amd?define(function(){return a}):b.core=a}(1,1);
+//# sourceMappingURL=shim.min.js.map
Index: src/main/resources/angular_io/thirdparty/other/system.js
===================================================================
--- src/main/resources/angular_io/thirdparty/other/system.js	(revision 0)
+++ src/main/resources/angular_io/thirdparty/other/system.js	(revision 0)
@@ -0,0 +1,6 @@
+/*
+ * SystemJS v0.19.39
+ */
+!function(){function e(){!function(e){function t(e,r){if("string"!=typeof e)throw new TypeError("URL must be a string");var n=String(e).replace(/^\s+|\s+$/g,"").match(/^([^:\/?#]+:)?(?:\/\/(?:([^:@\/?#]*)(?::([^:@\/?#]*))?@)?(([^:\/?#]*)(?::(\d*))?))?([^?#]*)(\?[^#]*)?(#[\s\S]*)?/);if(!n)throw new RangeError("Invalid URL format");var a=n[1]||"",o=n[2]||"",i=n[3]||"",s=n[4]||"",l=n[5]||"",u=n[6]||"",d=n[7]||"",c=n[8]||"",f=n[9]||"";if(void 0!==r){var m=r instanceof t?r:new t(r),p=!a&&!s&&!o;!p||d||c||(c=m.search),p&&"/"!==d[0]&&(d=d?(!m.host&&!m.username||m.pathname?"":"/")+m.pathname.slice(0,m.pathname.lastIndexOf("/")+1)+d:m.pathname);var h=[];d.replace(/^(\.\.?(\/|$))+/,"").replace(/\/(\.(\/|$))+/g,"/").replace(/\/\.\.$/,"/../").replace(/\/?[^\/]*/g,function(e){"/.."===e?h.pop():h.push(e)}),d=h.join("").replace(/^\//,"/"===d[0]?"/":""),p&&(u=m.port,l=m.hostname,s=m.host,i=m.password,o=m.username),a||(a=m.protocol)}d=d.replace(/\\/g,"/"),this.origin=s?a+(""!==a||""!==s?"//":"")+s:"",this.href=a+(a&&s||"file:"==a?"//":"")+(""!==o?o+(""!==i?":"+i:"")+"@":"")+s+d+c+f,this.protocol=a,this.username=o,this.password=i,this.host=s,this.hostname=l,this.port=u,this.pathname=d,this.search=c,this.hash=f}e.URLPolyfill=t}("undefined"!=typeof self?self:global),function(e){function t(e,t){if(!e.originalErr)for(var r=((e.message||e)+(e.stack?"\n"+e.stack:"")).toString().split("\n"),n=[],a=0;a<r.length;a++)"undefined"!=typeof $__curScript&&r[a].indexOf($__curScript.src)!=-1||n.push(r[a]);var o="(SystemJS) "+(n?n.join("\n\t"):e.message.substr(11))+"\n\t"+t;F||(o=o.replace(D?/file:\/\/\//g:/file:\/\//g,""));var i=$?new Error(o,e.fileName,e.lineNumber):new Error(o);return i.stack=o,i.originalErr=e.originalErr||e,i}function r(){}function n(t){this._loader={loaderObj:this,loads:[],modules:{},importPromises:{},moduleRecords:{}},q(this,"global",{get:function(){return e}})}function a(){n.call(this),this.paths={},this._loader.paths={},V.call(this)}function o(){}function i(e,t){a.prototype[e]=t(a.prototype[e]||function(){})}function s(e){V=e(V||function(){})}function l(e){return e.match(Y)}function u(e){return"."==e[0]&&(!e[1]||"/"==e[1]||"."==e[1])||"/"==e[0]}function d(e){return!u(e)&&!l(e)}function c(e,t){if("."==e[0]){if("/"==e[1]&&"."!=e[2])return(t&&t.substr(0,t.lastIndexOf("/")+1)||J)+e.substr(2)}else if("/"!=e[0]&&e.indexOf(":")==-1)return(t&&t.substr(0,t.lastIndexOf("/")+1)||J)+e;return new H(e,t&&t.replace(/#/g,"%05")||K).href.replace(/%05/g,"#")}function f(e,t){var r,n="",a=0,o=e.paths,i=e._loader.paths;for(var s in o)if(!o.hasOwnProperty||o.hasOwnProperty(s)){var l=o[s];if(l!==i[s]&&(l=o[s]=i[s]=c(o[s],u(o[s])?J:e.baseURL)),s.indexOf("*")===-1){if(t==s)return o[s];if(t.substr(0,s.length-1)==s.substr(0,s.length-1)&&(t.length<s.length||t[s.length-1]==s[s.length-1])&&("/"==o[s][o[s].length-1]||""==o[s]))return o[s].substr(0,o[s].length-1)+(t.length>s.length?(o[s]&&"/"||"")+t.substr(s.length):"")}else{var d=s.split("*");if(d.length>2)throw new TypeError("Only one wildcard in a path is permitted");var f=d[0].length;f>=a&&t.substr(0,d[0].length)==d[0]&&t.substr(t.length-d[1].length)==d[1]&&(a=f,n=s,r=t.substr(d[0].length,t.length-d[1].length-d[0].length))}}var m=o[n];return"string"==typeof r&&(m=m.replace("*",r)),m}function m(e){for(var t=[],r=[],n=0,a=e.length;n<a;n++){var o=U.call(t,e[n]);o===-1?(t.push(e[n]),r.push([n])):r[o].push(n)}return{names:t,indices:r}}function p(t){var r={};if(("object"==typeof t||"function"==typeof t)&&t!==e)if(Q)for(var n in t)"default"!==n&&h(r,t,n);else g(r,t);return r.default=t,q(r,"__useDefault",{value:!0}),r}function h(e,t,r){try{var n;(n=Object.getOwnPropertyDescriptor(t,r))&&q(e,r,n)}catch(n){return e[r]=t[r],!1}}function g(e,t,r){var n=t&&t.hasOwnProperty;for(var a in t)n&&!t.hasOwnProperty(a)||r&&a in e||(e[a]=t[a]);return e}function v(e,t,r){var n=t&&t.hasOwnProperty;for(var a in t)if(!n||t.hasOwnProperty(a)){var o=t[a];a in e?o instanceof Array&&e[a]instanceof Array?e[a]=[].concat(r?o:e[a]).concat(r?e[a]:o):"object"==typeof o&&null!==o&&"object"==typeof e[a]?e[a]=g(g({},e[a]),o,r):r||(e[a]=o):e[a]=o}}function b(e,t,r,n,a){for(var o in t)if(U.call(["main","format","defaultExtension","basePath"],o)!=-1)e[o]=t[o];else if("map"==o)g(e.map=e.map||{},t.map);else if("meta"==o)g(e.meta=e.meta||{},t.meta);else if("depCache"==o)for(var i in t.depCache){var s;s="./"==i.substr(0,2)?r+"/"+i.substr(2):P.call(n,i),n.depCache[s]=(n.depCache[s]||[]).concat(t.depCache[i])}else!a||U.call(["browserConfig","nodeConfig","devConfig","productionConfig"],o)!=-1||t.hasOwnProperty&&!t.hasOwnProperty(o)||w.call(n,'"'+o+'" is not a valid package configuration option in package '+r)}function y(e,t,r,n){var a;if(e.packages[t]){var o=e.packages[t];a=e.packages[t]={},b(a,n?r:o,t,e,n),b(a,n?o:r,t,e,!n)}else a=e.packages[t]=r;return"object"==typeof a.main&&(a.map=a.map||{},a.map["./@main"]=a.main,a.main.default=a.main.default||"./",a.main="@main"),a}function w(e){this.warnings&&"undefined"!=typeof console&&console.warn}function x(e,t){for(var r=e.split(".");r.length;)t=t[r.shift()];return t}function S(e,t){var r,n=0;for(var a in e)if(t.substr(0,a.length)==a&&(t.length==a.length||"/"==t[a.length])){var o=a.split("/").length;if(o<=n)continue;r=a,n=o}return r}function _(e){this._loader.baseURL!==this.baseURL&&("/"!=this.baseURL[this.baseURL.length-1]&&(this.baseURL+="/"),this._loader.baseURL=this.baseURL=new H(this.baseURL,K).href)}function E(e,t){this.set("@system-env",te=this.newModule({browser:F,node:!!this._nodeRequire,production:!t&&e,dev:t||!e,build:t,default:!0}))}function j(e,t){if(!d(e))throw new Error("Node module "+e+" can't be loaded as it is not a package require.");if(!re){var r=this._nodeRequire("module"),n=t.substr(D?8:7);re=new r(n),re.paths=r._nodeModulePaths(n)}return re.require(e)}function P(e,t){if(u(e))return c(e,t);if(l(e))return e;var r=S(this.map,e);if(r){if(e=this.map[r]+e.substr(r.length),u(e))return c(e);if(l(e))return e}if(this.has(e))return e;if("@node/"==e.substr(0,6)){if(!this._nodeRequire)throw new TypeError("Error loading "+e+". Can only load node core modules in Node.");return this.builder?this.set(e,this.newModule({})):this.set(e,this.newModule(p(j.call(this,e.substr(6),this.baseURL)))),e}return _.call(this),f(this,e)||this.baseURL+e}function O(e,t,r){te.browser&&t.browserConfig&&r(t.browserConfig),te.node&&t.nodeConfig&&r(t.nodeConfig),te.dev&&t.devConfig&&r(t.devConfig),te.build&&t.buildConfig&&r(t.buildConfig),te.production&&t.productionConfig&&r(t.productionConfig)}function k(e){var t=e.match(oe);return t&&"System.register"==e.substr(t[0].length,15)}function M(){return{name:null,deps:null,originalIndices:null,declare:null,execute:null,executingRequire:!1,declarative:!1,normalizedDeps:null,groupIndex:null,evaluated:!1,module:null,esModule:null,esmExports:!1}}function R(t){if("string"==typeof t)return x(t,e);if(!(t instanceof Array))throw new Error("Global exports must be a string or array.");for(var r={},n=!0,a=0;a<t.length;a++){var o=x(t[a],e);n&&(r.default=o,n=!1),r[t[a].split(".").pop()]=o}return r}function z(e){var t,r,n,n="~"==e[0],a=e.lastIndexOf("|");return a!=-1?(t=e.substr(a+1),r=e.substr(n,a-n),n&&w.call(this,'Condition negation form "'+e+'" is deprecated for "'+r+"|~"+t+'"'),"~"==t[0]&&(n=!0,t=t.substr(1))):(t="default",r=e.substr(n),se.indexOf(r)!=-1&&(t=r,r=null)),{module:r||"@system-env",prop:t,negate:n}}function I(e){return e.module+"|"+(e.negate?"~":"")+e.prop}function T(e,t,r){var n=this;return this.normalize(e.module,t).then(function(t){return n.load(t).then(function(a){var o=x(e.prop,n.get(t));if(r&&"boolean"!=typeof o)throw new TypeError("Condition "+I(e)+" did not resolve to a boolean.");return e.negate?!o:o})})}function C(e,t){var r=e.match(le);if(!r)return Promise.resolve(e);var n=z.call(this,r[0].substr(2,r[0].length-3));return this.builder?this.normalize(n.module,t).then(function(t){return n.module=t,e.replace(le,"#{"+I(n)+"}")}):T.call(this,n,t,!1).then(function(r){if("string"!=typeof r)throw new TypeError("The condition value for "+e+" doesn't resolve to a string.");if(r.indexOf("/")!=-1)throw new TypeError("Unabled to interpolate conditional "+e+(t?" in "+t:"")+"\n\tThe condition value "+r+' cannot contain a "/" separator.');return e.replace(le,r)})}function L(e,t){var r=e.lastIndexOf("#?");if(r==-1)return Promise.resolve(e);var n=z.call(this,e.substr(r+2));return this.builder?this.normalize(n.module,t).then(function(t){return n.module=t,e.substr(0,r)+"#?"+I(n)}):T.call(this,n,t,!0).then(function(t){return t?e.substr(0,r):"@empty"})}var A="undefined"==typeof window&&"undefined"!=typeof self&&"undefined"!=typeof importScripts,F="undefined"!=typeof window&&"undefined"!=typeof document,D="undefined"!=typeof process&&"undefined"!=typeof process.platform&&!!process.platform.match(/^win/);e.console||(e.console={assert:function(){}});var q,U=Array.prototype.indexOf||function(e){for(var t=0,r=this.length;t<r;t++)if(this[t]===e)return t;return-1};!function(){try{Object.defineProperty({},"a",{})&&(q=Object.defineProperty)}catch(e){q=function(e,t,r){try{e[t]=r.value||r.get.call(e)}catch(e){}}}}();var J,$="_"==new Error(0,"_").fileName;if("undefined"!=typeof document&&document.getElementsByTagName){if(J=document.baseURI,!J){var N=document.getElementsByTagName("base");J=N[0]&&N[0].href||window.location.href}}else"undefined"!=typeof location&&(J=e.location.href);if(J)J=J.split("#")[0].split("?")[0],J=J.substr(0,J.lastIndexOf("/")+1);else{if("undefined"==typeof process||!process.cwd)throw new TypeError("No environment baseURI");J="file://"+(D?"/":"")+process.cwd()+"/",D&&(J=J.replace(/\\/g,"/"))}try{var B="test:"==new e.URL("test:///").protocol}catch(e){}var H=B?e.URL:e.URLPolyfill;q(r.prototype,"toString",{value:function(){return"Module"}}),function(){function e(e){return{status:"loading",name:e||"<Anonymous"+ ++y+">",linkSets:[],dependencies:[],metadata:{}}}function a(e,t,r){return new Promise(u({step:r.address?"fetch":"locate",loader:e,moduleName:t,moduleMetadata:r&&r.metadata||{},moduleSource:r.source,moduleAddress:r.address}))}function o(t,r,n,a){return new Promise(function(e,o){e(t.loaderObj.normalize(r,n,a))}).then(function(r){var n;if(t.modules[r])return n=e(r),n.status="linked",n.module=t.modules[r],n;for(var a=0,o=t.loads.length;a<o;a++)if(n=t.loads[a],n.name==r)return n;return n=e(r),t.loads.push(n),i(t,n),n})}function i(e,t){s(e,t,Promise.resolve().then(function(){return e.loaderObj.locate({name:t.name,metadata:t.metadata})}))}function s(e,t,r){l(e,t,r.then(function(r){if("loading"==t.status)return t.address=r,e.loaderObj.fetch({name:t.name,metadata:t.metadata,address:r})}))}function l(e,t,r){r.then(function(r){if("loading"==t.status)return t.address=t.address||t.name,Promise.resolve(e.loaderObj.translate({name:t.name,metadata:t.metadata,address:t.address,source:r})).then(function(r){return t.source=r,e.loaderObj.instantiate({name:t.name,metadata:t.metadata,address:t.address,source:r})}).then(function(e){if(void 0===e)throw new TypeError("Declarative modules unsupported in the polyfill.");if("object"!=typeof e)throw new TypeError("Invalid instantiate return value");t.depsList=e.deps||[],t.execute=e.execute}).then(function(){t.dependencies=[];for(var r=t.depsList,n=[],a=0,i=r.length;a<i;a++)(function(r,a){n.push(o(e,r,t.name,t.address).then(function(e){if(t.dependencies[a]={key:r,value:e.name},"linked"!=e.status)for(var n=t.linkSets.concat([]),o=0,i=n.length;o<i;o++)c(n[o],e)}))})(r[a],a);return Promise.all(n)}).then(function(){t.status="loaded";for(var e=t.linkSets.concat([]),r=0,n=e.length;r<n;r++)m(e[r],t)})}).catch(function(e){t.status="failed",t.exception=e;for(var r=t.linkSets.concat([]),n=0,a=r.length;n<a;n++)p(r[n],t,e)})}function u(t){return function(r,n){var a=t.loader,o=t.moduleName,u=t.step;if(a.modules[o])throw new TypeError('"'+o+'" already exists in the module table');for(var c,f=0,m=a.loads.length;f<m;f++)if(a.loads[f].name==o&&(c=a.loads[f],"translate"!=u||c.source||(c.address=t.moduleAddress,l(a,c,Promise.resolve(t.moduleSource))),c.linkSets.length&&c.linkSets[0].loads[0].name==c.name))return c.linkSets[0].done.then(function(){r(c)});var p=c||e(o);p.metadata=t.moduleMetadata;var h=d(a,p);a.loads.push(p),r(h.done),"locate"==u?i(a,p):"fetch"==u?s(a,p,Promise.resolve(t.moduleAddress)):(p.address=t.moduleAddress,l(a,p,Promise.resolve(t.moduleSource)))}}function d(e,t){var r={loader:e,loads:[],startingLoad:t,loadingCount:0};return r.done=new Promise(function(e,t){r.resolve=e,r.reject=t}),c(r,t),r}function c(e,t){if("failed"!=t.status){for(var r=0,n=e.loads.length;r<n;r++)if(e.loads[r]==t)return;e.loads.push(t),t.linkSets.push(e),"loaded"!=t.status&&e.loadingCount++;for(var a=e.loader,r=0,n=t.dependencies.length;r<n;r++)if(t.dependencies[r]){var o=t.dependencies[r].value;if(!a.modules[o])for(var i=0,s=a.loads.length;i<s;i++)if(a.loads[i].name==o){c(e,a.loads[i]);break}}}}function f(e){var t=!1;try{b(e,function(r,n){p(e,r,n),t=!0})}catch(r){p(e,null,r),t=!0}return t}function m(e,t){if(e.loadingCount--,!(e.loadingCount>0)){var r=e.startingLoad;if(e.loader.loaderObj.execute===!1){for(var n=[].concat(e.loads),a=0,o=n.length;a<o;a++){var t=n[a];t.module={name:t.name,module:w({}),evaluated:!0},t.status="linked",h(e.loader,t)}return e.resolve(r)}var i=f(e);i||e.resolve(r)}}function p(e,r,n){var a=e.loader;e:if(r)if(e.loads[0].name==r.name)n=t(n,"Error loading "+r.name);else{for(var o=0;o<e.loads.length;o++)for(var i=e.loads[o],s=0;s<i.dependencies.length;s++){var l=i.dependencies[s];if(l.value==r.name){n=t(n,"Error loading "+r.name+' as "'+l.key+'" from '+i.name);break e}}n=t(n,"Error loading "+r.name+" from "+e.loads[0].name)}else n=t(n,"Error linking "+e.loads[0].name);for(var u=e.loads.concat([]),o=0,d=u.length;o<d;o++){var r=u[o];a.loaderObj.failed=a.loaderObj.failed||[],U.call(a.loaderObj.failed,r)==-1&&a.loaderObj.failed.push(r);var c=U.call(r.linkSets,e);if(r.linkSets.splice(c,1),0==r.linkSets.length){var f=U.call(e.loader.loads,r);f!=-1&&e.loader.loads.splice(f,1)}}e.reject(n)}function h(e,t){if(e.loaderObj.trace){e.loaderObj.loads||(e.loaderObj.loads={});var r={};t.dependencies.forEach(function(e){r[e.key]=e.value}),e.loaderObj.loads[t.name]={name:t.name,deps:t.dependencies.map(function(e){return e.key}),depMap:r,address:t.address,metadata:t.metadata,source:t.source}}t.name&&(e.modules[t.name]=t.module);var n=U.call(e.loads,t);n!=-1&&e.loads.splice(n,1);for(var a=0,o=t.linkSets.length;a<o;a++)n=U.call(t.linkSets[a].loads,t),n!=-1&&t.linkSets[a].loads.splice(n,1);t.linkSets.splice(0,t.linkSets.length)}function g(e,t,n){try{var a=t.execute()}catch(e){return void n(t,e)}return a&&a instanceof r?a:void n(t,new TypeError("Execution must define a Module instance"))}function v(e,t,r){var n=e._loader.importPromises;return n[t]=r.then(function(e){return n[t]=void 0,e},function(e){throw n[t]=void 0,e})}function b(e,t){var r=e.loader;if(e.loads.length)for(var n=e.loads.concat([]),a=0;a<n.length;a++){var o=n[a],i=g(e,o,t);if(!i)return;o.module={name:o.name,module:i},o.status="linked",h(r,o)}}var y=0;n.prototype={constructor:n,define:function(e,t,r){if(this._loader.importPromises[e])throw new TypeError("Module is already loading.");return v(this,e,new Promise(u({step:"translate",loader:this._loader,moduleName:e,moduleMetadata:r&&r.metadata||{},moduleSource:t,moduleAddress:r&&r.address})))},delete:function(e){var t=this._loader;return delete t.importPromises[e],delete t.moduleRecords[e],!!t.modules[e]&&delete t.modules[e]},get:function(e){if(this._loader.modules[e])return this._loader.modules[e].module},has:function(e){return!!this._loader.modules[e]},import:function(e,t,r){"object"==typeof t&&(t=t.name);var n=this;return Promise.resolve(n.normalize(e,t)).then(function(e){var t=n._loader;return t.modules[e]?t.modules[e].module:t.importPromises[e]||v(n,e,a(t,e,{}).then(function(r){return delete t.importPromises[e],r.module.module}))})},load:function(e){var t=this._loader;return t.modules[e]?Promise.resolve():t.importPromises[e]||v(this,e,new Promise(u({step:"locate",loader:t,moduleName:e,moduleMetadata:{},moduleSource:void 0,moduleAddress:void 0})).then(function(){delete t.importPromises[e]}))},module:function(t,r){var n=e();n.address=r&&r.address;var a=d(this._loader,n),o=Promise.resolve(t),i=this._loader,s=a.done.then(function(){return n.module.module});return l(i,n,o),s},newModule:function(e){if("object"!=typeof e)throw new TypeError("Expected object");var t=new r,n=[];if(Object.getOwnPropertyNames&&null!=e)n=Object.getOwnPropertyNames(e);else for(var a in e)n.push(a);for(var o=0;o<n.length;o++)(function(r){q(t,r,{configurable:!1,enumerable:!0,get:function(){return e[r]},set:function(){throw new Error("Module exports cannot be changed externally.")}})})(n[o]);return Object.freeze&&Object.freeze(t),t},set:function(e,t){if(!(t instanceof r))throw new TypeError("Loader.set("+e+", module) must be a module");this._loader.modules[e]={module:t}},normalize:function(e,t,r){},locate:function(e){return e.name},fetch:function(e){},translate:function(e){return e.source},instantiate:function(e){}};var w=n.prototype.newModule}();var X,G;if("undefined"!=typeof XMLHttpRequest)G=function(e,t,r,n){function a(){r(i.responseText)}function o(){n(new Error("XHR error"+(i.status?" ("+i.status+(i.statusText?" "+i.statusText:"")+")":"")+" loading "+e))}var i=new XMLHttpRequest,s=!0,l=!1;if(!("withCredentials"in i)){var u=/^(\w+:)?\/\/([^\/]+)/.exec(e);u&&(s=u[2]===window.location.host,u[1]&&(s&=u[1]===window.location.protocol))}s||"undefined"==typeof XDomainRequest||(i=new XDomainRequest,i.onload=a,i.onerror=o,i.ontimeout=o,i.onprogress=function(){},i.timeout=0,l=!0),i.onreadystatechange=function(){4===i.readyState&&(0==i.status?i.responseText?a():(i.addEventListener("error",o),i.addEventListener("load",a)):200===i.status?a():o())},i.open("GET",e,!0),i.setRequestHeader&&(i.setRequestHeader("Accept","application/x-es-module, */*"),t&&("string"==typeof t&&i.setRequestHeader("Authorization",t),i.withCredentials=!0)),l?setTimeout(function(){i.send()},0):i.send(null)};else if("undefined"!=typeof require&&"undefined"!=typeof process){var Z;G=function(e,t,r,n){if("file:///"!=e.substr(0,8))throw new Error('Unable to fetch "'+e+'". Only file URLs of the form file:/// allowed running in Node.');return Z=Z||require("fs"),e=D?e.replace(/\//g,"\\").substr(8):e.substr(7),Z.readFile(e,function(e,t){if(e)return n(e);var a=t+"";"\ufeff"===a[0]&&(a=a.substr(1)),r(a)})}}else{if("undefined"==typeof self||"undefined"==typeof self.fetch)throw new TypeError("No environment fetch API available.");G=function(e,t,r,n){var a={headers:{Accept:"application/x-es-module, */*"}};t&&("string"==typeof t&&(a.headers.Authorization=t),a.credentials="include"),fetch(e,a).then(function(e){if(e.ok)return e.text();throw new Error("Fetch error: "+e.status+" "+e.statusText)}).then(r,n)}}var W=function(){function t(t){var n=this;return Promise.resolve(e["typescript"==n.transpiler?"ts":n.transpiler]||(n.pluginLoader||n).import(n.transpiler)).then(function(e){e.__useDefault&&(e=e.default);var a;return a=e.Compiler?r:e.createLanguageService?i:o,"(function(__moduleName){"+a.call(n,t,e)+'\n})("'+t.name+'");\n//# sourceURL='+t.address+"!transpiled"})}function r(e,t){var r=this.traceurOptions||{};r.modules="instantiate",r.script=!1,void 0===r.sourceMaps&&(r.sourceMaps="inline"),r.filename=e.address,r.inputSourceMap=e.metadata.sourceMap,r.moduleName=!1;var n=new t.Compiler(r);return a(e.source,n,r.filename)}function a(e,t,r){try{return t.compile(e,r)}catch(e){if(e.length)throw e[0];throw e}}function o(e,t){var r=this.babelOptions||{};return r.modules="system",void 0===r.sourceMap&&(r.sourceMap="inline"),r.inputSourceMap=e.metadata.sourceMap,r.filename=e.address,r.code=!0,r.ast=!1,t.transform(e.source,r).code}function i(e,t){var r=this.typescriptOptions||{};return r.target=r.target||t.ScriptTarget.ES5,void 0===r.sourceMap&&(r.sourceMap=!0),r.sourceMap&&r.inlineSourceMap!==!1&&(r.inlineSourceMap=!0),r.module=t.ModuleKind.System,t.transpile(e.source,r,e.address)}return n.prototype.transpiler="traceur",t}();o.prototype=n.prototype,a.prototype=new o,a.prototype.constructor=a;var V,Y=/^[^\/]+:\/\//,K=new H(J),Q=!0;try{Object.getOwnPropertyDescriptor({a:0},"a")}catch(e){Q=!1}var ee;!function(){function r(e){return l?d+new Buffer(e).toString("base64"):"undefined"!=typeof btoa?d+btoa(unescape(encodeURIComponent(e))):""}function n(e,t){var n=e.source.lastIndexOf("\n");"global"==e.metadata.format&&(t=!1);var a=e.metadata.sourceMap;if(a){if("object"!=typeof a)throw new TypeError("load.metadata.sourceMap must be set to an object.");a=JSON.stringify(a)}return(t?"(function(System, SystemJS) {":"")+e.source+(t?"\n})(System, System);":"")+("\n//# sourceURL="!=e.source.substr(n,15)?"\n//# sourceURL="+e.address+(a?"!transpiled":""):"")+(a&&r(a)||"")}function a(t,r){u=r,0==p++&&(c=e.System),e.System=e.SystemJS=t}function o(){0==--p&&(e.System=e.SystemJS=c),u=void 0}function s(e){v||(v=document.head||document.body||document.documentElement);var r=document.createElement("script");r.text=n(e,!1);var i,s=window.onerror;if(window.onerror=function(r){i=t(r,"Evaluating "+e.address),s&&s.apply(this,arguments)},a(this,e),e.metadata.integrity&&r.setAttribute("integrity",e.metadata.integrity),e.metadata.nonce&&r.setAttribute("nonce",e.metadata.nonce),v.appendChild(r),v.removeChild(r),o(),window.onerror=s,i)throw i}var l="undefined"!=typeof Buffer;try{l&&"YQ=="!=new Buffer("a").toString("base64")&&(l=!1)}catch(e){l=!1}var u,d="\n//# sourceMappingURL=data:application/json;base64,";i("pushRegister_",function(){return function(e){return!!u&&(this.reduceRegister_(u,e),!0)}});var c,f,m,p=0;ee=function(e){if(e.source){if((e.metadata.integrity||e.metadata.nonce)&&h)return s.call(this,e);try{a(this,e),u=e,!m&&this._nodeRequire&&(m=this._nodeRequire("vm"),f=m.runInThisContext("typeof System !== 'undefined' && System")===this),f?m.runInThisContext(n(e,!0),{filename:e.address+(e.metadata.sourceMap?"!transpiled":"")}):(0,eval)(n(e,!0)),o()}catch(r){throw o(),t(r,"Evaluating "+e.address)}}};var h=!1;if(F&&"undefined"!=typeof document&&document.getElementsByTagName){var g=document.getElementsByTagName("script");$__curScript=g[g.length-1],window.chrome&&window.chrome.extension||navigator.userAgent.match(/^Node\.js/)||(h=!0)}var v}();var te;s(function(e){return function(){e.call(this),this.baseURL=J,this.map={},"undefined"!=typeof $__curScript&&(this.scriptSrc=$__curScript.src),this.warnings=!1,this.defaultJSExtensions=!1,this.pluginFirst=!1,this.loaderErrorStack=!1,this.set("@empty",this.newModule({})),E.call(this,!1,!1)}}),"undefined"==typeof require||"undefined"==typeof process||process.browser||(a.prototype._nodeRequire=require);var re;i("normalize",function(e){return function(e,t,r){var n=P.call(this,e,t);return!this.defaultJSExtensions||r||".js"==n.substr(n.length-3,3)||d(n)||(n+=".js"),n}});var ne="undefined"!=typeof XMLHttpRequest;i("locate",function(e){return function(t){return Promise.resolve(e.call(this,t)).then(function(e){return ne?e.replace(/#/g,"%23"):e})}}),i("fetch",function(){return function(e){return new Promise(function(t,r){G(e.address,e.metadata.authorization,t,r)})}}),i("import",function(e){return function(t,r,n){return r&&r.name&&w.call(this,"SystemJS.import(name, { name: parentName }) is deprecated for SystemJS.import(name, parentName), while importing "+t+" from "+r.name),e.call(this,t,r,n).then(function(e){return e.__useDefault?e.default:e})}}),i("translate",function(e){return function(t){return"detect"==t.metadata.format&&(t.metadata.format=void 0),e.apply(this,arguments)}}),i("instantiate",function(e){return function(e){if("json"==e.metadata.format&&!this.builder){var t=e.metadata.entry=M();t.deps=[],t.execute=function(){try{return JSON.parse(e.source)}catch(t){throw new Error("Invalid JSON file "+e.name)}}}}}),a.prototype.getConfig=function(e){var t={},r=this;for(var n in r)r.hasOwnProperty&&!r.hasOwnProperty(n)||n in a.prototype&&"transpiler"!=n||U.call(["_loader","amdDefine","amdRequire","defined","failed","version","loads"],n)==-1&&(t[n]=r[n]);return t.production=te.production,t};var ae;a.prototype.config=function(e,t){function r(e){for(var t in e)if(e.hasOwnProperty(t))return!0}var n=this;if("loaderErrorStack"in e&&(ae=$__curScript,e.loaderErrorStack?$__curScript=void 0:$__curScript=ae),"warnings"in e&&(n.warnings=e.warnings),e.transpilerRuntime===!1&&(n._loader.loadedTranspilerRuntime=!0),("production"in e||"build"in e)&&E.call(n,!!e.production,!!(e.build||te&&te.build)),!t){var a;if(O(n,e,function(e){a=a||e.baseURL}),a=a||e.baseURL){if(r(n.packages)||r(n.meta)||r(n.depCache)||r(n.bundles)||r(n.packageConfigPaths))throw new TypeError("Incorrect configuration order. The baseURL must be configured with the first SystemJS.config call.");this.baseURL=a,_.call(this)}if(e.paths&&g(n.paths,e.paths),O(n,e,function(e){e.paths&&g(n.paths,e.paths)}),this.warnings)for(var o in n.paths)o.indexOf("*")!=-1&&w.call(n,'Paths configuration "'+o+'" -> "'+n.paths[o]+'" uses wildcards which are being deprecated for simpler trailing "/" folder paths.')}if(e.defaultJSExtensions&&(n.defaultJSExtensions=e.defaultJSExtensions,w.call(n,"The defaultJSExtensions configuration option is deprecated, use packages configuration instead.")),e.pluginFirst&&(n.pluginFirst=e.pluginFirst),e.map){var i="";for(var o in e.map){var s=e.map[o];if("string"!=typeof s){i+=(i.length?", ":"")+'"'+o+'"';var l=n.defaultJSExtensions&&".js"!=o.substr(o.length-3,3),u=n.decanonicalize(o);l&&".js"==u.substr(u.length-3,3)&&(u=u.substr(0,u.length-3));var c="";for(var f in n.packages)u.substr(0,f.length)==f&&(!u[f.length]||"/"==u[f.length])&&c.split("/").length<f.split("/").length&&(c=f);c&&n.packages[c].main&&(u=u.substr(0,u.length-n.packages[c].main.length-1));var f=n.packages[u]=n.packages[u]||{};f.map=s}else n.map[o]=s}i&&w.call(n,"The map configuration for "+i+' uses object submaps, which is deprecated in global map.\nUpdate this to use package contextual map with configs like SystemJS.config({ packages: { "'+o+'": { map: {...} } } }).')}if(e.packageConfigPaths){for(var m=[],p=0;p<e.packageConfigPaths.length;p++){var h=e.packageConfigPaths[p],v=Math.max(h.lastIndexOf("*")+1,h.lastIndexOf("/")),b=P.call(n,h.substr(0,v));m[p]=b+h.substr(v)}n.packageConfigPaths=m}if(e.bundles)for(var o in e.bundles){for(var x=[],p=0;p<e.bundles[o].length;p++){var l=n.defaultJSExtensions&&".js"!=e.bundles[o][p].substr(e.bundles[o][p].length-3,3),S=n.decanonicalize(e.bundles[o][p]);l&&".js"==S.substr(S.length-3,3)&&(S=S.substr(0,S.length-3)),x.push(S)}n.bundles[o]=x}if(e.packages)for(var o in e.packages){if(o.match(/^([^\/]+:)?\/\/$/))throw new TypeError('"'+o+'" is not a valid package name.');var u=P.call(n,o);"/"==u[u.length-1]&&(u=u.substr(0,u.length-1)),y(n,u,e.packages[o],!1)}for(var j in e){var s=e[j];if(U.call(["baseURL","map","packages","bundles","paths","warnings","packageConfigPaths","loaderErrorStack","browserConfig","nodeConfig","devConfig","buildConfig","productionConfig"],j)==-1)if("object"!=typeof s||s instanceof Array)n[j]=s;else{n[j]=n[j]||{};for(var o in s)if("meta"==j&&"*"==o[0])g(n[j][o]=n[j][o]||{},s[o]);else if("meta"==j){var k=P.call(n,o);n.defaultJSExtensions&&".js"!=k.substr(k.length-3,3)&&!d(k)&&(k+=".js"),g(n[j][k]=n[j][k]||{},s[o])}else if("depCache"==j){var l=n.defaultJSExtensions&&".js"!=o.substr(o.length-3,3),u=n.decanonicalize(o);l&&".js"==u.substr(u.length-3,3)&&(u=u.substr(0,u.length-3)),n[j][u]=[].concat(s[o])}else n[j][o]=s[o]}}O(n,e,function(e){n.config(e,!0)})},function(){function e(e,t){var r,n,a=0;for(var o in e.packages)t.substr(0,o.length)!==o||t.length!==o.length&&"/"!==t[o.length]||(n=o.split("/").length,n>a&&(r=o,a=n));return r}function t(e,t,r,n,a){if(!n||"/"==n[n.length-1]||a||t.defaultExtension===!1)return n;var o=!1;if(t.meta&&p(t.meta,n,function(e,t,r){if(0==r||e.lastIndexOf("*")!=e.length-1)return o=!0}),!o&&e.meta&&p(e.meta,r+"/"+n,function(e,t,r){if(0==r||e.lastIndexOf("*")!=e.length-1)return o=!0}),o)return n;var i="."+(t.defaultExtension||"js");return n.substr(n.length-i.length)!=i?n+i:n}function r(e,r,n,a,i){if(!a){if(!r.main)return n+(e.defaultJSExtensions?".js":"");a="./"==r.main.substr(0,2)?r.main.substr(2):r.main}if(r.map){var s="./"+a,l=S(r.map,s);if(l||(s="./"+t(e,r,n,a,i),s!="./"+a&&(l=S(r.map,s))),l){var u=o(e,r,n,l,s,i);if(u)return u}}return n+"/"+t(e,r,n,a,i)}function n(e,t,r,n){if("."==e)throw new Error("Package "+r+' has a map entry for "." which is not permitted.');return!(t.substr(0,e.length)==e&&n.length>e.length)}function o(e,r,a,o,i,s){"/"==i[i.length-1]&&(i=i.substr(0,i.length-1));var l=r.map[o];if("object"==typeof l)throw new Error("Synchronous conditional normalization not supported sync normalizing "+o+" in "+a);if(n(o,l,a,i)&&"string"==typeof l){if("."==l)l=a;else if("./"==l.substr(0,2))return a+"/"+t(e,r,a,l.substr(2)+i.substr(o.length),s);return e.normalizeSync(l+i.substr(o.length),a+"/")}}function l(e,r,n,a,o){if(!a){if(!r.main)return Promise.resolve(n+(e.defaultJSExtensions?".js":""));a="./"==r.main.substr(0,2)?r.main.substr(2):r.main}var i,s;return r.map&&(i="./"+a,s=S(r.map,i),s||(i="./"+t(e,r,n,a,o),i!="./"+a&&(s=S(r.map,i)))),(s?d(e,r,n,s,i,o):Promise.resolve()).then(function(i){return i?Promise.resolve(i):Promise.resolve(n+"/"+t(e,r,n,a,o))})}function u(e,r,n,a,o,i,s){if("."==o)o=n;else if("./"==o.substr(0,2))return Promise.resolve(n+"/"+t(e,r,n,o.substr(2)+i.substr(a.length),s)).then(function(t){return C.call(e,t,n+"/")});return e.normalize(o+i.substr(a.length),n+"/")}function d(e,t,r,a,o,i){"/"==o[o.length-1]&&(o=o.substr(0,o.length-1));var s=t.map[a];if("string"==typeof s)return n(a,s,r,o)?u(e,t,r,a,s,o,i):Promise.resolve();if(e.builder)return Promise.resolve(r+"/#:"+o);var l=[],d=[];for(var c in s){var f=z(c);d.push({condition:f,map:s[c]}),l.push(e.import(f.module,r))}return Promise.all(l).then(function(e){for(var t=0;t<d.length;t++){var r=d[t].condition,n=x(r.prop,e[t]);if(!r.negate&&n||r.negate&&!n)return d[t].map}}).then(function(s){if(s){if(!n(a,s,r,o))return;return u(e,t,r,a,s,o,i)}})}function c(e){var t=e.lastIndexOf("*"),r=Math.max(t+1,e.lastIndexOf("/"));return{length:r,regEx:new RegExp("^("+e.substr(0,r).replace(/[.+?^${}()|[\]\\]/g,"\\$&").replace(/\*/g,"[^\\/]+")+")(\\/|$)"),wildcard:t!=-1}}function f(e,t){for(var r,n,a=!1,o=0;o<e.packageConfigPaths.length;o++){var i=e.packageConfigPaths[o],s=h[i]||(h[i]=c(i));if(!(t.length<s.length)){var l=t.match(s.regEx);!l||r&&(a&&s.wildcard||!(r.length<l[1].length))||(r=l[1],a=!s.wildcard,n=r+i.substr(s.length))}}if(r)return{packageName:r,configPath:n}}function m(e,t,r){var n=e.pluginLoader||e;return(n.meta[r]=n.meta[r]||{}).format="json",n.meta[r].loader=null,n.load(r).then(function(){var a=n.get(r).default;return a.systemjs&&(a=a.systemjs),a.modules&&(a.meta=a.modules,w.call(e,"Package config file "+r+' is configured with "modules", which is deprecated as it has been renamed to "meta".')),y(e,t,a,!0)})}function p(e,t,r){var n;for(var a in e){var o="./"==a.substr(0,2)?"./":"";if(o&&(a=a.substr(2)),n=a.indexOf("*"),n!==-1&&a.substr(0,n)==t.substr(0,n)&&a.substr(n+1)==t.substr(t.length-a.length+n+1)&&r(a,e[o+a],a.split("/").length))return}var i=e[t]&&e.hasOwnProperty&&e.hasOwnProperty(t)?e[t]:e["./"+t];i&&r(i,i,0)}s(function(e){return function(){e.call(this),this.packages={},this.packageConfigPaths=[]}}),a.prototype.normalizeSync=a.prototype.decanonicalize=a.prototype.normalize,i("decanonicalize",function(t){return function(r,n){if(this.builder)return t.call(this,r,n,!0);var a=t.call(this,r,n,!1);if(!this.defaultJSExtensions)return a;var o=e(this,a),i=this.packages[o],s=i&&i.defaultExtension;return void 0==s&&i&&i.meta&&p(i.meta,a.substr(o),function(e,t,r){if(0==r||e.lastIndexOf("*")!=e.length-1)return s=!1,!0}),(s===!1||s&&".js"!=s)&&".js"!=r.substr(r.length-3,3)&&".js"==a.substr(a.length-3,3)&&(a=a.substr(0,a.length-3)),a}}),i("normalizeSync",function(t){return function(n,a,i){var s=this;if(i=i===!0,a)var l=e(s,a)||s.defaultJSExtensions&&".js"==a.substr(a.length-3,3)&&e(s,a.substr(0,a.length-3));
+var u=l&&s.packages[l];if(u&&"."!=n[0]){var d=u.map,c=d&&S(d,n);if(c&&"string"==typeof d[c]){var m=o(s,u,l,c,n,i);if(m)return m}}var p=s.defaultJSExtensions&&".js"!=n.substr(n.length-3,3),h=t.call(s,n,a,!1);p&&".js"!=h.substr(h.length-3,3)&&(p=!1),p&&(h=h.substr(0,h.length-3));var g=f(s,h),v=g&&g.packageName||e(s,h);if(!v)return h+(p?".js":"");var b=h.substr(v.length+1);return r(s,s.packages[v]||{},v,b,i)}}),i("normalize",function(t){return function(r,n,a){var o=this;return a=a===!0,Promise.resolve().then(function(){if(n)var t=e(o,n)||o.defaultJSExtensions&&".js"==n.substr(n.length-3,3)&&e(o,n.substr(0,n.length-3));var i=t&&o.packages[t];if(i&&"./"!=r.substr(0,2)){var s=i.map,l=s&&S(s,r);if(l)return d(o,i,t,l,r,a)}return Promise.resolve()}).then(function(i){if(i)return i;var s=o.defaultJSExtensions&&".js"!=r.substr(r.length-3,3),u=t.call(o,r,n,!1);s&&".js"!=u.substr(u.length-3,3)&&(s=!1),s&&(u=u.substr(0,u.length-3));var d=f(o,u),c=d&&d.packageName||e(o,u);if(!c)return Promise.resolve(u+(s?".js":""));var p=o.packages[c],h=p&&(p.configured||!d);return(h?Promise.resolve(p):m(o,c,d.configPath)).then(function(e){var t=u.substr(c.length+1);return l(o,e,c,t,a)})})}});var h={};i("locate",function(t){return function(r){var n=this;return Promise.resolve(t.call(this,r)).then(function(t){var a=e(n,r.name);if(a){var o=n.packages[a],i=r.name.substr(a.length+1),s={};if(o.meta){var l=0;p(o.meta,i,function(e,t,r){r>l&&(l=r),v(s,t,r&&l>r)}),v(r.metadata,s)}o.format&&!r.metadata.loader&&(r.metadata.format=r.metadata.format||o.format)}return t})}})}(),function(){function t(){if(s&&"interactive"===s.script.readyState)return s.load;for(var e=0;e<d.length;e++)if("interactive"==d[e].script.readyState)return s=d[e],s.load}function r(e,t){return new Promise(function(e,r){t.metadata.integrity&&r(new Error("Subresource integrity checking is not supported in web workers.")),l=t;try{importScripts(t.address)}catch(e){l=null,r(e)}l=null,t.metadata.entry||r(new Error(t.address+" did not call System.register or AMD define. If loading a global, ensure the meta format is set to global.")),e("")})}if("undefined"!=typeof document)var n=document.getElementsByTagName("head")[0];var a,o,s,l=null,u=n&&function(){var e=document.createElement("script"),t="undefined"!=typeof opera&&"[object Opera]"===opera.toString();return e.attachEvent&&!(e.attachEvent.toString&&e.attachEvent.toString().indexOf("[native code")<0)&&!t}(),d=[],c=0,f=[];i("pushRegister_",function(e){return function(r){return!e.call(this,r)&&(l?this.reduceRegister_(l,r):u?this.reduceRegister_(t(),r):c?f.push(r):this.reduceRegister_(null,r),!0)}}),i("fetch",function(t){return function(i){var l=this;return"json"!=i.metadata.format&&i.metadata.scriptLoad&&(F||A)?A?r(l,i):new Promise(function(t,r){function m(e){if(!g.readyState||"loaded"==g.readyState||"complete"==g.readyState){if(c--,i.metadata.entry||f.length){if(!u){for(var n=0;n<f.length;n++)l.reduceRegister_(i,f[n]);f=[]}}else l.reduceRegister_(i);h(),i.metadata.entry||i.metadata.bundle||r(new Error(i.name+" did not call System.register or AMD define. If loading a global module configure the global name via the meta exports property for script injection support.")),t("")}}function p(e){h(),r(new Error("Unable to load script "+i.address))}function h(){if(e.System=a,e.require=o,g.detachEvent){g.detachEvent("onreadystatechange",m);for(var t=0;t<d.length;t++)d[t].script==g&&(s&&s.script==g&&(s=null),d.splice(t,1))}else g.removeEventListener("load",m,!1),g.removeEventListener("error",p,!1);n.removeChild(g)}var g=document.createElement("script");g.async=!0,i.metadata.crossOrigin&&(g.crossOrigin=i.metadata.crossOrigin),i.metadata.integrity&&g.setAttribute("integrity",i.metadata.integrity),u?(g.attachEvent("onreadystatechange",m),d.push({script:g,load:i})):(g.addEventListener("load",m,!1),g.addEventListener("error",p,!1)),c++,a=e.System,o=e.require,g.src=i.address,n.appendChild(g)}):t.call(this,i)}})}();var oe=/^(\s*\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\s*\/\/[^\n]*|\s*"[^"]+"\s*;?|\s*'[^']+'\s*;?)*\s*/;!function(){function t(e,r,n){if(n[e.groupIndex]=n[e.groupIndex]||[],U.call(n[e.groupIndex],e)==-1){n[e.groupIndex].push(e);for(var a=0,o=e.normalizedDeps.length;a<o;a++){var i=e.normalizedDeps[a],s=r.defined[i];if(s&&!s.evaluated){var l=e.groupIndex+(s.declarative!=e.declarative);if(null===s.groupIndex||s.groupIndex<l){if(null!==s.groupIndex&&(n[s.groupIndex].splice(U.call(n[s.groupIndex],s),1),0==n[s.groupIndex].length))throw new Error("Mixed dependency cycle detected");s.groupIndex=l}t(s,r,n)}}}}function n(e,r,n){if(!r.module){r.groupIndex=0;var a=[];t(r,n,a);for(var o=!!r.declarative==a.length%2,i=a.length-1;i>=0;i--){for(var s=a[i],l=0;l<s.length;l++){var d=s[l];o?u(d,n):c(d,n)}o=!o}}}function o(){}function l(e,t){return t[e]||(t[e]={name:e,dependencies:[],exports:new o,importers:[]})}function u(t,r){if(!t.module){var n=r._loader.moduleRecords,a=t.module=l(t.name,n),o=t.module.exports,i=t.declare.call(e,function(e,t){if(a.locked=!0,"object"==typeof e)for(var r in e)o[r]=e[r];else o[e]=t;for(var n=0,i=a.importers.length;n<i;n++){var s=a.importers[n];if(!s.locked){var l=U.call(s.dependencies,a),u=s.setters[l];u&&u(o)}}return a.locked=!1,t},{id:t.name});if("function"==typeof i&&(i={setters:[],execute:i}),i=i||{setters:[],execute:function(){}},a.setters=i.setters,a.execute=i.execute,!a.setters||!a.execute)throw new TypeError("Invalid System.register form for "+t.name);for(var s=0,d=t.normalizedDeps.length;s<d;s++){var c,f=t.normalizedDeps[s],m=r.defined[f],p=n[f];p?c=p.exports:m&&!m.declarative?c=m.esModule:m?(u(m,r),p=m.module,c=p.exports):c=r.get(f),p&&p.importers?(p.importers.push(a),a.dependencies.push(p)):a.dependencies.push(null);for(var h=t.originalIndices[s],g=0,v=h.length;g<v;++g){var b=h[g];a.setters[b]&&a.setters[b](c)}}}}function d(e,t){var r,n=t.defined[e];if(n)n.declarative?f(e,n,[],t):n.evaluated||c(n,t),r=n.module.exports;else if(r=t.get(e),!r)throw new Error("Unable to load dependency "+e+".");return(!n||n.declarative)&&r&&r.__useDefault?r.default:r}function c(t,n){if(!t.module){var a={},o=t.module={exports:a,id:t.name};if(!t.executingRequire)for(var i=0,s=t.normalizedDeps.length;i<s;i++){var l=t.normalizedDeps[i],u=n.defined[l];u&&c(u,n)}t.evaluated=!0;var f=t.execute.call(e,function(e){for(var r=0,a=t.deps.length;r<a;r++)if(t.deps[r]==e)return d(t.normalizedDeps[r],n);var o=n.normalizeSync(e,t.name);if(U.call(t.normalizedDeps,o)!=-1)return d(o,n);throw new Error("Module "+e+" not declared as a dependency of "+t.name)},a,o);void 0!==f&&(o.exports=f),a=o.exports,a&&(a.__esModule||a instanceof r)?t.esModule=n.newModule(a):t.esmExports&&a!==e?t.esModule=n.newModule(p(a)):t.esModule=n.newModule({default:a,__useDefault:!0})}}function f(t,r,n,a){if(r&&!r.evaluated&&r.declarative){n.push(t);for(var o=0,i=r.normalizedDeps.length;o<i;o++){var s=r.normalizedDeps[o];U.call(n,s)==-1&&(a.defined[s]?f(s,a.defined[s],n,a):a.get(s))}r.evaluated||(r.evaluated=!0,r.module.execute.call(e))}}a.prototype.register=function(e,t,r){if("string"!=typeof e&&(r=t,t=e,e=null),"boolean"==typeof r)return this.registerDynamic.apply(this,arguments);var n=M();n.name=e&&(this.decanonicalize||this.normalize).call(this,e),n.declarative=!0,n.deps=t,n.declare=r,this.pushRegister_({amd:!1,entry:n})},a.prototype.registerDynamic=function(e,t,r,n){"string"!=typeof e&&(n=r,r=t,t=e,e=null);var a=M();a.name=e&&(this.decanonicalize||this.normalize).call(this,e),a.deps=t,a.execute=n,a.executingRequire=r,this.pushRegister_({amd:!1,entry:a})},i("reduceRegister_",function(){return function(e,t){if(t){var r=t.entry,n=e&&e.metadata;if(r.name&&(r.name in this.defined||(this.defined[r.name]=r),n&&(n.bundle=!0)),!r.name||e&&!n.entry&&r.name==e.name){if(!n)throw new TypeError("Invalid System.register call. Anonymous System.register calls can only be made by modules loaded by SystemJS.import and not via script tags.");if(n.entry)throw"register"==n.format?new Error("Multiple anonymous System.register calls in module "+e.name+". If loading a bundle, ensure all the System.register calls are named."):new Error("Module "+e.name+" interpreted as "+n.format+" module format, but called System.register.");n.format||(n.format="register"),n.entry=r}}}}),s(function(e){return function(){e.call(this),this.defined={},this._loader.moduleRecords={}}}),q(o,"toString",{value:function(){return"Module"}}),i("delete",function(e){return function(t){return delete this._loader.moduleRecords[t],delete this.defined[t],e.call(this,t)}}),i("fetch",function(e){return function(t){return this.defined[t.name]?(t.metadata.format="defined",""):(t.metadata.deps=t.metadata.deps||[],e.call(this,t))}}),i("translate",function(e){return function(t){return t.metadata.deps=t.metadata.deps||[],Promise.resolve(e.apply(this,arguments)).then(function(e){return("register"==t.metadata.format||!t.metadata.format&&k(t.source))&&(t.metadata.format="register"),e})}}),i("load",function(e){return function(t){var r=this,a=r.defined[t];return!a||a.deps.length?e.apply(this,arguments):(a.originalIndices=a.normalizedDeps=[],n(t,a,r),f(t,a,[],r),a.esModule||(a.esModule=r.newModule(a.module.exports)),r.trace||(r.defined[t]=void 0),r.set(t,a.esModule),Promise.resolve())}}),i("instantiate",function(e){return function(t){"detect"==t.metadata.format&&(t.metadata.format=void 0),e.call(this,t);var r,a=this;if(a.defined[t.name])r=a.defined[t.name],r.declarative||(r.deps=r.deps.concat(t.metadata.deps)),r.deps=r.deps.concat(t.metadata.deps);else if(t.metadata.entry)r=t.metadata.entry,r.deps=r.deps.concat(t.metadata.deps);else if(!(a.builder&&t.metadata.bundle||"register"!=t.metadata.format&&"esm"!=t.metadata.format&&"es6"!=t.metadata.format)){if("undefined"!=typeof ee&&ee.call(a,t),!t.metadata.entry&&!t.metadata.bundle)throw new Error(t.name+" detected as "+t.metadata.format+" but didn't execute.");r=t.metadata.entry,r&&t.metadata.deps&&(r.deps=r.deps.concat(t.metadata.deps))}r||(r=M(),r.deps=t.metadata.deps,r.execute=function(){}),a.defined[t.name]=r;var o=m(r.deps);r.deps=o.names,r.originalIndices=o.indices,r.name=t.name,r.esmExports=t.metadata.esmExports!==!1;for(var i=[],s=0,l=r.deps.length;s<l;s++)i.push(Promise.resolve(a.normalize(r.deps[s],t.name)));return Promise.all(i).then(function(e){return r.normalizedDeps=e,{deps:r.deps,execute:function(){return n(t.name,r,a),f(t.name,r,[],a),r.esModule||(r.esModule=a.newModule(r.module.exports)),a.trace||(a.defined[t.name]=void 0),r.esModule}}})}})}(),function(){var r=/(^\s*|[}\);\n]\s*)(import\s*(['"]|(\*\s+as\s+)?[^"'\(\)\n;]+\s*from\s*['"]|\{)|export\s+\*\s+from\s+["']|export\s*(\{|default|function|class|var|const|let|async\s+function))/,n=/\$traceurRuntime\s*\./,a=/babelHelpers\s*\./;i("translate",function(o){return function(i){var s=this,l=arguments;return o.apply(s,l).then(function(o){if("esm"==i.metadata.format||"es6"==i.metadata.format||!i.metadata.format&&o.match(r)){if("es6"==i.metadata.format&&w.call(s,"Module "+i.name+' has metadata setting its format to "es6", which is deprecated.\nThis should be updated to "esm".'),i.metadata.format="esm",i.metadata.deps){for(var u="",d=0;d<i.metadata.deps.length;d++)u+='import "'+i.metadata.deps[d]+'"; ';i.source=u+o}if(s.transpiler===!1){if(s.builder)return o;throw new TypeError("Unable to dynamically transpile ES module as SystemJS.transpiler set to false.")}return s._loader.loadedTranspiler=s._loader.loadedTranspiler||!1,s.pluginLoader&&(s.pluginLoader._loader.loadedTranspiler=s._loader.loadedTranspiler||!1),(s._loader.transpilerPromise||(s._loader.transpilerPromise=Promise.resolve(e["typescript"==s.transpiler?"ts":s.transpiler]||(s.pluginLoader||s).import(s.transpiler)))).then(function(e){return s._loader.loadedTranspilerRuntime=!0,e.translate?e==i.metadata.loaderModule?i.source:("string"==typeof i.metadata.sourceMap&&(i.metadata.sourceMap=JSON.parse(i.metadata.sourceMap)),Promise.resolve(e.translate.apply(s,l)).then(function(e){var t=i.metadata.sourceMap;if(t&&"object"==typeof t){var r=i.address.split("!")[0];t.file&&t.file!=i.address||(t.file=r+"!transpiled"),(!t.sources||t.sources.length<=1&&(!t.sources[0]||t.sources[0]==i.address))&&(t.sources=[r])}return"esm"==i.metadata.format&&!s.builder&&k(e)&&(i.metadata.format="register"),e})):(s.builder&&(i.metadata.originalSource=i.source),W.call(s,i).then(function(e){return i.metadata.sourceMap=void 0,e}))},function(e){throw t(e,"Unable to load transpiler to transpile "+i.name)})}if(s.transpiler===!1)return o;if(s._loader.loadedTranspiler!==!1||"traceur"!=s.transpiler&&"typescript"!=s.transpiler&&"babel"!=s.transpiler||i.name!=s.normalizeSync(s.transpiler)||(o.length>100&&!i.metadata.format&&(i.metadata.format="global","traceur"===s.transpiler&&(i.metadata.exports="traceur"),"typescript"===s.transpiler&&(i.metadata.exports="ts")),s._loader.loadedTranspiler=!0),s._loader.loadedTranspilerRuntime===!1&&(i.name!=s.normalizeSync("traceur-runtime")&&i.name!=s.normalizeSync("babel/external-helpers*")||(o.length>100&&(i.metadata.format=i.metadata.format||"global"),s._loader.loadedTranspilerRuntime=!0)),("register"==i.metadata.format||i.metadata.bundle)&&s._loader.loadedTranspilerRuntime!==!0){if("traceur"==s.transpiler&&!e.$traceurRuntime&&i.source.match(n))return s._loader.loadedTranspilerRuntime=s._loader.loadedTranspilerRuntime||!1,s.import("traceur-runtime").then(function(){return o});if("babel"==s.transpiler&&!e.babelHelpers&&i.source.match(a))return s._loader.loadedTranspilerRuntime=s._loader.loadedTranspilerRuntime||!1,s.import("babel/external-helpers").then(function(){return o})}return o})}})}();var ie="undefined"!=typeof self?"self":"global";i("fetch",function(e){return function(t){return t.metadata.exports&&!t.metadata.format&&(t.metadata.format="global"),e.call(this,t)}}),i("instantiate",function(e){return function(t){var r=this;if(t.metadata.format||(t.metadata.format="global"),"global"==t.metadata.format&&!t.metadata.entry){var n=M();t.metadata.entry=n,n.deps=[];for(var a in t.metadata.globals){var o=t.metadata.globals[a];o&&n.deps.push(o)}n.execute=function(e,n,a){var o;if(t.metadata.globals){o={};for(var i in t.metadata.globals)t.metadata.globals[i]&&(o[i]=e(t.metadata.globals[i]))}var s=t.metadata.exports;s&&(t.source+="\n"+ie+'["'+s+'"] = '+s+";");var l=r.get("@@global-helpers").prepareGlobal(a.id,s,o,!!t.metadata.encapsulateGlobal);return ee.call(r,t),l()}}return e.call(this,t)}}),i("reduceRegister_",function(e){return function(t,r){if(r||!t.metadata.exports&&(!A||"global"!=t.metadata.format))return e.call(this,t,r);t.metadata.format="global";var n=t.metadata.entry=M();n.deps=t.metadata.deps;var a=R(t.metadata.exports);n.execute=function(){return a}}}),s(function(t){return function(){function r(t){if(Object.keys)Object.keys(e).forEach(t);else for(var r in e)i.call(e,r)&&t(r)}function n(t){r(function(r){if(U.call(s,r)==-1){try{var n=e[r]}catch(e){s.push(r)}t(r,n)}})}var a=this;t.call(a);var o,i=Object.prototype.hasOwnProperty,s=["_g","sessionStorage","localStorage","clipboardData","frames","frameElement","external","mozAnimationStartTime","webkitStorageInfo","webkitIndexedDB","mozInnerScreenY","mozInnerScreenX"];a.set("@@global-helpers",a.newModule({prepareGlobal:function(t,r,a,i){var s=e.define;e.define=void 0;var l;if(a){l={};for(var u in a)l[u]=e[u],e[u]=a[u]}return r||(o={},n(function(e,t){o[e]=t})),function(){var t,a=r?R(r):{},u=!!r;if(r&&!i||n(function(n,s){o[n]!==s&&"undefined"!=typeof s&&(i&&(e[n]=void 0),r||(a[n]=s,"undefined"!=typeof t?u||t===s||(u=!0):t=s))}),a=u?a:t,l)for(var d in l)e[d]=l[d];return e.define=s,a}}}))}}),function(){function t(e){function t(e,t){for(var r=0;r<e.length;r++)if(e[r][0]<t.index&&e[r][1]>t.index)return!0;return!1}n.lastIndex=a.lastIndex=o.lastIndex=0;var r,i=[],s=[],l=[];if(e.length/e.split("\n").length<200){for(;r=o.exec(e);)s.push([r.index,r.index+r[0].length]);for(;r=a.exec(e);)t(s,r)||l.push([r.index+r[1].length,r.index+r[0].length-1])}for(;r=n.exec(e);)if(!t(s,r)&&!t(l,r)){var u=r[1].substr(1,r[1].length-2);if(u.match(/"|'/))continue;"/"==u[u.length-1]&&(u=u.substr(0,u.length-1)),i.push(u)}return i}var r=/(?:^\uFEFF?|[^$_a-zA-Z\xA0-\uFFFF.])(exports\s*(\[['"]|\.)|module(\.exports|\['exports'\]|\["exports"\])\s*(\[['"]|[=,\.]))/,n=/(?:^\uFEFF?|[^$_a-zA-Z\xA0-\uFFFF."'])require\s*\(\s*("[^"\\]*(?:\\.[^"\\]*)*"|'[^'\\]*(?:\\.[^'\\]*)*')\s*\)/g,a=/(^|[^\\])(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm,o=/("[^"\\\n\r]*(\\.[^"\\\n\r]*)*"|'[^'\\\n\r]*(\\.[^'\\\n\r]*)*')/g,s=/^\#\!.*/;i("instantiate",function(a){return function(o){var i=this;if(o.metadata.format||(r.lastIndex=0,n.lastIndex=0,(n.exec(o.source)||r.exec(o.source))&&(o.metadata.format="cjs")),"cjs"==o.metadata.format){var l=o.metadata.deps,u=o.metadata.cjsRequireDetection===!1?[]:t(o.source);for(var d in o.metadata.globals)o.metadata.globals[d]&&u.push(o.metadata.globals[d]);var c=M();o.metadata.entry=c,c.deps=u,c.executingRequire=!0,c.execute=function(t,r,n){function a(e){return"/"==e[e.length-1]&&(e=e.substr(0,e.length-1)),t.apply(this,arguments)}if(a.resolve=function(e){return i.get("@@cjs-helpers").requireResolve(e,n.id)},n.paths=[],n.require=t,!o.metadata.cjsDeferDepsExecute)for(var u=0;u<l.length;u++)a(l[u]);var d=i.get("@@cjs-helpers").getPathVars(n.id),c={exports:r,args:[a,r,n,d.filename,d.dirname,e,e]},f="(function(require, exports, module, __filename, __dirname, global, GLOBAL";if(o.metadata.globals)for(var m in o.metadata.globals)c.args.push(a(o.metadata.globals[m])),f+=", "+m;var p=e.define;e.define=void 0,e.__cjsWrapper=c,o.source=f+") {"+o.source.replace(s,"")+"\n}).apply(__cjsWrapper.exports, __cjsWrapper.args);",ee.call(i,o),e.__cjsWrapper=void 0,e.define=p}}return a.call(i,o)}})}(),s(function(e){return function(){function t(e){return"file:///"==e.substr(0,8)?e.substr(7+!!D):n&&e.substr(0,n.length)==n?e.substr(n.length):e}var r=this;if(e.call(r),"undefined"!=typeof window&&"undefined"!=typeof document&&window.location)var n=location.protocol+"//"+location.hostname+(location.port?":"+location.port:"");r.set("@@cjs-helpers",r.newModule({requireResolve:function(e,n){return t(r.normalizeSync(e,n))},getPathVars:function(e){var r,n=e.lastIndexOf("!");r=n!=-1?e.substr(0,n):e;var a=r.split("/");return a.pop(),a=a.join("/"),{filename:t(r),dirname:t(a)}}}))}}),i("fetch",function(t){return function(r){return r.metadata.scriptLoad&&F&&(e.define=this.amdDefine),t.call(this,r)}}),s(function(t){return function(){function r(e,t){e=e.replace(s,"");var r=e.match(d),n=(r[1].split(",")[t]||"require").replace(c,""),a=f[n]||(f[n]=new RegExp(l+n+u,"g"));a.lastIndex=0;for(var o,i=[];o=a.exec(e);)i.push(o[2]||o[3]);return i}function n(e,t,r,a){if("object"==typeof e&&!(e instanceof Array))return n.apply(null,Array.prototype.splice.call(arguments,1,arguments.length-1));if("string"==typeof e&&"function"==typeof t&&(e=[e]),!(e instanceof Array)){if("string"==typeof e){var i=o.defaultJSExtensions&&".js"!=e.substr(e.length-3,3),s=o.decanonicalize(e,a);i&&".js"==s.substr(s.length-3,3)&&(s=s.substr(0,s.length-3));var l=o.get(s);if(!l)throw new Error('Module not already loaded loading "'+e+'" as '+s+(a?' from "'+a+'".':"."));return l.__useDefault?l.default:l}throw new TypeError("Invalid require")}for(var u=[],d=0;d<e.length;d++)u.push(o.import(e[d],a));Promise.all(u).then(function(e){t&&t.apply(null,e)},r)}function a(t,a,i){function s(t,r,s){function c(e,r,a){return"string"==typeof e&&"function"!=typeof r?t(e):n.call(o,e,r,a,s.id)}for(var f=[],m=0;m<a.length;m++)f.push(t(a[m]));s.uri=s.id,s.config=function(){},d!=-1&&f.splice(d,0,s),u!=-1&&f.splice(u,0,r),l!=-1&&(c.toUrl=function(e){var t=o.defaultJSExtensions&&".js"!=e.substr(e.length-3,3),r=o.decanonicalize(e,s.id);return t&&".js"==r.substr(r.length-3,3)&&(r=r.substr(0,r.length-3)),r},f.splice(l,0,c));var p=e.require;e.require=n;var h=i.apply(u==-1?e:r,f);if(e.require=p,"undefined"==typeof h&&s&&(h=s.exports),"undefined"!=typeof h)return h}"string"!=typeof t&&(i=a,a=t,t=null),a instanceof Array||(i=a,a=["require","exports","module"].splice(0,i.length)),"function"!=typeof i&&(i=function(e){return function(){return e}}(i)),void 0===a[a.length-1]&&a.pop();var l,u,d;(l=U.call(a,"require"))!=-1&&(a.splice(l,1),t||(a=a.concat(r(i.toString(),l)))),(u=U.call(a,"exports"))!=-1&&a.splice(u,1),(d=U.call(a,"module"))!=-1&&a.splice(d,1);var c=M();c.name=t&&(o.decanonicalize||o.normalize).call(o,t),c.deps=a,c.execute=s,o.pushRegister_({amd:!0,entry:c})}var o=this;t.call(this);var s=/(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm,l="(?:^|[^$_a-zA-Z\\xA0-\\uFFFF.])",u="\\s*\\(\\s*(\"([^\"]+)\"|'([^']+)')\\s*\\)",d=/\(([^\)]*)\)/,c=/^\s+|\s+$/g,f={};a.amd={},i("reduceRegister_",function(e){return function(t,r){if(!r||!r.amd)return e.call(this,t,r);var n=t&&t.metadata,a=r.entry;if(n)if(n.format&&"detect"!=n.format){if(!a.name&&"amd"!=n.format)throw new Error("AMD define called while executing "+n.format+" module "+t.name)}else n.format="amd";if(a.name)n&&(n.entry||n.bundle?n.entry&&n.entry.name&&n.entry.name!=t.name&&(n.entry=void 0):n.entry=a,n.bundle=!0),a.name in this.defined||(this.defined[a.name]=a);else{if(!n)throw new TypeError("Unexpected anonymous AMD define.");if(n.entry&&!n.entry.name)throw new Error("Multiple anonymous defines in module "+t.name);n.entry=a}}}),o.amdDefine=a,o.amdRequire=n}}),function(){var t=/(?:^\uFEFF?|[^$_a-zA-Z\xA0-\uFFFF.])define\s*\(\s*("[^"]+"\s*,\s*|'[^']+'\s*,\s*)?\s*(\[(\s*(("[^"]+"|'[^']+')\s*,|\/\/.*\r?\n|\/\*(.|\s)*?\*\/))*(\s*("[^"]+"|'[^']+')\s*,?)?(\s*(\/\/.*\r?\n|\/\*(.|\s)*?\*\/))*\s*\]|function\s*|{|[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*\))/;i("instantiate",function(r){return function(n){var a=this;if("amd"==n.metadata.format||!n.metadata.format&&n.source.match(t))if(n.metadata.format="amd",a.builder||a.execute===!1)n.metadata.execute=function(){return n.metadata.builderExecute.apply(this,arguments)};else{var o=e.define;e.define=this.amdDefine;try{ee.call(a,n)}finally{e.define=o}if(!n.metadata.entry&&!n.metadata.bundle)throw new TypeError("AMD module "+n.name+" did not define")}return r.call(a,n)}})}(),function(){function e(e,t){if(t){var r;if(e.pluginFirst){if((r=t.lastIndexOf("!"))!=-1)return t.substr(r+1)}else if((r=t.indexOf("!"))!=-1)return t.substr(0,r);return t}}function t(e,t){var r,n,a=t.lastIndexOf("!");if(a!=-1)return e.pluginFirst?(r=t.substr(a+1),n=t.substr(0,a)):(r=t.substr(0,a),n=t.substr(a+1)||r.substr(r.lastIndexOf(".")+1)),{argument:r,plugin:n}}function r(e,t,r,n){return n&&".js"==t.substr(t.length-3,3)&&(t=t.substr(0,t.length-3)),e.pluginFirst?r+"!"+t:t+"!"+r}function n(e,t){return e.defaultJSExtensions&&".js"!=t.substr(t.length-3,3)}function a(a){return function(o,i,s){var l=this,u=t(l,o);if(i=e(this,i),!u)return a.call(this,o,i,s);var d=l.normalizeSync(u.argument,i,!0),c=l.normalizeSync(u.plugin,i,!0);return r(l,d,c,n(l,u.argument))}}i("decanonicalize",a),i("normalizeSync",a),i("normalize",function(a){return function(o,i,s){var l=this;i=e(this,i);var u=t(l,o);return u?Promise.all([l.normalize(u.argument,i,!0),l.normalize(u.plugin,i,!1)]).then(function(e){return r(l,e[0],e[1],n(l,u.argument))}):a.call(l,o,i,s)}}),i("locate",function(e){return function(t){var r,n=this,a=t.name;return n.pluginFirst?(r=a.indexOf("!"))!=-1&&(t.metadata.loader=a.substr(0,r),t.name=a.substr(r+1)):(r=a.lastIndexOf("!"))!=-1&&(t.metadata.loader=a.substr(r+1),t.name=a.substr(0,r)),e.call(n,t).then(function(e){return r==-1&&t.metadata.loader?(n.pluginLoader||n).normalize(t.metadata.loader,t.name).then(function(r){return t.metadata.loader=r,e}):e}).then(function(e){var r=t.metadata.loader;if(!r)return e;if(t.name==r)throw new Error("Plugin "+r+" cannot load itself, make sure it is excluded from any wildcard meta configuration via a custom loader: false rule.");if(n.defined&&n.defined[a])return e;var o=n.pluginLoader||n;return o.import(r).then(function(r){return t.metadata.loaderModule=r,t.address=e,r.locate?r.locate.call(n,t):e})})}}),i("fetch",function(e){return function(t){var r=this;return t.metadata.loaderModule&&t.metadata.loaderModule.fetch&&"defined"!=t.metadata.format?(t.metadata.scriptLoad=!1,t.metadata.loaderModule.fetch.call(r,t,function(t){return e.call(r,t)})):e.call(r,t)}}),i("translate",function(e){return function(t){var r=this,n=arguments;return t.metadata.loaderModule&&t.metadata.loaderModule.translate&&"defined"!=t.metadata.format?Promise.resolve(t.metadata.loaderModule.translate.apply(r,n)).then(function(a){var o=t.metadata.sourceMap;if(o){if("object"!=typeof o)throw new Error("load.metadata.sourceMap must be set to an object.");var i=t.address.split("!")[0];o.file&&o.file!=t.address||(o.file=i+"!transpiled"),(!o.sources||o.sources.length<=1&&(!o.sources[0]||o.sources[0]==t.address))&&(o.sources=[i])}return"string"==typeof a?t.source=a:w.call(this,"Plugin "+t.metadata.loader+" should return the source in translate, instead of setting load.source directly. This support will be deprecated."),e.apply(r,n)}):e.apply(r,n)}}),i("instantiate",function(e){return function(t){var r=this,n=!1;return t.metadata.loaderModule&&t.metadata.loaderModule.instantiate&&!r.builder&&"defined"!=t.metadata.format?Promise.resolve(t.metadata.loaderModule.instantiate.call(r,t,function(t){if(n)throw new Error("Instantiate must only be called once.");return n=!0,e.call(r,t)})).then(function(a){return n?a:(t.metadata.entry=M(),t.metadata.entry.execute=function(){return a},t.metadata.entry.deps=t.metadata.deps,t.metadata.format="defined",e.call(r,t))}):e.call(r,t)}})}();var se=["browser","node","dev","build","production","default"],le=/#\{[^\}]+\}/;i("normalize",function(e){return function(t,r,n){var a=this;return L.call(a,t,r).then(function(t){return e.call(a,t,r,n)}).then(function(e){return C.call(a,e,r)})}}),function(){i("fetch",function(e){return function(t){var r=t.metadata.alias,n=t.metadata.deps||[];if(r){t.metadata.format="defined";var a=M();return this.defined[t.name]=a,a.declarative=!0,a.deps=n.concat([r]),a.declare=function(e){return{setters:[function(t){for(var r in t)e(r,t[r]);t.__useDefault&&(a.module.exports.__useDefault=!0)}],execute:function(){}}},""}return e.call(this,t)}})}(),function(){function e(e,t,r){for(var n,a=t.split(".");a.length>1;)n=a.shift(),e=e[n]=e[n]||{};n=a.shift(),n in e||(e[n]=r)}s(function(e){return function(){this.meta={},e.call(this)}}),i("locate",function(e){return function(t){var r,n=this.meta,a=t.name,o=0;for(var i in n)if(r=i.indexOf("*"),r!==-1&&i.substr(0,r)===a.substr(0,r)&&i.substr(r+1)===a.substr(a.length-i.length+r+1)){var s=i.split("/").length;s>o&&(o=s),v(t.metadata,n[i],o!=s)}return n[a]&&v(t.metadata,n[a]),e.call(this,t)}});var t=/^(\s*\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\s*\/\/[^\n]*|\s*"[^"]+"\s*;?|\s*'[^']+'\s*;?)+/,r=/\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\/\/[^\n]*|"[^"]+"\s*;?|'[^']+'\s*;?/g;i("translate",function(n){return function(a){if("defined"==a.metadata.format)return a.metadata.deps=a.metadata.deps||[],Promise.resolve(a.source);var o=a.source.match(t);if(o)for(var i=o[0].match(r),s=0;s<i.length;s++){var l=i[s],u=l.length,d=l.substr(0,1);if(";"==l.substr(u-1,1)&&u--,'"'==d||"'"==d){var c=l.substr(1,l.length-3),f=c.substr(0,c.indexOf(" "));if(f){var m=c.substr(f.length+1,c.length-f.length-1);"[]"==f.substr(f.length-2,2)?(f=f.substr(0,f.length-2),a.metadata[f]=a.metadata[f]||[],a.metadata[f].push(m)):a.metadata[f]instanceof Array?(w.call(this,"Module "+a.name+' contains deprecated "deps '+m+'" meta syntax.\nThis should be updated to "deps[] '+m+'" for pushing to array meta.'),a.metadata[f].push(m)):e(a.metadata,f,m)}else a.metadata[c]=!0}}return n.apply(this,arguments)}})}(),function(){s(function(e){return function(){e.call(this),this.bundles={},this._loader.loadedBundles={}}}),i("locate",function(e){return function(t){var r=this,n=!1;if(!(t.name in r.defined))for(var a in r.bundles){for(var o=0;o<r.bundles[a].length;o++){var i=r.bundles[a][o];if(i==t.name){n=!0;break}if(i.indexOf("*")!=-1){var s=i.split("*");if(2!=s.length){r.bundles[a].splice(o--,1);continue}if(t.name.substring(0,s[0].length)==s[0]&&t.name.substr(t.name.length-s[1].length,s[1].length)==s[1]&&t.name.substr(s[0].length,t.name.length-s[1].length-s[0].length).indexOf("/")==-1){n=!0;break}}}if(n)return r.import(a).then(function(){return e.call(r,t)})}return e.call(r,t)}})}(),function(){s(function(e){return function(){e.call(this),this.depCache={}}}),i("locate",function(e){return function(t){var r=this,n=r.depCache[t.name];if(n)for(var a=0;a<n.length;a++)r.import(n[a],t.name);return e.call(r,t)}})}(),X=new a,e.SystemJS=X,X.version="0.19.39 Standard","object"==typeof module&&module.exports&&"object"==typeof exports&&(module.exports=X),e.System=X}("undefined"!=typeof self?self:global)}var t="undefined"==typeof Promise;if("undefined"!=typeof document){var r=document.getElementsByTagName("script");if($__curScript=r[r.length-1],document.currentScript&&($__curScript.defer||$__curScript.async)&&($__curScript=document.currentScript),t){var n=$__curScript.src,a=n.substr(0,n.lastIndexOf("/")+1);window.systemJSBootstrap=e,document.write('<script type="text/javascript" src="'+a+'system-polyfills.js"></script>')}else e()}else if("undefined"!=typeof importScripts){var a="";try{throw new Error("_")}catch(e){e.stack.replace(/(?:at|@).*(http.+):[\d]+:[\d]+/,function(e,t){$__curScript={src:t},a=t.replace(/\/[^\/]*$/,"/")})}t&&importScripts(a+"system-polyfills.js"),e()}else $__curScript="undefined"!=typeof __filename?{src:__filename}:null,e()}();
+//# sourceMappingURL=system.js.map
Index: src/main/resources/angular_io/thirdparty/other/zone.js
===================================================================
--- src/main/resources/angular_io/thirdparty/other/zone.js	(revision 0)
+++ src/main/resources/angular_io/thirdparty/other/zone.js	(revision 0)
@@ -0,0 +1,1698 @@
+/**
+* @license
+* Copyright Google Inc. All Rights Reserved.
+*
+* Use of this source code is governed by an MIT-style license that can be
+* found in the LICENSE file at https://angular.io/license
+*/
+(function (global, factory) {
+    typeof exports === 'object' && typeof module !== 'undefined' ? factory() :
+    typeof define === 'function' && define.amd ? define(factory) :
+    (factory());
+}(this, (function () { 'use strict';
+
+/**
+ * @license
+ * Copyright Google Inc. All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+
+var Zone$1 = (function (global) {
+    if (global['Zone']) {
+        throw new Error('Zone already loaded.');
+    }
+    var Zone = (function () {
+        function Zone(parent, zoneSpec) {
+            this._properties = null;
+            this._parent = parent;
+            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';
+            this._properties = zoneSpec && zoneSpec.properties || {};
+            this._zoneDelegate =
+                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);
+        }
+        Zone.assertZonePatched = function () {
+            if (global.Promise !== ZoneAwarePromise) {
+                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +
+                    'has been overwritten.\n' +
+                    'Most likely cause is that a Promise polyfill has been loaded ' +
+                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +
+                    'If you must load one, do so before loading zone.js.)');
+            }
+        };
+        Object.defineProperty(Zone, "current", {
+            get: function () {
+                return _currentZoneFrame.zone;
+            },
+            enumerable: true,
+            configurable: true
+        });
+
+        Object.defineProperty(Zone, "currentTask", {
+            get: function () {
+                return _currentTask;
+            },
+            enumerable: true,
+            configurable: true
+        });
+
+        Object.defineProperty(Zone.prototype, "parent", {
+            get: function () {
+                return this._parent;
+            },
+            enumerable: true,
+            configurable: true
+        });
+
+        Object.defineProperty(Zone.prototype, "name", {
+            get: function () {
+                return this._name;
+            },
+            enumerable: true,
+            configurable: true
+        });
+
+        Zone.prototype.get = function (key) {
+            var zone = this.getZoneWith(key);
+            if (zone)
+                return zone._properties[key];
+        };
+        Zone.prototype.getZoneWith = function (key) {
+            var current = this;
+            while (current) {
+                if (current._properties.hasOwnProperty(key)) {
+                    return current;
+                }
+                current = current._parent;
+            }
+            return null;
+        };
+        Zone.prototype.fork = function (zoneSpec) {
+            if (!zoneSpec)
+                throw new Error('ZoneSpec required!');
+            return this._zoneDelegate.fork(this, zoneSpec);
+        };
+        Zone.prototype.wrap = function (callback, source) {
+            if (typeof callback !== 'function') {
+                throw new Error('Expecting function got: ' + callback);
+            }
+            var _callback = this._zoneDelegate.intercept(this, callback, source);
+            var zone = this;
+            return function () {
+                return zone.runGuarded(_callback, this, arguments, source);
+            };
+        };
+        Zone.prototype.run = function (callback, applyThis, applyArgs, source) {
+            if (applyThis === void 0) { applyThis = null; }
+            if (applyArgs === void 0) { applyArgs = null; }
+            if (source === void 0) { source = null; }
+            _currentZoneFrame = new ZoneFrame(_currentZoneFrame, this);
+            try {
+                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);
+            }
+            finally {
+                _currentZoneFrame = _currentZoneFrame.parent;
+            }
+        };
+        Zone.prototype.runGuarded = function (callback, applyThis, applyArgs, source) {
+            if (applyThis === void 0) { applyThis = null; }
+            if (applyArgs === void 0) { applyArgs = null; }
+            if (source === void 0) { source = null; }
+            _currentZoneFrame = new ZoneFrame(_currentZoneFrame, this);
+            try {
+                try {
+                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);
+                }
+                catch (error) {
+                    if (this._zoneDelegate.handleError(this, error)) {
+                        throw error;
+                    }
+                }
+            }
+            finally {
+                _currentZoneFrame = _currentZoneFrame.parent;
+            }
+        };
+        Zone.prototype.runTask = function (task, applyThis, applyArgs) {
+            task.runCount++;
+            if (task.zone != this)
+                throw new Error('A task can only be run in the zone which created it! (Creation: ' + task.zone.name +
+                    '; Execution: ' + this.name + ')');
+            var previousTask = _currentTask;
+            _currentTask = task;
+            _currentZoneFrame = new ZoneFrame(_currentZoneFrame, this);
+            try {
+                if (task.type == 'macroTask' && task.data && !task.data.isPeriodic) {
+                    task.cancelFn = null;
+                }
+                try {
+                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);
+                }
+                catch (error) {
+                    if (this._zoneDelegate.handleError(this, error)) {
+                        throw error;
+                    }
+                }
+            }
+            finally {
+                _currentZoneFrame = _currentZoneFrame.parent;
+                _currentTask = previousTask;
+            }
+        };
+        Zone.prototype.scheduleMicroTask = function (source, callback, data, customSchedule) {
+            return this._zoneDelegate.scheduleTask(this, new ZoneTask('microTask', this, source, callback, data, customSchedule, null));
+        };
+        Zone.prototype.scheduleMacroTask = function (source, callback, data, customSchedule, customCancel) {
+            return this._zoneDelegate.scheduleTask(this, new ZoneTask('macroTask', this, source, callback, data, customSchedule, customCancel));
+        };
+        Zone.prototype.scheduleEventTask = function (source, callback, data, customSchedule, customCancel) {
+            return this._zoneDelegate.scheduleTask(this, new ZoneTask('eventTask', this, source, callback, data, customSchedule, customCancel));
+        };
+        Zone.prototype.cancelTask = function (task) {
+            var value = this._zoneDelegate.cancelTask(this, task);
+            task.runCount = -1;
+            task.cancelFn = null;
+            return value;
+        };
+        return Zone;
+    }());
+    Zone.__symbol__ = __symbol__;
+
+    var ZoneDelegate = (function () {
+        function ZoneDelegate(zone, parentDelegate, zoneSpec) {
+            this._taskCounts = { microTask: 0, macroTask: 0, eventTask: 0 };
+            this.zone = zone;
+            this._parentDelegate = parentDelegate;
+            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);
+            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);
+            this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate.zone);
+            this._interceptZS =
+                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);
+            this._interceptDlgt =
+                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);
+            this._interceptCurrZone =
+                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate.zone);
+            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);
+            this._invokeDlgt =
+                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);
+            this._invokeCurrZone = zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate.zone);
+            this._handleErrorZS =
+                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);
+            this._handleErrorDlgt =
+                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);
+            this._handleErrorCurrZone =
+                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate.zone);
+            this._scheduleTaskZS =
+                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);
+            this._scheduleTaskDlgt =
+                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);
+            this._scheduleTaskCurrZone =
+                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate.zone);
+            this._invokeTaskZS =
+                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);
+            this._invokeTaskDlgt =
+                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);
+            this._invokeTaskCurrZone =
+                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate.zone);
+            this._cancelTaskZS =
+                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);
+            this._cancelTaskDlgt =
+                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);
+            this._cancelTaskCurrZone =
+                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate.zone);
+            this._hasTaskZS = zoneSpec && (zoneSpec.onHasTask ? zoneSpec : parentDelegate._hasTaskZS);
+            this._hasTaskDlgt =
+                zoneSpec && (zoneSpec.onHasTask ? parentDelegate : parentDelegate._hasTaskDlgt);
+            this._hasTaskCurrZone = zoneSpec && (zoneSpec.onHasTask ? this.zone : parentDelegate.zone);
+        }
+        ZoneDelegate.prototype.fork = function (targetZone, zoneSpec) {
+            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :
+                new Zone(targetZone, zoneSpec);
+        };
+        ZoneDelegate.prototype.intercept = function (targetZone, callback, source) {
+            return this._interceptZS ?
+                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :
+                callback;
+        };
+        ZoneDelegate.prototype.invoke = function (targetZone, callback, applyThis, applyArgs, source) {
+            return this._invokeZS ?
+                this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :
+                callback.apply(applyThis, applyArgs);
+        };
+        ZoneDelegate.prototype.handleError = function (targetZone, error) {
+            return this._handleErrorZS ?
+                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :
+                true;
+        };
+        ZoneDelegate.prototype.scheduleTask = function (targetZone, task) {
+            try {
+                if (this._scheduleTaskZS) {
+                    return this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);
+                }
+                else if (task.scheduleFn) {
+                    task.scheduleFn(task);
+                }
+                else if (task.type == 'microTask') {
+                    scheduleMicroTask(task);
+                }
+                else {
+                    throw new Error('Task is missing scheduleFn.');
+                }
+                return task;
+            }
+            finally {
+                if (targetZone == this.zone) {
+                    this._updateTaskCount(task.type, 1);
+                }
+            }
+        };
+        ZoneDelegate.prototype.invokeTask = function (targetZone, task, applyThis, applyArgs) {
+            try {
+                return this._invokeTaskZS ?
+                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :
+                    task.callback.apply(applyThis, applyArgs);
+            }
+            finally {
+                if (targetZone == this.zone && (task.type != 'eventTask') &&
+                    !(task.data && task.data.isPeriodic)) {
+                    this._updateTaskCount(task.type, -1);
+                }
+            }
+        };
+        ZoneDelegate.prototype.cancelTask = function (targetZone, task) {
+            var value;
+            if (this._cancelTaskZS) {
+                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);
+            }
+            else if (!task.cancelFn) {
+                throw new Error('Task does not support cancellation, or is already canceled.');
+            }
+            else {
+                value = task.cancelFn(task);
+            }
+            if (targetZone == this.zone) {
+                // this should not be in the finally block, because exceptions assume not canceled.
+                this._updateTaskCount(task.type, -1);
+            }
+            return value;
+        };
+        ZoneDelegate.prototype.hasTask = function (targetZone, isEmpty) {
+            return this._hasTaskZS &&
+                this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);
+        };
+        ZoneDelegate.prototype._updateTaskCount = function (type, count) {
+            var counts = this._taskCounts;
+            var prev = counts[type];
+            var next = counts[type] = prev + count;
+            if (next < 0) {
+                throw new Error('More tasks executed then were scheduled.');
+            }
+            if (prev == 0 || next == 0) {
+                var isEmpty = {
+                    microTask: counts.microTask > 0,
+                    macroTask: counts.macroTask > 0,
+                    eventTask: counts.eventTask > 0,
+                    change: type
+                };
+                try {
+                    this.hasTask(this.zone, isEmpty);
+                }
+                finally {
+                    if (this._parentDelegate) {
+                        this._parentDelegate._updateTaskCount(type, count);
+                    }
+                }
+            }
+        };
+        return ZoneDelegate;
+    }());
+    var ZoneTask = (function () {
+        function ZoneTask(type, zone, source, callback, options, scheduleFn, cancelFn) {
+            this.runCount = 0;
+            this.type = type;
+            this.zone = zone;
+            this.source = source;
+            this.data = options;
+            this.scheduleFn = scheduleFn;
+            this.cancelFn = cancelFn;
+            this.callback = callback;
+            var self = this;
+            this.invoke = function () {
+                _numberOfNestedTaskFrames++;
+                try {
+                    return zone.runTask(self, this, arguments);
+                }
+                finally {
+                    if (_numberOfNestedTaskFrames == 1) {
+                        drainMicroTaskQueue();
+                    }
+                    _numberOfNestedTaskFrames--;
+                }
+            };
+        }
+        ZoneTask.prototype.toString = function () {
+            if (this.data && typeof this.data.handleId !== 'undefined') {
+                return this.data.handleId;
+            }
+            else {
+                return Object.prototype.toString.call(this);
+            }
+        };
+        return ZoneTask;
+    }());
+    var ZoneFrame = (function () {
+        function ZoneFrame(parent, zone) {
+            this.parent = parent;
+            this.zone = zone;
+        }
+        return ZoneFrame;
+    }());
+    function __symbol__(name) {
+        return '__zone_symbol__' + name;
+    }
+
+    var symbolSetTimeout = __symbol__('setTimeout');
+    var symbolPromise = __symbol__('Promise');
+    var symbolThen = __symbol__('then');
+    var _currentZoneFrame = new ZoneFrame(null, new Zone(null, null));
+    var _currentTask = null;
+    var _microTaskQueue = [];
+    var _isDrainingMicrotaskQueue = false;
+    var _uncaughtPromiseErrors = [];
+    var _numberOfNestedTaskFrames = 0;
+    function scheduleQueueDrain() {
+        // if we are not running in any task, and there has not been anything scheduled
+        // we must bootstrap the initial task creation by manually scheduling the drain
+        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {
+            // We are not running in Task, so we need to kickstart the microtask queue.
+            if (global[symbolPromise]) {
+                global[symbolPromise].resolve(0)[symbolThen](drainMicroTaskQueue);
+            }
+            else {
+                global[symbolSetTimeout](drainMicroTaskQueue, 0);
+            }
+        }
+    }
+    function scheduleMicroTask(task) {
+        scheduleQueueDrain();
+        _microTaskQueue.push(task);
+    }
+    function consoleError(e) {
+        var rejection = e && e.rejection;
+        if (rejection) {
+            console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);
+        }
+        console.error(e);
+    }
+    function drainMicroTaskQueue() {
+        if (!_isDrainingMicrotaskQueue) {
+            _isDrainingMicrotaskQueue = true;
+            while (_microTaskQueue.length) {
+                var queue = _microTaskQueue;
+                _microTaskQueue = [];
+                for (var i = 0; i < queue.length; i++) {
+                    var task = queue[i];
+                    try {
+                        task.zone.runTask(task, null, null);
+                    }
+                    catch (e) {
+                        consoleError(e);
+                    }
+                }
+            }
+            while (_uncaughtPromiseErrors.length) {
+                var _loop_1 = function () {
+                    var uncaughtPromiseError = _uncaughtPromiseErrors.shift();
+                    try {
+                        uncaughtPromiseError.zone.runGuarded(function () {
+                            throw uncaughtPromiseError;
+                        });
+                    }
+                    catch (e) {
+                        consoleError(e);
+                    }
+                };
+                while (_uncaughtPromiseErrors.length) {
+                    _loop_1();
+                }
+            }
+            _isDrainingMicrotaskQueue = false;
+        }
+    }
+    function isThenable(value) {
+        return value && value.then;
+    }
+    function forwardResolution(value) {
+        return value;
+    }
+    function forwardRejection(rejection) {
+        return ZoneAwarePromise.reject(rejection);
+    }
+    var symbolState = __symbol__('state');
+    var symbolValue = __symbol__('value');
+    var source = 'Promise.then';
+    var UNRESOLVED = null;
+    var RESOLVED = true;
+    var REJECTED = false;
+    var REJECTED_NO_CATCH = 0;
+    function makeResolver(promise, state) {
+        return function (v) {
+            resolvePromise(promise, state, v);
+            // Do not return value or you will break the Promise spec.
+        };
+    }
+    function resolvePromise(promise, state, value) {
+        if (promise[symbolState] === UNRESOLVED) {
+            if (value instanceof ZoneAwarePromise && value.hasOwnProperty(symbolState) &&
+                value.hasOwnProperty(symbolValue) && value[symbolState] !== UNRESOLVED) {
+                clearRejectedNoCatch(value);
+                resolvePromise(promise, value[symbolState], value[symbolValue]);
+            }
+            else if (isThenable(value)) {
+                value.then(makeResolver(promise, state), makeResolver(promise, false));
+            }
+            else {
+                promise[symbolState] = state;
+                var queue = promise[symbolValue];
+                promise[symbolValue] = value;
+                for (var i = 0; i < queue.length;) {
+                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);
+                }
+                if (queue.length == 0 && state == REJECTED) {
+                    promise[symbolState] = REJECTED_NO_CATCH;
+                    try {
+                        throw new Error('Uncaught (in promise): ' + value +
+                            (value && value.stack ? '\n' + value.stack : ''));
+                    }
+                    catch (e) {
+                        var error_1 = e;
+                        error_1.rejection = value;
+                        error_1.promise = promise;
+                        error_1.zone = Zone.current;
+                        error_1.task = Zone.currentTask;
+                        _uncaughtPromiseErrors.push(error_1);
+                        scheduleQueueDrain();
+                    }
+                }
+            }
+        }
+        // Resolving an already resolved promise is a noop.
+        return promise;
+    }
+    function clearRejectedNoCatch(promise) {
+        if (promise[symbolState] === REJECTED_NO_CATCH) {
+            promise[symbolState] = REJECTED;
+            for (var i = 0; i < _uncaughtPromiseErrors.length; i++) {
+                if (promise === _uncaughtPromiseErrors[i].promise) {
+                    _uncaughtPromiseErrors.splice(i, 1);
+                    break;
+                }
+            }
+        }
+    }
+    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {
+        clearRejectedNoCatch(promise);
+        var delegate = promise[symbolState] ? onFulfilled || forwardResolution : onRejected || forwardRejection;
+        zone.scheduleMicroTask(source, function () {
+            try {
+                resolvePromise(chainPromise, true, zone.run(delegate, null, [promise[symbolValue]]));
+            }
+            catch (error) {
+                resolvePromise(chainPromise, false, error);
+            }
+        });
+    }
+    var ZoneAwarePromise = (function () {
+        function ZoneAwarePromise(executor) {
+            var promise = this;
+            if (!(promise instanceof ZoneAwarePromise)) {
+                throw new Error('Must be an instanceof Promise.');
+            }
+            promise[symbolState] = UNRESOLVED;
+            promise[symbolValue] = []; // queue;
+            try {
+                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));
+            }
+            catch (e) {
+                resolvePromise(promise, false, e);
+            }
+        }
+        ZoneAwarePromise.resolve = function (value) {
+            return resolvePromise(new this(null), RESOLVED, value);
+        };
+        ZoneAwarePromise.reject = function (error) {
+            return resolvePromise(new this(null), REJECTED, error);
+        };
+        ZoneAwarePromise.race = function (values) {
+            var resolve;
+            var reject;
+            var promise = new this(function (res, rej) {
+                _a = [res, rej], resolve = _a[0], reject = _a[1];
+                var _a;
+            });
+            function onResolve(value) {
+                promise && (promise = null || resolve(value));
+            }
+            function onReject(error) {
+                promise && (promise = null || reject(error));
+            }
+            for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {
+                var value = values_1[_i];
+                if (!isThenable(value)) {
+                    value = this.resolve(value);
+                }
+                value.then(onResolve, onReject);
+            }
+            return promise;
+        };
+        ZoneAwarePromise.all = function (values) {
+            var resolve;
+            var reject;
+            var promise = new this(function (res, rej) {
+                resolve = res;
+                reject = rej;
+            });
+            var count = 0;
+            var resolvedValues = [];
+            for (var _i = 0, values_2 = values; _i < values_2.length; _i++) {
+                var value = values_2[_i];
+                if (!isThenable(value)) {
+                    value = this.resolve(value);
+                }
+                value.then((function (index) { return function (value) {
+                    resolvedValues[index] = value;
+                    count--;
+                    if (!count) {
+                        resolve(resolvedValues);
+                    }
+                }; })(count), reject);
+                count++;
+            }
+            if (!count)
+                resolve(resolvedValues);
+            return promise;
+        };
+        ZoneAwarePromise.prototype.then = function (onFulfilled, onRejected) {
+            var chainPromise = new this.constructor(null);
+            var zone = Zone.current;
+            if (this[symbolState] == UNRESOLVED) {
+                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);
+            }
+            else {
+                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);
+            }
+            return chainPromise;
+        };
+        ZoneAwarePromise.prototype.catch = function (onRejected) {
+            return this.then(null, onRejected);
+        };
+        return ZoneAwarePromise;
+    }());
+    // Protect against aggressive optimizers dropping seemingly unused properties.
+    // E.g. Closure Compiler in advanced mode.
+    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;
+    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;
+    ZoneAwarePromise['race'] = ZoneAwarePromise.race;
+    ZoneAwarePromise['all'] = ZoneAwarePromise.all;
+    var NativePromise = global[__symbol__('Promise')] = global['Promise'];
+    global['Promise'] = ZoneAwarePromise;
+    function patchThen(NativePromise) {
+        var NativePromiseProtototype = NativePromise.prototype;
+        var NativePromiseThen = NativePromiseProtototype[__symbol__('then')] =
+            NativePromiseProtototype.then;
+        NativePromiseProtototype.then = function (onResolve, onReject) {
+            var nativePromise = this;
+            return new ZoneAwarePromise(function (resolve, reject) {
+                NativePromiseThen.call(nativePromise, resolve, reject);
+            })
+                .then(onResolve, onReject);
+        };
+    }
+    if (NativePromise) {
+        patchThen(NativePromise);
+        if (typeof global['fetch'] !== 'undefined') {
+            var fetchPromise = void 0;
+            try {
+                // In MS Edge this throws
+                fetchPromise = global['fetch']();
+            }
+            catch (e) {
+                // In Chrome this throws instead.
+                fetchPromise = global['fetch']('about:blank');
+            }
+            // ignore output to prevent error;
+            fetchPromise.then(function () { return null; }, function () { return null; });
+            if (fetchPromise.constructor != NativePromise &&
+                fetchPromise.constructor != ZoneAwarePromise) {
+                patchThen(fetchPromise.constructor);
+            }
+        }
+    }
+    // This is not part of public API, but it is usefull for tests, so we expose it.
+    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;
+    /*
+     * This code patches Error so that:
+     *   - It ignores un-needed stack frames.
+     *   - It Shows the associated Zone for reach frame.
+     */
+    var FrameType;
+    (function (FrameType) {
+        /// Skip this frame when printing out stack
+        FrameType[FrameType["blackList"] = 0] = "blackList";
+        /// This frame marks zone transition
+        FrameType[FrameType["transition"] = 1] = "transition";
+    })(FrameType || (FrameType = {}));
+    var NativeError = global[__symbol__('Error')] = global.Error;
+    // Store the frames which should be removed from the stack frames
+    var blackListedStackFrames = {};
+    // We must find the frame where Error was created, otherwise we assume we don't understand stack
+    var zoneAwareFrame;
+    global.Error = ZoneAwareError;
+    // How should the stack frames be parsed.
+    var frameParserStrategy = null;
+    var stackRewrite = 'stackRewrite';
+    /**
+     * This is ZoneAwareError which processes the stack frame and cleans up extra frames as well as
+     * adds zone information to it.
+     */
+    function ZoneAwareError() {
+        // Create an Error.
+        var error = NativeError.apply(this, arguments);
+        // Save original stack trace
+        error.originalStack = error.stack;
+        // Process the stack trace and rewrite the frames.
+        if (ZoneAwareError[stackRewrite] && error.originalStack) {
+            var frames_1 = error.originalStack.split('\n');
+            var zoneFrame = _currentZoneFrame;
+            var i = 0;
+            // Find the first frame
+            while (frames_1[i] !== zoneAwareFrame && i < frames_1.length) {
+                i++;
+            }
+            for (; i < frames_1.length && zoneFrame; i++) {
+                var frame = frames_1[i];
+                if (frame.trim()) {
+                    var frameType = blackListedStackFrames.hasOwnProperty(frame) && blackListedStackFrames[frame];
+                    if (frameType === FrameType.blackList) {
+                        frames_1.splice(i, 1);
+                        i--;
+                    }
+                    else if (frameType === FrameType.transition) {
+                        if (zoneFrame.parent) {
+                            // This is the special frame where zone changed. Print and process it accordingly
+                            frames_1[i] += " [" + zoneFrame.parent.zone.name + " => " + zoneFrame.zone.name + "]";
+                            zoneFrame = zoneFrame.parent;
+                        }
+                        else {
+                            zoneFrame = null;
+                        }
+                    }
+                    else {
+                        frames_1[i] += " [" + zoneFrame.zone.name + "]";
+                    }
+                }
+            }
+            error.stack = error.zoneAwareStack = frames_1.join('\n');
+        }
+        return error;
+    }
+    // Copy the prototype so that instanceof operator works as expected
+    ZoneAwareError.prototype = NativeError.prototype;
+    ZoneAwareError[Zone.__symbol__('blacklistedStackFrames')] = blackListedStackFrames;
+    ZoneAwareError[stackRewrite] = false;
+    if (NativeError.hasOwnProperty('stackTraceLimit')) {
+        // Extend default stack limit as we will be removing few frames.
+        NativeError.stackTraceLimit = Math.max(NativeError.stackTraceLimit, 15);
+        // make sure that ZoneAwareError has the same property which forwards to NativeError.
+        Object.defineProperty(ZoneAwareError, 'stackTraceLimit', {
+            get: function () {
+                return NativeError.stackTraceLimit;
+            },
+            set: function (value) {
+                return NativeError.stackTraceLimit = value;
+            }
+        });
+    }
+    if (NativeError.hasOwnProperty('captureStackTrace')) {
+        Object.defineProperty(ZoneAwareError, 'captureStackTrace', {
+            value: function (targetObject, constructorOpt) {
+                NativeError.captureStackTrace(targetObject, constructorOpt);
+            }
+        });
+    }
+    Object.defineProperty(ZoneAwareError, 'prepareStackTrace', {
+        get: function () {
+            return NativeError.prepareStackTrace;
+        },
+        set: function (value) {
+            return NativeError.prepareStackTrace = value;
+        }
+    });
+    // Now we need to populet the `blacklistedStackFrames` as well as find the
+    // Now we need to populet the `blacklistedStackFrames` as well as find the
+    // run/runGuraded/runTask frames. This is done by creating a detect zone and then threading
+    // the execution through all of the above methods so that we can look at the stack trace and
+    // find the frames of interest.
+    var detectZone = Zone.current.fork({
+        name: 'detect',
+        onInvoke: function (parentZoneDelegate, currentZone, targetZone, delegate, applyThis, applyArgs, source) {
+            // Here only so that it will show up in the stack frame so that it can be black listed.
+            return parentZoneDelegate.invoke(targetZone, delegate, applyThis, applyArgs, source);
+        },
+        onHandleError: function (parentZD, current, target, error) {
+            if (error.originalStack && Error === ZoneAwareError) {
+                var frames_2 = error.originalStack.split(/\n/);
+                var runFrame = false, runGuardedFrame = false, runTaskFrame = false;
+                while (frames_2.length) {
+                    var frame = frames_2.shift();
+                    // On safari it is possible to have stack frame with no line number.
+                    // This check makes sure that we don't filter frames on name only (must have
+                    // linenumber)
+                    if (/:\d+:\d+/.test(frame)) {
+                        // Get rid of the path so that we don't accidintely find function name in path.
+                        // In chrome the seperator is `(` and `@` in FF and safari
+                        // Chrome: at Zone.run (zone.js:100)
+                        // Chrome: at Zone.run (http://localhost:9876/base/build/lib/zone.js:100:24)
+                        // FireFox: Zone.prototype.run@http://localhost:9876/base/build/lib/zone.js:101:24
+                        // Safari: run@http://localhost:9876/base/build/lib/zone.js:101:24
+                        var fnName = frame.split('(')[0].split('@')[0];
+                        var frameType = FrameType.transition;
+                        if (fnName.indexOf('ZoneAwareError') !== -1) {
+                            zoneAwareFrame = frame;
+                        }
+                        if (fnName.indexOf('runGuarded') !== -1) {
+                            runGuardedFrame = true;
+                        }
+                        else if (fnName.indexOf('runTask') !== -1) {
+                            runTaskFrame = true;
+                        }
+                        else if (fnName.indexOf('run') !== -1) {
+                            runFrame = true;
+                        }
+                        else {
+                            frameType = FrameType.blackList;
+                        }
+                        blackListedStackFrames[frame] = frameType;
+                        // Once we find all of the frames we can stop looking.
+                        if (runFrame && runGuardedFrame && runTaskFrame) {
+                            ZoneAwareError[stackRewrite] = true;
+                            break;
+                        }
+                    }
+                }
+            }
+            return false;
+        }
+    });
+    // carefully constructor a stack frame which contains all of the frames of interest which
+    // need to be detected and blacklisted.
+    var detectRunFn = function () {
+        detectZone.run(function () {
+            detectZone.runGuarded(function () {
+                throw new Error('blacklistStackFrames');
+            });
+        });
+    };
+    // Cause the error to extract the stack frames.
+    detectZone.runTask(detectZone.scheduleMacroTask('detect', detectRunFn, null, function () { return null; }, null));
+    return global['Zone'] = Zone;
+})(typeof window === 'object' && window || typeof self === 'object' && self || global);
+
+/**
+ * @license
+ * Copyright Google Inc. All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+/**
+ * Suppress closure compiler errors about unknown 'Zone' variable
+ * @fileoverview
+ * @suppress {undefinedVars}
+ */
+var zoneSymbol = function (n) { return "__zone_symbol__" + n; };
+var _global$1 = typeof window === 'object' && window || typeof self === 'object' && self || global;
+function bindArguments(args, source) {
+    for (var i = args.length - 1; i >= 0; i--) {
+        if (typeof args[i] === 'function') {
+            args[i] = Zone.current.wrap(args[i], source + '_' + i);
+        }
+    }
+    return args;
+}
+function patchPrototype(prototype, fnNames) {
+    var source = prototype.constructor['name'];
+    var _loop_1 = function (i) {
+        var name_1 = fnNames[i];
+        var delegate = prototype[name_1];
+        if (delegate) {
+            prototype[name_1] = (function (delegate) {
+                return function () {
+                    return delegate.apply(this, bindArguments(arguments, source + '.' + name_1));
+                };
+            })(delegate);
+        }
+    };
+    for (var i = 0; i < fnNames.length; i++) {
+        _loop_1(i);
+    }
+}
+var isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);
+var isNode = (!('nw' in _global$1) && typeof process !== 'undefined' &&
+    {}.toString.call(process) === '[object process]');
+var isBrowser = !isNode && !isWebWorker && !!(typeof window !== 'undefined' && window['HTMLElement']);
+function patchProperty(obj, prop) {
+    var desc = Object.getOwnPropertyDescriptor(obj, prop) || { enumerable: true, configurable: true };
+    var originalDesc = Object.getOwnPropertyDescriptor(obj, 'original' + prop);
+    if (!originalDesc && desc.get) {
+        Object.defineProperty(obj, 'original' + prop, { enumerable: false, configurable: true, get: desc.get });
+    }
+    // A property descriptor cannot have getter/setter and be writable
+    // deleting the writable and value properties avoids this error:
+    //
+    // TypeError: property descriptors must not specify a value or be writable when a
+    // getter or setter has been specified
+    delete desc.writable;
+    delete desc.value;
+    // substr(2) cuz 'onclick' -> 'click', etc
+    var eventName = prop.substr(2);
+    var _prop = '_' + prop;
+    desc.set = function (fn) {
+        if (this[_prop]) {
+            this.removeEventListener(eventName, this[_prop]);
+        }
+        if (typeof fn === 'function') {
+            var wrapFn = function (event) {
+                var result;
+                result = fn.apply(this, arguments);
+                if (result != undefined && !result)
+                    event.preventDefault();
+            };
+            this[_prop] = wrapFn;
+            this.addEventListener(eventName, wrapFn, false);
+        }
+        else {
+            this[_prop] = null;
+        }
+    };
+    // The getter would return undefined for unassigned properties but the default value of an
+    // unassigned property is null
+    desc.get = function () {
+        var r = this[_prop] || null;
+        // result will be null when use inline event attribute,
+        // such as <button onclick="func();">OK</button>
+        // because the onclick function is internal raw uncompiled handler
+        // the onclick will be evaluated when first time event was triggered or
+        // the property is accessed, https://github.com/angular/zone.js/issues/525
+        // so we should use original native get to retrive the handler
+        if (r === null) {
+            var oriDesc = Object.getOwnPropertyDescriptor(obj, 'original' + prop);
+            if (oriDesc && oriDesc.get) {
+                r = oriDesc.get.apply(this, arguments);
+                if (r) {
+                    desc.set.apply(this, [r]);
+                    this.removeAttribute(prop);
+                }
+            }
+        }
+        return this[_prop] || null;
+    };
+    Object.defineProperty(obj, prop, desc);
+}
+
+function patchOnProperties(obj, properties) {
+    var onProperties = [];
+    for (var prop in obj) {
+        if (prop.substr(0, 2) == 'on') {
+            onProperties.push(prop);
+        }
+    }
+    for (var j = 0; j < onProperties.length; j++) {
+        patchProperty(obj, onProperties[j]);
+    }
+    if (properties) {
+        for (var i = 0; i < properties.length; i++) {
+            patchProperty(obj, 'on' + properties[i]);
+        }
+    }
+}
+
+var EVENT_TASKS = zoneSymbol('eventTasks');
+// For EventTarget
+var ADD_EVENT_LISTENER = 'addEventListener';
+var REMOVE_EVENT_LISTENER = 'removeEventListener';
+function findExistingRegisteredTask(target, handler, name, capture, remove) {
+    var eventTasks = target[EVENT_TASKS];
+    if (eventTasks) {
+        for (var i = 0; i < eventTasks.length; i++) {
+            var eventTask = eventTasks[i];
+            var data = eventTask.data;
+            var listener = data.handler;
+            if ((data.handler === handler || listener.listener === handler) &&
+                data.useCapturing === capture && data.eventName === name) {
+                if (remove) {
+                    eventTasks.splice(i, 1);
+                }
+                return eventTask;
+            }
+        }
+    }
+    return null;
+}
+function findAllExistingRegisteredTasks(target, name, capture, remove) {
+    var eventTasks = target[EVENT_TASKS];
+    if (eventTasks) {
+        var result = [];
+        for (var i = eventTasks.length - 1; i >= 0; i--) {
+            var eventTask = eventTasks[i];
+            var data = eventTask.data;
+            if (data.eventName === name && data.useCapturing === capture) {
+                result.push(eventTask);
+                if (remove) {
+                    eventTasks.splice(i, 1);
+                }
+            }
+        }
+        return result;
+    }
+    return null;
+}
+function attachRegisteredEvent(target, eventTask, isPrepend) {
+    var eventTasks = target[EVENT_TASKS];
+    if (!eventTasks) {
+        eventTasks = target[EVENT_TASKS] = [];
+    }
+    if (isPrepend) {
+        eventTasks.unshift(eventTask);
+    }
+    else {
+        eventTasks.push(eventTask);
+    }
+}
+var defaultListenerMetaCreator = function (self, args) {
+    return {
+        useCapturing: args[2],
+        eventName: args[0],
+        handler: args[1],
+        target: self || _global$1,
+        name: args[0],
+        invokeAddFunc: function (addFnSymbol, delegate) {
+            if (delegate && delegate.invoke) {
+                return this.target[addFnSymbol](this.eventName, delegate.invoke, this.useCapturing);
+            }
+            else {
+                return this.target[addFnSymbol](this.eventName, delegate, this.useCapturing);
+            }
+        },
+        invokeRemoveFunc: function (removeFnSymbol, delegate) {
+            if (delegate && delegate.invoke) {
+                return this.target[removeFnSymbol](this.eventName, delegate.invoke, this.useCapturing);
+            }
+            else {
+                return this.target[removeFnSymbol](this.eventName, delegate, this.useCapturing);
+            }
+        }
+    };
+};
+function makeZoneAwareAddListener(addFnName, removeFnName, useCapturingParam, allowDuplicates, isPrepend, metaCreator) {
+    if (useCapturingParam === void 0) { useCapturingParam = true; }
+    if (allowDuplicates === void 0) { allowDuplicates = false; }
+    if (isPrepend === void 0) { isPrepend = false; }
+    if (metaCreator === void 0) { metaCreator = defaultListenerMetaCreator; }
+    var addFnSymbol = zoneSymbol(addFnName);
+    var removeFnSymbol = zoneSymbol(removeFnName);
+    var defaultUseCapturing = useCapturingParam ? false : undefined;
+    function scheduleEventListener(eventTask) {
+        var meta = eventTask.data;
+        attachRegisteredEvent(meta.target, eventTask, isPrepend);
+        return meta.invokeAddFunc(addFnSymbol, eventTask);
+    }
+    function cancelEventListener(eventTask) {
+        var meta = eventTask.data;
+        findExistingRegisteredTask(meta.target, eventTask.invoke, meta.eventName, meta.useCapturing, true);
+        return meta.invokeRemoveFunc(removeFnSymbol, eventTask);
+    }
+    return function zoneAwareAddListener(self, args) {
+        var data = metaCreator(self, args);
+        data.useCapturing = data.useCapturing || defaultUseCapturing;
+        // - Inside a Web Worker, `this` is undefined, the context is `global`
+        // - When `addEventListener` is called on the global context in strict mode, `this` is undefined
+        // see https://github.com/angular/zone.js/issues/190
+        var delegate = null;
+        if (typeof data.handler == 'function') {
+            delegate = data.handler;
+        }
+        else if (data.handler && data.handler.handleEvent) {
+            delegate = function (event) { return data.handler.handleEvent(event); };
+        }
+        var validZoneHandler = false;
+        try {
+            // In cross site contexts (such as WebDriver frameworks like Selenium),
+            // accessing the handler object here will cause an exception to be thrown which
+            // will fail tests prematurely.
+            validZoneHandler = data.handler && data.handler.toString() === '[object FunctionWrapper]';
+        }
+        catch (e) {
+            // Returning nothing here is fine, because objects in a cross-site context are unusable
+            return;
+        }
+        // Ignore special listeners of IE11 & Edge dev tools, see
+        // https://github.com/angular/zone.js/issues/150
+        if (!delegate || validZoneHandler) {
+            return data.invokeAddFunc(addFnSymbol, data.handler);
+        }
+        if (!allowDuplicates) {
+            var eventTask = findExistingRegisteredTask(data.target, data.handler, data.eventName, data.useCapturing, false);
+            if (eventTask) {
+                // we already registered, so this will have noop.
+                return data.invokeAddFunc(addFnSymbol, eventTask);
+            }
+        }
+        var zone = Zone.current;
+        var source = data.target.constructor['name'] + '.' + addFnName + ':' + data.eventName;
+        zone.scheduleEventTask(source, delegate, data, scheduleEventListener, cancelEventListener);
+    };
+}
+function makeZoneAwareRemoveListener(fnName, useCapturingParam, metaCreator) {
+    if (useCapturingParam === void 0) { useCapturingParam = true; }
+    if (metaCreator === void 0) { metaCreator = defaultListenerMetaCreator; }
+    var symbol = zoneSymbol(fnName);
+    var defaultUseCapturing = useCapturingParam ? false : undefined;
+    return function zoneAwareRemoveListener(self, args) {
+        var data = metaCreator(self, args);
+        data.useCapturing = data.useCapturing || defaultUseCapturing;
+        // - Inside a Web Worker, `this` is undefined, the context is `global`
+        // - When `addEventListener` is called on the global context in strict mode, `this` is undefined
+        // see https://github.com/angular/zone.js/issues/190
+        var eventTask = findExistingRegisteredTask(data.target, data.handler, data.eventName, data.useCapturing, true);
+        if (eventTask) {
+            eventTask.zone.cancelTask(eventTask);
+        }
+        else {
+            data.invokeRemoveFunc(symbol, data.handler);
+        }
+    };
+}
+
+
+var zoneAwareAddEventListener = makeZoneAwareAddListener(ADD_EVENT_LISTENER, REMOVE_EVENT_LISTENER);
+var zoneAwareRemoveEventListener = makeZoneAwareRemoveListener(REMOVE_EVENT_LISTENER);
+function patchEventTargetMethods(obj, addFnName, removeFnName, metaCreator) {
+    if (addFnName === void 0) { addFnName = ADD_EVENT_LISTENER; }
+    if (removeFnName === void 0) { removeFnName = REMOVE_EVENT_LISTENER; }
+    if (metaCreator === void 0) { metaCreator = defaultListenerMetaCreator; }
+    if (obj && obj[addFnName]) {
+        patchMethod(obj, addFnName, function () { return makeZoneAwareAddListener(addFnName, removeFnName, true, false, false, metaCreator); });
+        patchMethod(obj, removeFnName, function () { return makeZoneAwareRemoveListener(removeFnName, true, metaCreator); });
+        return true;
+    }
+    else {
+        return false;
+    }
+}
+var originalInstanceKey = zoneSymbol('originalInstance');
+// wrap some native API on `window`
+function patchClass(className) {
+    var OriginalClass = _global$1[className];
+    if (!OriginalClass)
+        return;
+    _global$1[className] = function () {
+        var a = bindArguments(arguments, className);
+        switch (a.length) {
+            case 0:
+                this[originalInstanceKey] = new OriginalClass();
+                break;
+            case 1:
+                this[originalInstanceKey] = new OriginalClass(a[0]);
+                break;
+            case 2:
+                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);
+                break;
+            case 3:
+                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);
+                break;
+            case 4:
+                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);
+                break;
+            default:
+                throw new Error('Arg list too long.');
+        }
+    };
+    var instance = new OriginalClass(function () { });
+    var prop;
+    for (prop in instance) {
+        // https://bugs.webkit.org/show_bug.cgi?id=44721
+        if (className === 'XMLHttpRequest' && prop === 'responseBlob')
+            continue;
+        (function (prop) {
+            if (typeof instance[prop] === 'function') {
+                _global$1[className].prototype[prop] = function () {
+                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);
+                };
+            }
+            else {
+                Object.defineProperty(_global$1[className].prototype, prop, {
+                    set: function (fn) {
+                        if (typeof fn === 'function') {
+                            this[originalInstanceKey][prop] = Zone.current.wrap(fn, className + '.' + prop);
+                        }
+                        else {
+                            this[originalInstanceKey][prop] = fn;
+                        }
+                    },
+                    get: function () {
+                        return this[originalInstanceKey][prop];
+                    }
+                });
+            }
+        }(prop));
+    }
+    for (prop in OriginalClass) {
+        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {
+            _global$1[className][prop] = OriginalClass[prop];
+        }
+    }
+}
+
+function createNamedFn(name, delegate) {
+    try {
+        return (Function('f', "return function " + name + "(){return f(this, arguments)}"))(delegate);
+    }
+    catch (e) {
+        // if we fail, we must be CSP, just return delegate.
+        return function () {
+            return delegate(this, arguments);
+        };
+    }
+}
+function patchMethod(target, name, patchFn) {
+    var proto = target;
+    while (proto && Object.getOwnPropertyNames(proto).indexOf(name) === -1) {
+        proto = Object.getPrototypeOf(proto);
+    }
+    if (!proto && target[name]) {
+        // somehow we did not find it, but we can see it. This happens on IE for Window properties.
+        proto = target;
+    }
+    var delegateName = zoneSymbol(name);
+    var delegate;
+    if (proto && !(delegate = proto[delegateName])) {
+        delegate = proto[delegateName] = proto[name];
+        proto[name] = createNamedFn(name, patchFn(delegate, delegateName, name));
+    }
+    return delegate;
+}
+
+/**
+ * @license
+ * Copyright Google Inc. All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+function patchTimer(window, setName, cancelName, nameSuffix) {
+    var setNative = null;
+    var clearNative = null;
+    setName += nameSuffix;
+    cancelName += nameSuffix;
+    var tasksByHandleId = {};
+    function scheduleTask(task) {
+        var data = task.data;
+        data.args[0] = function () {
+            task.invoke.apply(this, arguments);
+            delete tasksByHandleId[data.handleId];
+        };
+        data.handleId = setNative.apply(window, data.args);
+        tasksByHandleId[data.handleId] = task;
+        return task;
+    }
+    function clearTask(task) {
+        delete tasksByHandleId[task.data.handleId];
+        return clearNative(task.data.handleId);
+    }
+    setNative =
+        patchMethod(window, setName, function (delegate) { return function (self, args) {
+            if (typeof args[0] === 'function') {
+                var zone = Zone.current;
+                var options = {
+                    handleId: null,
+                    isPeriodic: nameSuffix === 'Interval',
+                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 : null,
+                    args: args
+                };
+                var task = zone.scheduleMacroTask(setName, args[0], options, scheduleTask, clearTask);
+                if (!task) {
+                    return task;
+                }
+                // Node.js must additionally support the ref and unref functions.
+                var handle = task.data.handleId;
+                if (handle.ref && handle.unref) {
+                    task.ref = handle.ref.bind(handle);
+                    task.unref = handle.unref.bind(handle);
+                }
+                return task;
+            }
+            else {
+                // cause an error by calling it directly.
+                return delegate.apply(window, args);
+            }
+        }; });
+    clearNative =
+        patchMethod(window, cancelName, function (delegate) { return function (self, args) {
+            var task = typeof args[0] === 'number' ? tasksByHandleId[args[0]] : args[0];
+            if (task && typeof task.type === 'string') {
+                if (task.cancelFn && task.data.isPeriodic || task.runCount === 0) {
+                    // Do not cancel already canceled functions
+                    task.zone.cancelTask(task);
+                }
+            }
+            else {
+                // cause an error by calling it directly.
+                delegate.apply(window, args);
+            }
+        }; });
+}
+
+/**
+ * @license
+ * Copyright Google Inc. All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+/*
+ * This is necessary for Chrome and Chrome mobile, to enable
+ * things like redefining `createdCallback` on an element.
+ */
+var _defineProperty = Object[zoneSymbol('defineProperty')] = Object.defineProperty;
+var _getOwnPropertyDescriptor = Object[zoneSymbol('getOwnPropertyDescriptor')] =
+    Object.getOwnPropertyDescriptor;
+var _create = Object.create;
+var unconfigurablesKey = zoneSymbol('unconfigurables');
+function propertyPatch() {
+    Object.defineProperty = function (obj, prop, desc) {
+        if (isUnconfigurable(obj, prop)) {
+            throw new TypeError('Cannot assign to read only property \'' + prop + '\' of ' + obj);
+        }
+        var originalConfigurableFlag = desc.configurable;
+        if (prop !== 'prototype') {
+            desc = rewriteDescriptor(obj, prop, desc);
+        }
+        return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);
+    };
+    Object.defineProperties = function (obj, props) {
+        Object.keys(props).forEach(function (prop) {
+            Object.defineProperty(obj, prop, props[prop]);
+        });
+        return obj;
+    };
+    Object.create = function (obj, proto) {
+        if (typeof proto === 'object' && !Object.isFrozen(proto)) {
+            Object.keys(proto).forEach(function (prop) {
+                proto[prop] = rewriteDescriptor(obj, prop, proto[prop]);
+            });
+        }
+        return _create(obj, proto);
+    };
+    Object.getOwnPropertyDescriptor = function (obj, prop) {
+        var desc = _getOwnPropertyDescriptor(obj, prop);
+        if (isUnconfigurable(obj, prop)) {
+            desc.configurable = false;
+        }
+        return desc;
+    };
+}
+
+function _redefineProperty(obj, prop, desc) {
+    var originalConfigurableFlag = desc.configurable;
+    desc = rewriteDescriptor(obj, prop, desc);
+    return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);
+}
+
+function isUnconfigurable(obj, prop) {
+    return obj && obj[unconfigurablesKey] && obj[unconfigurablesKey][prop];
+}
+function rewriteDescriptor(obj, prop, desc) {
+    desc.configurable = true;
+    if (!desc.configurable) {
+        if (!obj[unconfigurablesKey]) {
+            _defineProperty(obj, unconfigurablesKey, { writable: true, value: {} });
+        }
+        obj[unconfigurablesKey][prop] = true;
+    }
+    return desc;
+}
+function _tryDefineProperty(obj, prop, desc, originalConfigurableFlag) {
+    try {
+        return _defineProperty(obj, prop, desc);
+    }
+    catch (e) {
+        if (desc.configurable) {
+            // In case of errors, when the configurable flag was likely set by rewriteDescriptor(), let's
+            // retry with the original flag value
+            if (typeof originalConfigurableFlag == 'undefined') {
+                delete desc.configurable;
+            }
+            else {
+                desc.configurable = originalConfigurableFlag;
+            }
+            try {
+                return _defineProperty(obj, prop, desc);
+            }
+            catch (e) {
+                var descJson = null;
+                try {
+                    descJson = JSON.stringify(desc);
+                }
+                catch (e) {
+                    descJson = descJson.toString();
+                }
+                console.log("Attempting to configure '" + prop + "' with descriptor '" + descJson + "' on object '" + obj + "' and got error, giving up: " + e);
+            }
+        }
+        else {
+            throw e;
+        }
+    }
+}
+
+/**
+ * @license
+ * Copyright Google Inc. All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+var WTF_ISSUE_555 = 'Anchor,Area,Audio,BR,Base,BaseFont,Body,Button,Canvas,Content,DList,Directory,Div,Embed,FieldSet,Font,Form,Frame,FrameSet,HR,Head,Heading,Html,IFrame,Image,Input,Keygen,LI,Label,Legend,Link,Map,Marquee,Media,Menu,Meta,Meter,Mod,OList,Object,OptGroup,Option,Output,Paragraph,Pre,Progress,Quote,Script,Select,Source,Span,Style,TableCaption,TableCell,TableCol,Table,TableRow,TableSection,TextArea,Title,Track,UList,Unknown,Video';
+var NO_EVENT_TARGET = 'ApplicationCache,EventSource,FileReader,InputMethodContext,MediaController,MessagePort,Node,Performance,SVGElementInstance,SharedWorker,TextTrack,TextTrackCue,TextTrackList,WebKitNamedFlow,Window,Worker,WorkerGlobalScope,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload,IDBRequest,IDBOpenDBRequest,IDBDatabase,IDBTransaction,IDBCursor,DBIndex,WebSocket'
+    .split(',');
+var EVENT_TARGET = 'EventTarget';
+function eventTargetPatch(_global) {
+    var apis = [];
+    var isWtf = _global['wtf'];
+    if (isWtf) {
+        // Workaround for: https://github.com/google/tracing-framework/issues/555
+        apis = WTF_ISSUE_555.split(',').map(function (v) { return 'HTML' + v + 'Element'; }).concat(NO_EVENT_TARGET);
+    }
+    else if (_global[EVENT_TARGET]) {
+        apis.push(EVENT_TARGET);
+    }
+    else {
+        // Note: EventTarget is not available in all browsers,
+        // if it's not available, we instead patch the APIs in the IDL that inherit from EventTarget
+        apis = NO_EVENT_TARGET;
+    }
+    for (var i = 0; i < apis.length; i++) {
+        var type = _global[apis[i]];
+        patchEventTargetMethods(type && type.prototype);
+    }
+}
+
+/**
+ * @license
+ * Copyright Google Inc. All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+// we have to patch the instance since the proto is non-configurable
+function apply(_global) {
+    var WS = _global.WebSocket;
+    // On Safari window.EventTarget doesn't exist so need to patch WS add/removeEventListener
+    // On older Chrome, no need since EventTarget was already patched
+    if (!_global.EventTarget) {
+        patchEventTargetMethods(WS.prototype);
+    }
+    _global.WebSocket = function (a, b) {
+        var socket = arguments.length > 1 ? new WS(a, b) : new WS(a);
+        var proxySocket;
+        // Safari 7.0 has non-configurable own 'onmessage' and friends properties on the socket instance
+        var onmessageDesc = Object.getOwnPropertyDescriptor(socket, 'onmessage');
+        if (onmessageDesc && onmessageDesc.configurable === false) {
+            proxySocket = Object.create(socket);
+            ['addEventListener', 'removeEventListener', 'send', 'close'].forEach(function (propName) {
+                proxySocket[propName] = function () {
+                    return socket[propName].apply(socket, arguments);
+                };
+            });
+        }
+        else {
+            // we can patch the real socket
+            proxySocket = socket;
+        }
+        patchOnProperties(proxySocket, ['close', 'error', 'message', 'open']);
+        return proxySocket;
+    };
+    for (var prop in WS) {
+        _global.WebSocket[prop] = WS[prop];
+    }
+}
+
+/**
+ * @license
+ * Copyright Google Inc. All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+var eventNames = 'copy cut paste abort blur focus canplay canplaythrough change click contextmenu dblclick drag dragend dragenter dragleave dragover dragstart drop durationchange emptied ended input invalid keydown keypress keyup load loadeddata loadedmetadata loadstart message mousedown mouseenter mouseleave mousemove mouseout mouseover mouseup pause play playing progress ratechange reset scroll seeked seeking select show stalled submit suspend timeupdate volumechange waiting mozfullscreenchange mozfullscreenerror mozpointerlockchange mozpointerlockerror error webglcontextrestored webglcontextlost webglcontextcreationerror'
+    .split(' ');
+function propertyDescriptorPatch(_global) {
+    if (isNode) {
+        return;
+    }
+    var supportsWebSocket = typeof WebSocket !== 'undefined';
+    if (canPatchViaPropertyDescriptor()) {
+        // for browsers that we can patch the descriptor:  Chrome & Firefox
+        if (isBrowser) {
+            patchOnProperties(HTMLElement.prototype, eventNames);
+        }
+        patchOnProperties(XMLHttpRequest.prototype, null);
+        if (typeof IDBIndex !== 'undefined') {
+            patchOnProperties(IDBIndex.prototype, null);
+            patchOnProperties(IDBRequest.prototype, null);
+            patchOnProperties(IDBOpenDBRequest.prototype, null);
+            patchOnProperties(IDBDatabase.prototype, null);
+            patchOnProperties(IDBTransaction.prototype, null);
+            patchOnProperties(IDBCursor.prototype, null);
+        }
+        if (supportsWebSocket) {
+            patchOnProperties(WebSocket.prototype, null);
+        }
+    }
+    else {
+        // Safari, Android browsers (Jelly Bean)
+        patchViaCapturingAllTheEvents();
+        patchClass('XMLHttpRequest');
+        if (supportsWebSocket) {
+            apply(_global);
+        }
+    }
+}
+function canPatchViaPropertyDescriptor() {
+    if (isBrowser && !Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'onclick') &&
+        typeof Element !== 'undefined') {
+        // WebKit https://bugs.webkit.org/show_bug.cgi?id=134364
+        // IDL interface attributes are not configurable
+        var desc = Object.getOwnPropertyDescriptor(Element.prototype, 'onclick');
+        if (desc && !desc.configurable)
+            return false;
+    }
+    Object.defineProperty(XMLHttpRequest.prototype, 'onreadystatechange', {
+        get: function () {
+            return true;
+        }
+    });
+    var req = new XMLHttpRequest();
+    var result = !!req.onreadystatechange;
+    Object.defineProperty(XMLHttpRequest.prototype, 'onreadystatechange', {});
+    return result;
+}
+
+var unboundKey = zoneSymbol('unbound');
+// Whenever any eventListener fires, we check the eventListener target and all parents
+// for `onwhatever` properties and replace them with zone-bound functions
+// - Chrome (for now)
+function patchViaCapturingAllTheEvents() {
+    var _loop_1 = function (i) {
+        var property = eventNames[i];
+        var onproperty = 'on' + property;
+        self.addEventListener(property, function (event) {
+            var elt = event.target, bound, source;
+            if (elt) {
+                source = elt.constructor['name'] + '.' + onproperty;
+            }
+            else {
+                source = 'unknown.' + onproperty;
+            }
+            while (elt) {
+                if (elt[onproperty] && !elt[onproperty][unboundKey]) {
+                    bound = Zone.current.wrap(elt[onproperty], source);
+                    bound[unboundKey] = elt[onproperty];
+                    elt[onproperty] = bound;
+                }
+                elt = elt.parentElement;
+            }
+        }, true);
+    };
+    for (var i = 0; i < eventNames.length; i++) {
+        _loop_1(i);
+    }
+
+}
+
+/**
+ * @license
+ * Copyright Google Inc. All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+function registerElementPatch(_global) {
+    if (!isBrowser || !('registerElement' in _global.document)) {
+        return;
+    }
+    var _registerElement = document.registerElement;
+    var callbacks = ['createdCallback', 'attachedCallback', 'detachedCallback', 'attributeChangedCallback'];
+    document.registerElement = function (name, opts) {
+        if (opts && opts.prototype) {
+            callbacks.forEach(function (callback) {
+                var source = 'Document.registerElement::' + callback;
+                if (opts.prototype.hasOwnProperty(callback)) {
+                    var descriptor = Object.getOwnPropertyDescriptor(opts.prototype, callback);
+                    if (descriptor && descriptor.value) {
+                        descriptor.value = Zone.current.wrap(descriptor.value, source);
+                        _redefineProperty(opts.prototype, callback, descriptor);
+                    }
+                    else {
+                        opts.prototype[callback] = Zone.current.wrap(opts.prototype[callback], source);
+                    }
+                }
+                else if (opts.prototype[callback]) {
+                    opts.prototype[callback] = Zone.current.wrap(opts.prototype[callback], source);
+                }
+            });
+        }
+        return _registerElement.apply(document, [name, opts]);
+    };
+}
+
+/**
+ * @license
+ * Copyright Google Inc. All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+var set = 'set';
+var clear = 'clear';
+var blockingMethods = ['alert', 'prompt', 'confirm'];
+var _global = typeof window === 'object' && window || typeof self === 'object' && self || global;
+patchTimer(_global, set, clear, 'Timeout');
+patchTimer(_global, set, clear, 'Interval');
+patchTimer(_global, set, clear, 'Immediate');
+patchTimer(_global, 'request', 'cancel', 'AnimationFrame');
+patchTimer(_global, 'mozRequest', 'mozCancel', 'AnimationFrame');
+patchTimer(_global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');
+for (var i = 0; i < blockingMethods.length; i++) {
+    var name = blockingMethods[i];
+    patchMethod(_global, name, function (delegate, symbol, name) {
+        return function (s, args) {
+            return Zone.current.run(delegate, _global, args, name);
+        };
+    });
+}
+eventTargetPatch(_global);
+propertyDescriptorPatch(_global);
+patchClass('MutationObserver');
+patchClass('WebKitMutationObserver');
+patchClass('FileReader');
+propertyPatch();
+registerElementPatch(_global);
+// Treat XMLHTTPRequest as a macrotask.
+patchXHR(_global);
+var XHR_TASK = zoneSymbol('xhrTask');
+var XHR_SYNC = zoneSymbol('xhrSync');
+var XHR_LISTENER = zoneSymbol('xhrListener');
+var XHR_SCHEDULED = zoneSymbol('xhrScheduled');
+function patchXHR(window) {
+    function findPendingTask(target) {
+        var pendingTask = target[XHR_TASK];
+        return pendingTask;
+    }
+    function scheduleTask(task) {
+        self[XHR_SCHEDULED] = false;
+        var data = task.data;
+        // remove existing event listener
+        var listener = data.target[XHR_LISTENER];
+        if (listener) {
+            data.target.removeEventListener('readystatechange', listener);
+        }
+        var newListener = data.target[XHR_LISTENER] = function () {
+            if (data.target.readyState === data.target.DONE) {
+                if (!data.aborted && self[XHR_SCHEDULED]) {
+                    task.invoke();
+                }
+            }
+        };
+        data.target.addEventListener('readystatechange', newListener);
+        var storedTask = data.target[XHR_TASK];
+        if (!storedTask) {
+            data.target[XHR_TASK] = task;
+        }
+        sendNative.apply(data.target, data.args);
+        self[XHR_SCHEDULED] = true;
+        return task;
+    }
+    function placeholderCallback() { }
+    function clearTask(task) {
+        var data = task.data;
+        // Note - ideally, we would call data.target.removeEventListener here, but it's too late
+        // to prevent it from firing. So instead, we store info for the event listener.
+        data.aborted = true;
+        return abortNative.apply(data.target, data.args);
+    }
+    var openNative = patchMethod(window.XMLHttpRequest.prototype, 'open', function () { return function (self, args) {
+        self[XHR_SYNC] = args[2] == false;
+        return openNative.apply(self, args);
+    }; });
+    var sendNative = patchMethod(window.XMLHttpRequest.prototype, 'send', function () { return function (self, args) {
+        var zone = Zone.current;
+        if (self[XHR_SYNC]) {
+            // if the XHR is sync there is no task to schedule, just execute the code.
+            return sendNative.apply(self, args);
+        }
+        else {
+            var options = { target: self, isPeriodic: false, delay: null, args: args, aborted: false };
+            return zone.scheduleMacroTask('XMLHttpRequest.send', placeholderCallback, options, scheduleTask, clearTask);
+        }
+    }; });
+    var abortNative = patchMethod(window.XMLHttpRequest.prototype, 'abort', function (delegate) { return function (self, args) {
+        var task = findPendingTask(self);
+        if (task && typeof task.type == 'string') {
+            // If the XHR has already completed, do nothing.
+            if (task.cancelFn == null) {
+                return;
+            }
+            task.zone.cancelTask(task);
+        }
+        // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no task
+        // to cancel. Do nothing.
+    }; });
+}
+/// GEO_LOCATION
+if (_global['navigator'] && _global['navigator'].geolocation) {
+    patchPrototype(_global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);
+}
+
+/**
+ * @license
+ * Copyright Google Inc. All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+})));
Index: src/main/resources/angular_io/tsconfig.json
===================================================================
--- src/main/resources/angular_io/tsconfig.json	(revision 0)
+++ src/main/resources/angular_io/tsconfig.json	(revision 0)
@@ -0,0 +1,19 @@
+{
+  "compilerOptions": {
+    "declaration":false,
+    "target": "es5",
+    "module": "system",
+    "moduleResolution": "node",
+    "sourceMap": true,
+    "emitDecoratorMetadata": true,
+    "experimentalDecorators": true,
+    "removeComments": true,
+    "noImplicitAny": false,
+    "suppressImplicitAnyIndexErrors": true,
+    "outDir": "target/app"
+  },
+  "exclude": [
+     "node_modules",
+     "public"
+ ]
+}
Index: src/main/resources/angular_io/tslint.json
===================================================================
--- src/main/resources/angular_io/tslint.json	(revision 0)
+++ src/main/resources/angular_io/tslint.json	(revision 0)
@@ -0,0 +1,93 @@
+{
+  "rules": {
+    "class-name": true,
+    "comment-format": [
+      true,
+      "check-space"
+    ],
+    "curly": true,
+    "eofline": true,
+    "forin": true,
+    "indent": [
+      true,
+      "spaces"
+    ],
+    "label-position": true,
+    "label-undefined": true,
+    "max-line-length": [
+      true,
+      140
+    ],
+    "member-access": false,
+    "member-ordering": [
+      true,
+      "static-before-instance",
+      "variables-before-functions"
+    ],
+    "no-arg": true,
+    "no-bitwise": true,
+    "no-console": [
+      true,
+      "debug",
+      "info",
+      "time",
+      "timeEnd",
+      "trace"
+    ],
+    "no-construct": true,
+    "no-debugger": true,
+    "no-duplicate-key": true,
+    "no-duplicate-variable": true,
+    "no-empty": false,
+    "no-eval": true,
+    "no-inferrable-types": true,
+    "no-shadowed-variable": true,
+    "no-string-literal": false,
+    "no-switch-case-fall-through": true,
+    "no-trailing-whitespace": true,
+    "no-unused-expression": true,
+    "no-unused-variable": true,
+    "no-unreachable": true,
+    "no-use-before-declare": true,
+    "no-var-keyword": true,
+    "object-literal-sort-keys": false,
+    "one-line": [
+      false,
+      "check-open-brace",
+      "check-catch",
+      "check-else",
+      "check-whitespace"
+    ],
+    "quotemark": [
+      false,
+      "single"
+    ],
+    "radix": true,
+    "semicolon": [
+      "always"
+    ],
+    "triple-equals": [
+      true,
+      "allow-null-check"
+    ],
+    "typedef-whitespace": [
+      false,
+      {
+        "call-signature": "nospace",
+        "index-signature": "nospace",
+        "parameter": "nospace",
+        "property-declaration": "nospace",
+        "variable-declaration": "nospace"
+      }
+    ],
+    "variable-name": false,
+    "whitespace": [
+      false,
+      "check-branch",
+      "check-decl",
+      "check-operator",
+      "check-separator",
+      "check-type"
+    ]
+  }
+}
Index: src/main/resources/index_angular.html
===================================================================
--- src/main/resources/index_angular.html	(revision 0)
+++ src/main/resources/index_angular.html	(revision 0)
@@ -0,0 +1,106 @@
+<!DOCTYPE html>
+<html>
+<head>
+  <script>document.write('<base href="' + document.location + '" />');</script>
+  <title>Angular Tour of Heroes</title>
+  <meta charset="UTF-8">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  <link type="text/css" rel="stylesheet" href="/coreStaticWeb/css/jqueryui.css"/>
+  <link href="/coreStaticWeb/css/1.15/bootstrap/3.0.2/bootstrap.min.css" rel="stylesheet">
+  <link href="/coreStaticWeb/css/1.15/nonresponsive.css" rel="stylesheet" type="text/css">
+  <link href="/coreStaticWeb/css/1.15/font-awesome/css/font-awesome.min.css" rel="stylesheet">
+  <link href="/coreStaticWeb/css/1.15/core.css" rel="stylesheet" type="text/css">
+  <link href="/coreStaticWeb/css/1.15/wfGrid.css" rel="stylesheet" type="text/css">
+  <link href="/coreStaticWeb/css/1.15/wfModal.css" rel="stylesheet" type="text/css">
+
+  <script src="/coreStaticWeb/js/libs/jquery/jquery.min.js"></script>
+  <script src="/coreStaticWeb/js/libs/jquery/jquery-ui-modified.js"></script>
+  <script src="/coreStaticWeb/js/libs/angular/1.3.0/angular.min.js"></script>
+  <script src="/coreStaticWeb/js/libs/angular/1.3.0/angular-route.min.js"></script>
+  <script src="/coreStaticWeb/js/libs/angular/1.3.0/angular-sanitize.min.js"></script>
+  <script src="/coreStaticWeb/js/libs/jquery/jquery.superfish.js"></script>
+  <script src="js/libs/coretools.angular.js"></script>
+
+  <!-- angular2 -->
+  <script src="angular_io/thirdparty/other/shim.min.js"></script>
+  <script src="angular_io/thirdparty/other/zone.js"></script>
+  <script src="angular_io/thirdparty/other/system.js"></script>
+  <script src="angular_io/scripts/systemjs.config.web.js"></script>
+</head>
+
+<body>
+  <div ng-include src="pageLoadingPopUpUrl"></div>
+ <!--  <wf-grid-demo></wf-grid-demo> -->
+  <div ng-controller="MenuListCtrl">
+    <div ng-include src="adminHeaderUrl"></div>
+    <div>
+
+      <div id="body-panel">
+        <table id="body-panel-flex">
+          <tr>
+            <td id="content-left-rail"ng-include src="adminMenuUrl"></td>
+            <td>
+              <div id="content-right"  ng-view autoscroll="true"> </div>
+              <div id="footer" align="center"><label>About CORE Sales and Fulfillment | Help | Support &copy; 2014 Wells Fargo & Company</label></div>
+            </td>
+          </tr>
+        </table>
+      </div>
+    </div>
+  </div>
+
+  <wf-alert message="alertMsg" on-close="onAlertClose"></wf-alert>
+
+  <script type="text/javascript">
+    function getURL(url) {
+      return $.ajax({
+        type: "GET",
+        url: url,
+        cache: false,
+        async: false
+      }).responseText;
+    };
+  </script>
+
+  <script>
+  	$(function() {
+  		$(document).tooltip();
+  		$("#topNav").superfish();
+  		//.menu({ position: { my: "left bottom", at: "right-5 top+5" } });
+  		$("#header-tabs").tabs({
+  			active : 0
+  		});
+
+  		$("#leftMenu").menu();
+
+  		$(".headerLink").click(function() {
+  			$("#pageContent").html("<h1>" + this.innerHTML + "</h1>");
+  		});
+  		$("#leftMenu li a").click(function() {
+  			$("#pageContent").html("<h1>" + this.innerHTML + "</h1>");
+  		});
+  	});
+
+  	var sendToAdrum = (function() {
+  		"use strict";
+
+  		var userName,userRoles,jobTitle;
+
+  		var setUserData = function(userInfo) {
+  		 ADRUM.command("addUserData", "User Name", userInfo.fullName);
+  		 ADRUM.command("addUserData", "Role", userInfo.staticGroups);
+  		 ADRUM.command("addUserData", "Location", userInfo.userLocation);
+  		  addToMap('User Name',userInfo.fullName);
+  		  addToMap('Role', userInfo.staticGroups);
+  		  addToMap('Location', userInfo.userLocation);
+  		};
+
+  		return {
+  			setUserData : setUserData
+  		};
+
+  	}());
+  </script>
+</body>
+</html>
+
Index: src/main/resources/views/partials/common/menuTemplate.html
===================================================================
--- src/main/resources/views/partials/common/menuTemplate.html	(revision 563125)
+++ src/main/resources/views/partials/common/menuTemplate.html	(working copy)
@@ -8,6 +8,7 @@
 	            <a><h4 class="panel-title">Production Support</h4></a>
         </div>
         <div class="panel-body collapse in" ng-show="!prodSupportCollapsed">
+           <div id="wfGridDemoItem"><a  href="" wf-core-url="/wfGridDemo">Angular 2 Demo</a></div>
             <div id="editEmailTemplate"><a href="" wf-core-url="/editEmailTemplate">Edit Email Template</a></div>
 	        <div id="dealSearchMenuItem"><a href="" wf-core-url="/dealSearch">Deal Search</a></div>
 	        <div id="dealSummaryMenuItem"><a href="" wf-core-url="/dealSummary">Deal Summary</a></div>
